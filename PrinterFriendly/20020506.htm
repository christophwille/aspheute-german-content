<HTML>
<HEAD>
<TITLE>Schreib&quot;kunst&quot; f&uuml;r Programmierer, Teil I</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Im ersten von zwei Artikeln &uuml;ber die Kunst des Schreibens besch&auml;ftigen wir uns mit den Grundlagen guten, klaren Schreibstils.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Technisches Schreiben,Dokumentation,Schreibstil,Stilrichtlinien,Stil">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Schreib&quot;kunst&quot; f&uuml;r Programmierer, Teil I</H1>
<p>
Geschrieben von: <a href="../autoren/bernhardspuida.htm">Bernhard Spuida</a><br>
Kategorie: <a href="../kategorien/Dokumentation.htm">Dokumentation</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20020506"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Im ersten von zwei Artikeln &uuml;ber die Kunst des Schreibens besch&auml;ftigen wir
uns mit den Grundlagen guten, klaren Schreibstils. Wieso, so fragst Du Dich jetzt, ist f&uuml;r mich als 
Programmierer guter Schreibstil wichtig? Ganz einfach: die Benutzer unserer Programme wollen - ebenso wie die 
Leser der Artikel hier auf ASPheute - m&ouml;glichst schnell Nutzen aus dem Gelesenen ziehen.
</p>
<p>
Und guter Schreibstil ist nicht zuletzt auch Werbung f&uuml;r uns selbst. Mal ehrlich: liest sich die Dokumentation 
schlecht, sind wir meist auch sofort gegen&uuml;ber der Software voreingenommen. Ganz zu schweigen von unserer 
Meinung vom Programmierer. Dabei ist gutes, verst&auml;ndliches Schreiben nicht schwieriger zu erreichen als 
unklarer Stil - wir haben meist sogar weniger M&uuml;he dabei!
</p>
<p>
F&uuml;r diese Artikel wird nichts besonderes vorausgesetzt. Au&szlig;er vielleicht ein wenig Ehrgeiz, besser zu werden. 
Und Bereitschaft, sich durch &Uuml;bung weiterzuentwickeln. Das trifft auch auf mich zu. Also mit Anregungen, 
Erg&auml;nzungen und konstruktiver Kritik bitte an mich wenden. Ich freue mich &uuml;ber alles was ich von Dir, 
Leser, dazulernen kann.
</p>

<h2>Theorie</h2>
<p>
Unsere Leser ben&ouml;tigen genauso wie ein Compiler die Einhaltung einer spezifischen Syntax, damit unser Text 
richtig verstanden wird. Ebenso kann Sprache genauso wie Programmcode verwickelt oder strukturiert sein mit 
&auml;hnlichen Folgen f&uuml;r die 'Performance' wie bei einem Programm. Im Gegensatz zu einem Compiler bildet 
sich ein menschlicher Leser allerdings ein Urteil &uuml;ber den Autor und seine F&auml;higkeiten.
</p>
<p>
Das Verst&auml;ndnis von geschriebenem Text beruht auf drei deutlich unterscheidbaren Eigenschaften:
</p>

<ul>
	<li>Leserlichkeit</li>
	<li>Lesbarkeit</li>
	<li>Verst&auml;ndlichkeit</li>
</ul>

<p>
Die erste dieser Eigenschaften k&ouml;nnen wir als Autoren im Allgemeinen nicht beeinflussen. Die optische 
Gestaltung liegt in den H&auml;nden der Layouter und Typographen denen wir unser Werk zur Fertigstellung 
&uuml;bergeben.
</p>
<p>
Die zweite Eigenschaft werden wir hier behandeln, da es f&uuml;r unseren Erfolg wichtig ist, da&szlig; der Leser 
unseren Text <i>liest</i>.
</p>
<p>
Mit der dritten werden wir uns ebenfalls besch&auml;ftigen, da wir ja sichergehen wollen, da&szlig; unsere Leser 
den Zweck unseres Textes <i>verstehen</i>.
</p>
<p>
Die Eigenschaften zwei und drei &uuml;berschneiden sich zwar teilweise, aber wir werden sie trotzdem 
getrennt behandeln. Um zu verdeutlichen, was konkret unter diesen drei Eigenschaften verstehen ist, betrachten wir 
ein Beispiel das wohl jeder kennt - Versicherungsvertr&auml;ge und AGBs auf der R&uuml;ckseite von Lieferscheinen, 
die wohl notorisch unlesbarsten Dokumente.
</p>

<ul>
	<li>Leserlichkeit: Wird unter anderem gesteuert durch die Schriftwahl (in diesen F&auml;llen im allgemeinen 
		eine serifenlose Schriftart), Schriftgr&ouml;&szlig;e (m&ouml;glichst klein, allgemein 6 -7 Punkt), Zeilenabstand 
		(einzeilig oder enger) und Zeilenl&auml;nge (nicht unter 80 bis hundert Zeichen) sowie durch den Kontrast - 
		Grau auf Wei&szlig; ist schlechter lesbar als Schwarz auf Wei&szlig;.</li>
	<li>Lesbarkeit: Minimierung erfolgt durch Satzbau (Schachtels&auml;tze), Wortwahl und Satzl&auml;nge.</li>
	<li>Verst&auml;ndlichkeit: Die Anwendung eines bei oberfl&auml;chlicher Betrachtung wenig logischen Aufbaus 
		mit verstreuten Definitionen, R&uuml;ckbez&uuml;gen, vorgezogenen Schlu&szlig;klauseln etc. erschwert dem 
		Leser sein Ziel zu erreichen.</li>
</ul>

<p>
Im zweiten Artikel werden wir uns dann mit Stilfragen besch&auml;ftigen. Schlie&szlig;lich mu&szlig; technisches Schreiben ja 
nicht gleichbedeutend mit schlechtem oder zumindest uninteressantem Schreiben sein.
</p>
<p>
Und jetzt auf ins Vergn&uuml;gen.
</p>

<h2>Lesbarkeit</h2>
<p>
Der Vorgang des Lesens und Verstehens ist wesentlich komplexer als der physische Vorgang des Sehens und Entzifferns 
von Buchstaben und Textsegmenten.
</p>
<p>
Nach dieser ersten Stufe - die unter 'Leserlichkeit' f&auml;llt - kommen wir zu der Stufe auf der der gelesene Text 
in einzelne 'Tokens' zerlegt wird, genau so wie es ein Compiler tut. Das ist Sache der Lesbarkeit, wir m&uuml;ssen 
uns also mit den folgenden Themen besch&auml;ftigen wenn wir diesen Schritt erfolgreich &uuml;berstehen wollen:
</p>

<ol>
	<li>Die S&auml;tze m&uuml;ssen wohlgeformt sein</li>
	<li>Die L&auml;nge der S&auml;tze darf ein gewisses Maximum nicht &uuml;berschreiten</li>
	<li>S&auml;tze d&uuml;rfen nicht zu kurz sein</li>
	<li>Rekursion mu&szlig; minimiert werden</li>
	<li>Abwechslung in der Wortwahl tut Not</li>
</ol>

<p>
Ist ein technischer Text schwer lesbar, so wird der Leser meist annehmen da&szlig; der Code den der Autor 
schreibt &auml;hnlich aussieht. Programmcode ist genauso wie unser Text in einer Sprache verfasst, es liegt also 
nahe von der Qualit&auml;t des Textes auf die Qualit&auml;t des Codes zu schlie&szlig;en.
</p>

<h3>1. Wohlgeformte S&auml;tze</h3>
<p>
Unter 'wohlgeformten S&auml;tzen' sind nicht einfach grammatikalisch korrekt gebaute S&auml;tze zu verstehen, sondern 
klar gebaute S&auml;tze. Wir werden dies anhand einiger Negativbeispiele untersuchen und L&ouml;sungsm&ouml;glichkeiten 
vorstellen.
</p>

<!-- Beispiel -->
<p><b>Satz unvollst&auml;ndig.</b></p>

<p>
Das Auslassen wichtiger Satzteile ist unter allen Umst&auml;nden zu vermeiden. In diesem Falle fehlen sowohl Verb als 
auch Partizip. Im Zweifelsfall sollte man seinen Text laut vorlesen. Derartige Fehler treten h&auml;ufig in langen 
Schachtels&auml;tzen auf. Falls man diese S&auml;tze nicht aufteilen kann, sind sie besonders sorgf&auml;ltig zu 
korrigieren.
</p>

<!-- Beispiel -->
<p>
<b>In diesem Fall, der ja einen wichtigen Punkt illustrieren soll, haben wir, wie klar ersichtlich, zu viele Kommas 
eingesetzt.</b>
</p>

<p>
Zeichensetzung sollte sparsam verwendet werden. Nicht &uuml;berall wo es sinnvoll scheint geh&ouml;rt tats&auml;chlich 
auch ein Komma hin. Die komplexen Regeln der Kommasetzung in der Deutschen Sprache k&ouml;nnen ohne gro&szlig;e Verluste 
durch eine Handvoll Faustregeln ersetzt werden. Siehe dazu das unten angef&uuml;hrte Buch 'Deutsch f&uuml;r Profis'. Ein 
wichtiger Punkt bei der Kommasetzung ist der, da&szlig; <b>Kommas keine Sprechpausen beim Lesen</b> darstellen. 
Das war im fr&uuml;hen Mitteldeutsch so, gilt heute jedoch nicht mehr. Kommas dienen zur Trennung von Sinneinheiten.  
Der Aufruf zur Sparsamkeit gilt auch f&uuml;r alle anderen Satzzeichen.
</p>
<p>
Es lie&szlig;en sich nat&uuml;rlich noch unz&auml;hlige weitere Negativbeispiele konstruieren, aber bei der t&auml;glichen 
Lekt&uuml;re sollten uns genug davon unterkommen. Bei bewu&szlig;tem Lesen lernen wir.
</p>
<p>
Hier ein Negativbeispiel aus einem von mir verfassten Artikel:
</p>

<!-- Beispiel -->
<p><b>Voraussetzung f&uuml;r das bessere Verst&auml;ndnis des Artikels ist eine genaue Kenntnis des julianischen Kalenders in 
Bezug auf datumsm&auml;&szlig;ig bedingte Br&auml;uche. </b></p>

<p>
Dieses (absichtlich so formulierte) Monster soll lediglich sagen, da&szlig; man diesen am 1. April 
ver&ouml;ffentlichten Artikel <a href="../artikel/20020401.htm">Debugging in der Tiefe</a> wegen des 
Erscheinungsdatums nicht ernst nehmen sollte.
</p>

<h3>2. &Uuml;berlange S&auml;tze</h3>
<p>
H&auml;ufig finden wir S&auml;tze vor die zu lang sind. Unser Kurzzeitged&auml;chtnis hat nur eine begrenzte 
Kapazit&auml;t. &Auml;hnlich wie Telefonnummern f&uuml;nf plus/minus zwei Ziffern lang sein sollten gibt es auch 
Grenzen f&uuml;r die Satzl&auml;nge.
</p>

<!-- Beispiel -->
<p>
<b>Es l&auml;sst sich eine Regel angeben - die jedoch beileibe nicht die einzige derartige Regel darstellt - 
da&szlig; ein Satz nicht mehr als die erw&uuml;nschte L&auml;nge von f&uuml;nfzehn Worten erreichen sollte, 
keinesfalls unter die Grenze von sieben Worten fallen darf und niemals &uuml;ber die Ertr&auml;glichkeitsgrenze 
von zwanzig Worten hinausgehen darf, obwohl sich l&auml;ngere S&auml;tze durchaus in der Hochliteratur finden wo 
selbst Zeichensetzung, so wie sie hier zur Erleichterung des Lesevorganges eingesetzt wird, zur Erzielung 
neuartiger, experimenteller Effekte ausgelassen wird.</b>
</p>

<p>
Dieses Beispiel ist mit seinen 77 Worten wohl etwas l&auml;nger als das was wir  in unseren eigenen Werken erwarten. 
Liest man jedoch seine eigenen Texte, so finden sich mitunter &auml;hnlich lange S&auml;tze, die zum Beispiel eine 
Abfolge von Ereignissen und ihrer Behandlung beschreiben. Komplexe Gedankeng&auml;nge profitieren von der Zerlegung 
in S&auml;tze handlicher L&auml;nge. Die Versuchung einfach dahinzuschreiben ist gro&szlig;. Widerstehen! Die Logik des 
Textes profitiert davon. Was nicht unmittelbar zum Verst&auml;ndnis ben&ouml;tigt wird, kann ausgelassen werden.
</p>

<h3>3. Kurze S&auml;tze</h3>
<p>
Kurze S&auml;tze lesen sich leicht, wirken jedoch atemlos und unn&ouml;tig aufgeregt.
</p>

<!-- Beispiel -->
<p><b>S&auml;tze k&ouml;nnen kurz sein. Dann lesen sie sich leichter. Und sind verst&auml;ndlicher. Aber sie 
wirken billig. Und f&uuml;hren zu Unruhe beim Leser.</b>
</p>

<p>
Dazu mu&szlig; nicht mehr viel gesagt werden, da das Beispiel die Aussage gut illustriert. Wenn etwas wert ist, gesagt 
zu werden, dann ist es auch wert gut gesagt zu werden ohne die Sprache in St&uuml;cke zu rei&szlig;en. Die menschliche 
Sprache ist keine RISC-Sprache.
</p>
<p>
Allgemein sollte man die L&auml;nge der S&auml;tze in den Grenzen variieren, die im Negativbeispiel unter Punkt 2 
dargelegt wurden. Interessantes Schreiben h&auml;ngt wesentlich von der gezielten Variation der Satzl&auml;ngen und 
der Wortwahl ab - zu letzterer weiter unten mehr.
</p>

<h3>4. Rekursion</h3>
<p>
S&auml;tze werden oftmals zu zirkul&auml;ren F&auml;llen von Rekursion w&auml;hrend des Lesens falls die Bez&uuml;ge 
auf die jeweiligen Subjekte und Objekte unklar bleiben. Dies ist eine Folge der Verwendung des selben Pronomens 
f&uuml;r beide:
</p>

<!-- Beispiel -->
<p>
<b>Es ist nicht einfach zu verstehen um was es geht, wenn es v&ouml;llig unklar bleibt von was wir eigentlich 
schreiben - inzwischen sollte es klar sein, um was es hier geht.</b>
</p>

<p>
In einem derartigen Fall ist es ratsam, bei einem Auftreten des jeweiligen Subjekts/Objekts - vorzugsweise beim 
ersten Auftreten - das Pronomen durch die Bezeichnung des Subjekts/Objekts zu ersetzen. Eine derartige Rekursion ist 
h&auml;ufig ein Zeichen f&uuml;r Faulheit auf Seiten des Autors, da sie eine Unwilligkeit des Autors andeutet 
einen Gedanken sauber auszuformulieren. Dies ist jedoch nur eine kurzfristige Ersparnis, da 
erfahrungsgem&auml;&szlig; Leser den Autor mit Bitte um n&auml;here Erkl&auml;rung kontaktieren und ihm somit 
unn&ouml;tige Arbeit aufhalsen.
</p>
<p>
Eine andere Form von Rekursionsfehler tritt bei unseren Lesern auf wenn wir sie mit &uuml;berladenen S&auml;tzen 
voller Einsch&uuml;be, Ellipsen und anderer rhetorischen Techniken konfrontieren. All das ben&ouml;tigt Platz auf 
dem 'Stack' des Lesers - und dieser Stack ist nicht tief. 'Push' und 'pop' &uuml;ber mehr als drei Ebenen f&uuml;hrt 
zur Katastrophe - f&uuml;r das Verst&auml;ndnis unseres Satzes!
</p>

<!-- Beispiel -->
<p>
<b>Der Leser, also der beabsichtigte Rezipient unseres Textes, eines hoffentlich klar und logisch aufgebauten 
Dokuments, wird, so er in der Lage ist unsere Prosa zu verstehen, zu einer wohlfundierten Meinung dar&uuml;ber 
gelangen, was der jeweils vorliegende Satz, so wie dieser, ihm, dem Leser, mitteilt.</b>
</p>

<p>
Der obige Satz ist grammatikalisch korrekt, wird aber wohl beim durchschnittlichen Leser einen Stack&uuml;berlauf 
provozieren. Derartiger verschachtelter Stil sollte wo immer m&ouml;glich vermieden werden. Ebenso wie rekursiver 
Code k&ouml;nnen solche S&auml;tze h&auml;ufig 'ausgewalzt werden. Zerlege derartige Monster in Teile denn 
k&uuml;rzere S&auml;tze sind leichter lesbar. Falls dies nicht m&ouml;glich ist, geh&ouml;ren die Teile die 
zusammen geh&ouml;ren m&ouml;glichst nahe beieinander angeordnet.
</p>

<h3>5. Wortwahl</h3>
<p>
Der Vorgang des Lesens ist f&uuml;r den Leser stets anstrengend. Daher ist es unsere Aufgabe, ihm diesen Vorgang so 
leicht wie m&ouml;glich zu machen. Eine M&ouml;glichkeit dies zu erreichen ist es, Abwechslung in unsere Wortwahl 
zu bringen.
</p>

<!-- Beispiel -->
<p>
<b>Verwendet man wieder und wieder die selben Worte um wieder und wieder die selben Themen zu behandeln, so wird 
mit jeder Wiederholung die Bereitschaft weiterzulesen geringer und geringer.</b>
</p>

<p>
F&uuml;r jedes beliebige Wort steht uns mindestens ein Synonym zur Verf&uuml;gung. Man sollte nicht z&ouml;gern, im 
Zweifelsfall einen Thesaurus zu verwenden um nach alternativen Worten zu suchen. Die wiederholte Verwendung von stets 
gleich lautenden Wendungen sollte vermieden werden, au&szlig;er man versucht k&uuml;nstlerische Intention zu 
transportieren - dies ist bei technischen Texten jedoch so gut wie nie der Fall. Und:
</p>

<div align=center>
<b>Niemals die gleichen er&ouml;ffnenden Worte in zwei oder mehr aufeinanderfolgenden S&auml;tzen 
verwenden. Die Wiederholung ist der Todfeind jedes Interesses beim Leser.</b>
</div>

<h2>Verst&auml;ndlichkeit</h2>
<p>
Lesen ist ein komplexer Vorgang, bei dem auf die besprochene 'Tokenisierung' das 'Parsen' folgt - das Verstehen der 
einzelnen Symbole und deren Beziehungen untereinander. Diese beiden Schritte lassen sich jedoch nicht sauber trennen.
</p>
<p>
Ein gro&szlig;er Teil der Probleme mit der Verst&auml;ndlichkeit von Texten wurden bereits weiter oben unter dem Begriff 
der 'Rekursion' behandelt.
</p>

<div align=center>
<b>Rekursion ist der Feind der Verst&auml;ndlichkeit.</b>
</div>

<p>
Ein verst&auml;ndliches technisches Dokument besitzt stets einen logischen Aufbau. Jeder behandelte Gegenstand baut 
auf dem vorhergehenden auf. Wird ein neuer Begriff zur Behandlung des anstehenden Gegenstandes ben&ouml;tigt, so 
sollte er vor der Besch&auml;ftigung mit diesem Thema eingef&uuml;hrt werden. Dies gilt auf jeder Ebene vom Gesamttext 
&uuml;ber Kapitel und Abs&auml;tze des Textes bis hinab zu den einzelnen S&auml;tzen.
</p>

<p>
Die grundlegenden Schritte sind:
</p>
<ol>
	<li>Definition</li>
	<li>Behauptung/Theorem</li>
	<li>Erl&auml;uterung/Beweis</li>
	<li>Schlu&szlig;folgerung</li>
</ol>

<p>
Nat&uuml;rlich kann f&uuml;r manche Themen die klassische Struktur mit <i>'These, Antithese, Synthese'</i> angemessener 
sein, z.B. bei der Erl&auml;uterung von Designentscheidungen, doch ist meist die oben aufgef&uuml;hrte Abfolge genau 
das was wir ben&ouml;tigen.
</p>
<p>
Auf dem 'atomaren' Niveau eines Satzes, unterhalb seines Inhaltes, wird die Logik seiner Struktur durch reine 
Grammatik bestimmt. Deshalb ist eine grundlegende Kenntnis grammatischer Grundlagen notwendig um unsere Gedanken so 
dem Leser zu vermitteln wie wir es als Autoren beabsichtigen.
</p>

<h3>1. Definition</h3>
<p>
In diesem Abschnitt eines Dokuments werden alle f&uuml;r das Verst&auml;ndnis des Folgenden notwendigen Begriffe und 
Konzepte definiert. In manchen F&auml;llen gen&uuml;gt Bezugnahme auf zuvor im Dokument vorgestelltes Material. 
Bezugnahme auf sp&auml;ter besprochenes Material ist zu vermeiden. Sollte es aus irgendwelchen Gr&uuml;nden notwendig 
sein, so kann man die Definitionen in Endnoten oder ein Glossar auslagern. Fu&szlig;noten sind nicht f&uuml;r die Aufnahme 
von Definitionen bestimmt. Sie dienen zur weiteren Erkl&auml;rung des vorliegenden oder zur Darstellung von 
'non sequiturs'.
</p>

<h3>2. Behauptung/Theorem</h3>
<p>
Die Aufgabe dieses Abschnittes ist die Vorstellung des Grundgedankens oder des Konzeptes mit dem sich das Dokument 
oder der aktuelle Dokumentabschnitt besch&auml;ftigt.
</p>
<p>
Wir sollten auf einfache Art darstellen womit wir bei unserem Argument beginnen und wohin wir es zu f&uuml;hren 
beabsichtigen. Hier ist nicht der Platz um 'Warum' oder 'Wie' darzulegen. Das 'Warum' sollte aus den vorhergehenden 
Abschnitten des Dokuments klar sein, w&auml;hrend das 'Wie' Gegenstand des n&auml;chsten Abschnittes sein sollte.
</p>
<p>
In Benutzerhandb&uuml;chern ist dies der Ort, an dem die zu erkl&auml;rende Funktion vorgestellt wird.
</p>

<h3>3. Erl&auml;uterung/Beweis</h3>
<p>
Dieser Abschnitt unseres Dokuments dient dazu, die Rechtfertigung des zuvor pr&auml;sentierten Gedankens zu liefern. 
Dieser Abschnitt kann rein argumentativ sein - um z.B. architekturale Entscheidungen zu rechtfertigen - oder sich dem 
Stil mathematischer Beweise ann&auml;hern. Im Falle einer Programmimplementation ist dies der Ort um die Arbeitsweise 
Schritt f&uuml;r Schritt zu erkl&auml;ren. Handelt es sich um ein Benutzerhandbuch, sollte man hier die 
Programmoberfl&auml;che und die zur Durchf&uuml;hrung spezifischer Aufgaben notwendigen Schritte erkl&auml;ren.
</p>

<h3>4. Schlu&szlig;folgerung</h3>
<p>
Um den Erfolg eines Textes zu gew&auml;hrleisten, mu&szlig; eine Schlu&szlig;folgerung gezogen werden. In ihr sollten die oben 
genannten Schritte in Kurzform wiederholt und zusammengefasst werden. Dadurch wird der Eindruck des vorgestellten 
Inhaltes beim Leser nachhaltig verst&auml;rkt. Im Gegensatz zu einem Computer mu&szlig; der Mensch eine Anleitung mehrfach 
erhalten, bevor er sich f&uuml;r die Durchf&uuml;hrung entscheidet.
</p>
<p>
Die Aussage eines Textes mu&szlig; mehrfach wiederholt werden. Der menschliche Verstand kann sich mit 'Einmal und nie 
wieder' nicht anfreunden.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Wie man sieht, ist gutes, interessantes Schreiben nicht schwer und n&uuml;tzt Allen. Dem Leser wird seine Aufgabe 
erleichtert, uns Autoren wird Anerkennung f&uuml;r unsere gute Arbeit zuteil. In Teil II dieses Artikels werden wir 
uns mit Stilfragen besch&auml;ftigen. Bis dahin: viel Spa&szlig; und Erfolg beim Schreiben!
</p>

<h2>Literatur</h2>
<p>
<i>Wolf Schneider:</i> <b>Deutsch f&uuml;r Profis, Goldmann Verlag</b> - Ein absolutes Mu&szlig; f&uuml;r jeden der 
beruflich schreibt. Gut geschrieben, rein auf Praxis orientiert - der langj&auml;hrige Chefredakteur des 'Stern' 
wei&szlig; wovon er schreibt.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20020401.htm">Debugging in der Tiefe</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020401.htm</span><br>
<a href="../artikel/20020617.htm">Erstellen von HTML Help Dateien</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020617.htm</span><br>
<a href="../artikel/20020701.htm">Schreib"kunst" f&uuml;r Programmierer, Teil II</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020701.htm</span><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Eicsharpcode%2Enet%2FTechNotes%2F">ic#code Tech Notes</a><br>
<SPAN class="content">http://www.icsharpcode.net/TechNotes/</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
