<HTML>
<HEAD>
<TITLE>URL Rewriting am IIS</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="F&uuml;r den Apache Webserver gibt es schon seit geraumer Zeit (fast seit Ewigkeiten) ein Modul namens mod_rewrite, das URLs beliebig 'Umschreiben' kann. Heute werden wir so ein Tool f&uuml;r IIS kennenlernen.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Rewrite,URL Rewriting,ISAPI,Filter,ISAPI_REWRITE,Regular Expression,IIS">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>URL Rewriting am IIS</H1>
<p>
Geschrieben von: <a href="../autoren/carstenwawer.htm">Carsten Wawer</a><br>
Kategorie: <a href="../kategorien/Server.htm">Server</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20021106"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
F&uuml;r den Apache Webserver gibt es schon seit geraumer Zeit (fast seit Ewigkeiten) ein Modul namens mod_rewrite, das URLs beliebig 
"Umschreiben" kann. Dies reicht von einfachen Rewrites (vorgaukeln einer statischen Site) bis hin zu komplexen Rewrites die sich 
regul&auml;rer Ausdr&uuml;cke bedienen. Heute werden wir ein Tool f&uuml;r IIS kennenlernen, das uns genau diese Funktionalit&auml;t als ISAPI 
Filter bietet. 
</p>
<p>
Beginnen wir mit einem praktischen Beispiel f&uuml;r URL Rewriting - aus einer Produktdetail-URL mit angeh&auml;ngtem QueryString
</p>

<pre style="background='silver';">
http://www.meinserver.de/news/detail.asp?id=28
</pre>

<p>
k&ouml;nnte ein f&uuml;r Suchmaschinen unproblematisches
</p>

<pre style="background='silver';">
http://www.meinserver.de/news/detail/28.html
</pre>

<p>
werden. Der Job von mod_rewrite (und seinen IIS Geschwistern) ist es, den URL r&uuml;ckumzuwandeln bevor der Webserver mit der 
tats&auml;chlichen Bearbeitung beginnt.
</p>

<h2>URL-Rewrite f&uuml;r den IIS</h2>
<p>
Es gibt nicht nur f&uuml;r Apache solche Tools, sondern auch f&uuml;r den Internet Information Server gibt es Komponenten um URL-Rewriting 
zu nutzen. In Form von ISAPI-Filtern konvertieren diese die URLs auf Basis von Regeln und Regular Expressions.
</p>
<p>
Als Beispiel-Komponente habe ich mich f&uuml;r die Komponente <a href="http://www.isapirewrite.com/" target="_blank">ISAPI_Rewrite</a>
entschieden, die den nicht zu untersch&auml;tzenden Vorteil hat, in einer leicht eingeschr&auml;nkten Version kostenlos verf&uuml;gbar zu sein - 
dies erleichtert das erste Kennenlernen ungemein.
</p>

<h3>Installation </h3>
<p>
Auf der Produktwebsite von ISAPI_Rewrite laden wir uns zuallererst die "LITE-Version" der Komponente herunter. Ob wir die .exe 
oder oder die .msi-Datei nutzen h&auml;ngt nur davon ab, ob wir den Windows-Installer 1.1 auf dem Zielserver verf&uuml;gbar haben. Falls 
dem so ist, reicht die msi-Datei aus.
</p>
<p>
Die Installation verl&auml;uft recht unspektakul&auml;r. Wichtig ist nur zu beachten, da&szlig; das Tool den IIS-Admin-Dienst (und alle 
verkn&uuml;pften Dienste wie WWW, FTP und SMTP) f&uuml;r die Dauer der Installation abschaltet.
</p>

<IMG SRC="/artikel/Bilder/200211/20021106.png" width="506" height="497" alt="" border="0">

<p>
Nach der Installation &ouml;ffnen wir den Internetdienstmanager und finden innerhalb der ISAPI-Filter eine neue Eintragung: 
"ISAPI_Rewrite". Die Installation des Paketes wurde vollst&auml;ndig abgeschlossen, nun k&ouml;nnen wir an die Konfiguration des 
Filters gehen
</p>

<h3>Konfiguration</h3>
<p>
Im Installationsverzeichnis (z.B.: c:\Programme\Helios\ISAPI_REWRITE\) findet sich die entscheidende Datei zur 
Konfiguration, die Datei <b>httpd.ini</b>.
</p>

<pre style="background='silver';">
[ISAPI_Rewrite]

# Defend your computer from some worm attacks
RewriteRule .*(?:global.asa|default\.ida|root\.exe|\.\.).* . [F,I,O]
</pre>

<p>
Die oben gezeigte Regel macht die (NT-Administratoren sicherlich bekannten) Zugriffe auf global.asa, default.ida und root.exe 
unsch&auml;dlich. Dies trifft aber noch nicht ganz das Ziel unserer Bem&uuml;hungen, weshalb wir uns mit dieser Zeile nicht l&auml;nger 
besch&auml;ftigen und uns einer eigenen Regel zuwenden, aber zuerst sehen wir uns an, wie diese definiert sind.
</p>
<p>
Eine einfache Regel w&auml;re die folgende
</p>

<pre style="background='silver';">
RewriteRule /news/detail/(.*).html /news/detail.asp\?id=$1
</pre>

<p>
Diese Regel definiert anhand von Regular Expressions einen Ausdruck, der konvertiert werden soll. Ohne zu tief in die Regular 
Expressions steigen zu wollen, kann ich sagen, da&szlig; der Punkt (.) ein Sonderzeichen ist, das ein beliebiges Zeichen darstellt. 
Die Kombination mit dem Stern (*) hei&szlig;t, da&szlig; das vorherige Zeichen (in diesem Fall beliebig) auch noch beliebig oft vorkommen 
darf. Ein klassischer Platzhalter also.
</p>
<p>
Auf der rechten Seite finden wir die URL, auf die verwiesen wird. Wichtig sind hierbei zwei Dinge zu beachten:
</p>

<ul>
	<li>detail.asp\?id=
	<li>id=$1
</ul>

<p>
Der Backslash vor dem Fragezeichen ist n&ouml;tig um das (Zeichen) Fragezeichen vom  Sonderzeichen Fragezeichen zu unterscheiden. Der 
Ausdruck $1 bezieht sich auf den ersten Platzhalter in den Klammern. Es d&uuml;rfen bis zu neun Platzhalter genutzt werden.
</p>
<p>
Nun wollen wir uns aber eine etwas komplexere Regel ansehen
</p>

<pre style="background='silver';">
RewriteRule /sessionid/(.*)/id/(.*)/action/(.*)/(.*)/(.*).html /$4/$5\.asp\?sessionid=$1&amp;id=$2&amp;action=$3
</pre>

<p>
Was macht dieses "Unget&uuml;m"? Hier habe ich eine allgemeing&uuml;ltige Regel definiert, die mir die Arbeit in einem gr&ouml;&szlig;eren Projekt 
erleichtert. Nehmen wir an, die URLs wurden bisher in folgendem Format genutzt:
</p>

<pre style="background='silver';">
http://www.meinserver.de/presse/artikel.asp?sessionid=436dg35dsgf&amp;action=read&amp;id=2634
</pre>

<p>
und im gleichen Projekt existieren aber auch URLs wie:
</p>


<pre style="background='silver';">
http://www.meinserver.de/termine/termin.asp?sessionid=436dg35dsgf&amp;action=buchung&amp;id=363
</pre>

<p>
Trotzdem kann ich beide mit meiner oben beschriebenen Regel abbilden. Die URLs w&uuml;rden nun
</p>

<pre style="background='silver';">
http://www.meinserver.de/sessiondid/436dg35dsgf /id/2634/action/read/presse/artikel.html
</pre>

<p>
oder eben
</p>

<pre style="background='silver';">
http://www.meinserver.de/sessiondid/436dg35dsgf /id/363/action/buchung/termine/termin.html
</pre>

<p>
lauten. Die einzelnen Platzhalter k&ouml;nnen folgenderma&szlig;en zugeordnet werden:
</p>

<pre style="background='silver';">
RewriteRule /sessionid/(.*)/id/(.*)/action/(.*)/(.*)/(.*).html /$4/$5\.asp\?sessionid=$1&amp;id=$2&amp;action=$3
</pre>

<ol>
	<li>$1 ist die sessionid
	<li>$2 ist die id
	<li>$3 ist die action
	<li>$4 ist der Pfad
	<li>$5 ist der Filename ohne die .asp-Endung
</ol>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Dies war ein erster kleiner Einblick in die Arbeit mit ISAPI_Rewrite. Neben der Indizierung von dynamischen Webprojekten durch 
Suchmaschinen bietet die Nutzung einer solchen Komponente aber auch weitreichende andere M&ouml;glichkeiten. Dies geht von einer 
Client-Browser-basierten Weiterleitung in verschiedene Verzeichnisse bis zu den nicht zu untersch&auml;tzenden Sicherheitsaspekten 
bei der Nutzung eines solchen Filters.
</p>
<p>
Als Anmerkung sei noch gesagt, da&szlig; die frei nutzbare Version von ISAPI_Rewrite die Beschr&auml;nkung hat, nur eine globale 
Konfigurationsdatei zu unterst&uuml;tzen. In der Vollversion kann man f&uuml;r jede Website eine eigene Konfiguration anlegen.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Eisapirewrite%2Ecom%2F">ISAPI_Rewrite</a><br>
<SPAN class="content">http://www.isapirewrite.com/</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
