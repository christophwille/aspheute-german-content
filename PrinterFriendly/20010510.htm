<HTML>
<HEAD>
<TITLE>Beliebige Anzahl von Dateien uploaden</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Dieser Artikel bietet ein Beispiel, das dem Benutzer die M&ouml;glichkeit gibt mittels einer kostenlosen ASP Komponente eine von ihm frei w&auml;hlbare Anzahl von Dateien auf einen Webserver upzuloaden.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Upload,Dateiupload,Fileupload,file upload,Konfiguration,Installation">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Beliebige Anzahl von Dateien uploaden</H1>
<p>
Geschrieben von: <a href="../autoren/christianholm.htm">Christian Holm</a><br>
Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010510"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Dieser Artikel bietet ein Beispiel, das dem Benutzer die M&ouml;glichkeit gibt mittels einer kostenlosen
ASP Komponente eine von ihm frei w&auml;hlbare Anzahl von Dateien auf einen Webserver upzuloaden. Der Artikel erkl&auml;rt 
zun&auml;chst die f&uuml;r die Einrichtung der ASP Komponente n&ouml;tigen Installationsschritte und dann wird die L&ouml;sung 
mittels ASP programmiert.
</p>

<p>
Die f&uuml;r das Beispielscript ben&ouml;tigte ASP Komponente k&ouml;nnen Sie, wie eingangs schon erw&auml;hnt, kostenlos von
<a href="http://www.aspsmart.com/" target="_blank">AspSmart.com</a> downloaden. Es handelt sich hierbei um die <i>aspSmartUpload</i>
Komponente, welche umfangreiche M&ouml;glichkeiten zum Up- und auch Download enth&auml;lt. Sie k&ouml;nnen dem
Benutzer zus&auml;tzlich auch Verzeichnisse und/oder Dateierweiterungen sperren, soda&szlig; er nur Dateien up- bzw.
downloaden kann, die f&uuml;r ihn bestimmt sind. 
</p>

<p>
Damit Ihnen die Benutzer Ihren Server nicht mit riesigen Dateien vollramschen, k&ouml;nnen Sie mit der <i>MaxFileSize</i>
Property (Eigenschaft) einzelne Dateien in ihrer Gr&ouml;&szlig;e beschr&auml;nken. Weiters k&ouml;nnen Sie auch die gesamte Gr&ouml;&szlig;e des
Uploads beschr&auml;nken. 
</p>

<p>
Die Installation der ASP Komponente ist nicht besonders aufwendig. Einfach die Zip-Datei downloaden und in ein 
Verzeichnis am Webserver extrahieren. Danach registieren Sie die <b>aspSmartUpload.dll</b> Library mit
<i>regsvr32 Webserverpfad\aspSmartUpload.dll</i> in der Run Dialogbox oder am Kommandoprompt. Zus&auml;tzlich m&uuml;ssen Sie die
<b>aspSmartUploadUtil.dll</b> Library in das <i>\winnt\system32</i> Verzeichnis kopieren. Nat&uuml;rlich k&ouml;nnten Sie diese
Library auch im urspr&uuml;nglichen Verzeichnis lassen, wo sie bei der Extraktion des Archivs hineinkopiert wurde. 
</p>

<p>
Wenn Sie diese Methode w&auml;hlen, m&uuml;ssen Sie aber mit der <i>Path</i> Anweisung der ASP Komponete einen Zugang auf die
<b>aspSmartUploadUtil.dll</b> Library erm&ouml;glichen, 
da die ASP Komponente eben w&auml;hrend der Ausf&uuml;hrung diese ben&ouml;tigt. Nach dieser einfachen Installation ist die
Komponente schon einsatzbereit und wir k&ouml;nnen uns dem heutigen Artikelbeispiel widmen. Gehen wir nun die wichtigsten 
Punkte des ASP-Scripts einzeln durch:
</p>

<pre style="background='silver';">
nCount = CInt(Request.Querystring("Cnt"))
bIsPostback = CLng(Request.ServerVariables("CONTENT_LENGTH"))
</pre>

<p>
Da ja die Anzahl der Dateien, die upgeloadet werden soll, vom Benutzer gew&auml;hlt werden kann (sofern sie nicht 
von Ihnen begrenzt wurde) mu&szlig; dieser dem Script einen g&uuml;ltigen numerischen Wert &uuml;bergeben. Dies ist 
hier einfach mit Hilfe des Einlesens eines Querystrings namens <i>Cnt</i> gel&ouml;st. Da Sie von einem Querystring 
eben - wie der Name schon sagt - nur einen String erhalten, m&uuml;ssen wir diesen mit der <i>CInt</i> Funktion in einen
Integerwert umwandeln.
</p>

<p>
Die Umwandlung auf Integer ist hier deshalb notwendig, da ja der der <i>nCount</i> Variable zugewiesene Wert sp&auml;ter im Script 
Einflu&szlig; auf die Generierung des Uploadformulars hat. Die <i>bIsPostback</i> Variable wird f&uuml;r die Erkennung eines 
stattgefundenen PostBacks zum Server verwendet, welcher den Proze&szlig;flu&szlig; der Skriptabarbeitung bestimmt.
</p>

<pre style="background='silver';">
&lt;form method="post" action="sample.asp" enctype="multipart/form-data"&gt;
&lt;%
If Not nCount &lt;= 0 Then 
%&gt;
   &lt;table cellpadding="2" cellspacing="2" border="0"&gt;
&lt;% 
        For i=1 To nCount
%&gt;
  &lt;tr&gt;
     &lt;td&gt;  
        &lt;input type="file" name="&lt;%="File" & i%&gt;" size="50"&gt;&lt;br&gt;
     &lt;/td&gt;
  &lt;/tr&gt;
&lt;%
        Next
%&gt;
&lt;/table&gt;   
&lt;%
Else
   If bIsPostback = 0 Then
        Response.Write "Amount of files to upload is missing!&lt;br&gt;"
   End If
   Response.Write "Usage: sample.asp?Cnt=NUMBER&lt;br&gt;"
End If
%&gt;
        &lt;input type="submit" value="Submit"&gt;
&lt;/form&gt;
</pre>

<p>
Dieser Abschnitt generiert basierend auf der Eingabe (Anzahl der Uploaddateien) des Benutzers das Uploadformular. Zum
Zwecke der einfacheren Gliederung wird eine Html Tabelle erstellt, in der dann die einzelnen Eingabefelder f&uuml;r die 
Dateien eingebunden werden. Beim ersten Aufruf der ASP Seite erh&auml;lt der Benutzer f&uuml;r den Fall, da&szlig; er keinen Querystring
angegeben hat, einen Hinweis (<i>Amount of files ...</i>) und den f&uuml;r die Nutzung des ASP Scripts n&ouml;tigen Syntax 
(<i>Usage: ...</i>).
</p>

<p>
Da das Formular im Falle eines PostBacks (z.B. wenn ein Upload stattgefunden hat) auf sich selbst retour postet soll
der Hinweis nicht mehr erscheinen, da anzunehmen ist, da&szlig; der Benutzer wei&szlig;, da&szlig; ohne Querystring nichts l&auml;uft.
</p>

<pre style="background='silver';">
If bIsPostback Then

On Error Resume Next
Set objASPSmartUpload = Server.CreateObject("aspSmartUpload.SmartUpload")
objASPSmartUpload.Upload
    For Each File In objASPSmartUpload.Files
        Err.Clear
        File.SaveAs(Server.MapPath("Upload\" &amp; File.FileName)) 
    
        If Err.Number &lt;&gt; 0 Then    
            Response.Write("&lt;b&gt;ERROR: &lt;/b&gt;" &amp; Err.description)
        Else
           
            Response.Write("File &lt;b&gt;" &amp; File.FileName &amp; "&lt;/b&gt; uploaded.&lt;br&gt;")
        End If
    Next
End If
</pre>

<p>
Im obigen Sourcecodeabschnitt beginnt dann der eigentliche Upload. Dieser wird Dank der <i>bIsPostback</i>
Variable nur dann gestartet, wenn ein PostBack stattgefunden hat. Nach der Instanzierung des <i>objASPSmartUpload</i>
Objektes mit <i>Server.CreateObject</i> wird mit Hilfe der <i>Upload</i> Methode der <i>aspSmartUpload</i> Komponente
der Upload der Dateien aus dem <i>Post</i>-Formular eingeleitet. 
</p>

<p>
Die <i>For Each</i> Schleife iteriert durch jedes Element (<i>File</i>), welches in der <i>Files</i> 
Collection enthalten ist. Gleichzeitig wird hier bei jedem Schleifendurchlauf ein eventuell vorher aufgetretener
Fehler vor dem Upload bzw. Schreiben der Datei auf dem Webserver gel&ouml;scht. Das hat den Sinn, da&szlig; pro Schleifendurchlauf
m&ouml;gliche unterschiedliche Fehler registriert werden. Fehler werden dann zur&uuml;ckgeben, wenn das Script auf Probleme - 
z.B. durch eine Zugriffsverweigerung auf dem Zielwebserver - st&ouml;&szlig;t.
</p>

<p>
Mit der <i>SaveAs</i> Methode der Komponente wird dann tats&auml;chlich die upgeloadete Datei mit ihrem urspr&uuml;nglichen
Namen (<i>File.Name</i>) in einem hier hardcodierten Verzeichnispfad am Webserver gespeichert.
Falls hierbei ein Fehler auftritt, wird die <i>Number</i> Property des <i>Err</i> Objektes ungleich 0 und es wird eine
Fehlermeldung in Form der Beschreibung des aufgetretenen Fehlers (<i>Description</i> Property) ausgegeben.
</p>

<p>
Wenn eine Datei in einem Durchgang aber ohne Probleme gespeichert wird, erscheint die Meldung, da&szlig; die jeweilige Datei erfolgreich
upgeloadet wurde. Nun f&uuml;hren wir die Beispieldatei <b>sample.asp</b> auf einem Webserver aus, auf dem die 
<i>aspSmartUpload</i> Komponente installiert wurde. Wir &uuml;bergeben gleichzeitig aber auch den ben&ouml;tigten Querystring <i>Cnt</i>
mit einem Beispielwert <i>5</i>.
</p>

<p>
Der Aufruf der Seite erfolgt daher folgenderma&szlig;en:
</p>

<pre style="background='silver';">
sample.asp?Cnt=5
</pre>

<p>
Dadurch erhalten wir folgendes Resultat im Browserfenster:
</p>

<IMG SRC="/artikel/Bilder/200105/20010510_1.png" width="455" height="343" alt="" border="0">

<p>
Nachdem wir nun - wie im Querystring angegeben - f&uuml;nf Dateien f&uuml;r den Upload mittels Klick auf den <i>Browse</i>
Button ausgew&auml;hlt und dann auf <i>Submit</i> geklickt haben, erhalten wir folgende Best&auml;tigung bei fehlerfreiem
Ablauf des Scriptes:
</p>

<IMG SRC="/artikel/Bilder/200105/20010510_2.png" width="457" height="341" alt="" border="0">

<p>
Wie Sie aus dem obigen Screenshot ersehen, k&ouml;nnen Sie mit der Komponente jedes beliebige Dateiformat uploaden, 
sofern Sie es nicht durch die <i>DeniedFilesList</i> Property gesperrt haben.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Durch die umfangreichen Funktionalit&auml;ten der <i>aspSmartUpload</i> Komponente k&ouml;nnen Sie einfachst aus Ihrem Webserver einen 
Fileserver mit Benutzerrichtlinen machen. Die Benutzerrichtlinen sind ausreichend um Ihren Webserver vor sinnlosen
Uploads zu sichern. Die im Artikel gezeigte L&ouml;sung ist nat&uuml;rlich nur ein einfaches Grundger&uuml;st, um Ihnen die Komponente,
da Sie ja uneingeschr&auml;nkt kostenlos erh&auml;ltlich ist, vorzustellen.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010510.zip">Klicken Sie hier</a>, um den Download zu starten.<br><SPAN class="content">http://www.aspheute.com/code/20010510.zip</span></p>
<h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/19990812.htm">Dateien mit dem Browser auf Webserver laden</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/19990812.htm</span><br>
<a href="../artikel/20010202.htm">Dateiupload mit ASP und WSC</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010202.htm</span><br>
<a href="../artikel/20000802.htm">Dateiupload mit ASP.NET</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000802.htm</span><br>
<a href="../artikel/20010124.htm">Dateiupload mit ASP.NET und VB.NET</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010124.htm</span><br>
<a href="../artikel/20001030.htm">Uploaden einer beliebigen Datei in eine Datenbank</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001030.htm</span><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Easpsmart%2Ecom%2F">aspSmart.com (aspSmartUpload Komponente)</a><br>
<SPAN class="content">http://www.aspsmart.com/</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
