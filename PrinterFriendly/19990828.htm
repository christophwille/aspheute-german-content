<HTML>
<HEAD>
<TITLE>Windows Script Components</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Komponentenprogrammierung ist f&uuml;r manche ASP Programmierer weit au&szlig;erhalb der Reichweite (C++, etc). Man kann es sich aber mit WSC's leicht machen.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,WSC,Windows Script Components,VBScript,VBScript 5,Jscript">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Windows Script Components</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=19990828"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Eine Neueinf&uuml;hrung mit VBScript 5 (eigentlich den ganzen v5 Scriptengines) sind die Windows Script 
Components (WSC). Diese haben fr&uuml;her unter dem Namen Scriptlets firmiert, haben aber mit dem Release
eben diese Namens&auml;nderung erfahren - die Funktionalit&auml;t ist aber die Gleiche geblieben - Komponenten
auf Basis einer Scriptsprache. Kein Erlernen von zus&auml;tzlichen Kenntnissen ist mehr n&ouml;tig.
</p>
<p>
Um WSC's ausf&uuml;hren zu k&ouml;nnen, reicht es, den Internet 
Explorer 5 zu installieren (oder nur die <a href="http://msdn.microsoft.com/scripting/">Scripting Engines</a> 
der Version 5). Zus&auml;tzlich sollte man den 
<a href="http://msdn.microsoft.com/scripting/scriptlets/wz10en.exe">WSC Wizard</a> downloaden und 
installieren - er ist sehr hilfreich und wird in diesem Artikel zur Erstellung einer WSC verwendet.
</p>

<h3>Erzeugen einer WSC mit dem Wizard</h3>
<p>
Da Ihr den WSC Wizard ja schon installiert habt, fangen wir gleich damit an, eine neue Komponente f&uuml;r ASP
zu erstellen. Folgende Schritte sind notwendig:
<ol>
	<li>Starten des WSC Wizard; Start Men&uuml; - Programme - Microsoft Windows Script - WSC Wizard
	<li>Schritt 1 von 6 erscheint (Allgemeine Optionen). Die erste Frage ist der Name der Komponente. F&uuml;r das
		Beispiel nennen wir sie <b>HelloWorld</b>. Der Dateiname wird automatisch vorgeschlagen, genauso wie die ProgId.
		Alle diese Angaben passen uns.<br>
		<IMG SRC="/artikel/Bilder/199908/990828_1.gif" width=492 height=387 border=0 alt="Schritt 1">
	<li>Schritt #2 im Wizard erlaubt uns, entweder ein DHTML Behavior oder eine ASP WSC zu erzeugen (letzteres ausw&auml;hlen).
		Weiters kann man die Scriptsprache w&auml;hlen, sowie Error checking und Debugging Unterst&uuml;tzung selektieren.
		Wir nehmen VBScript, sowie Error und Debugging Unterst&uuml;tzung.<br>
		<IMG SRC="/artikel/Bilder/199908/990828_2.gif" width=492 height=387 border=0 alt="Schritt 2- Characteristics">
	<li>Eine Komponente hat Eigenschaften und Methoden. In Schritt 3 kann man jetzt die Eigenschaften deklarieren.
		Geben wir unserer Komponente die Eigenschaft <b>Name</b>, damit wir die Hello World Nachricht mit dem Namen ausgeben
		k&ouml;nnen. Dazu klickt man in die Name Spalte, und gibt <i>Name</i> an. Unter <i>Type</i> versteht man ob
		diese Eigenschaft Nur-Lesen (Read Only), Nur-Setzen (Write Only) oder beides sein soll (Read/Write). In unserem
		Fall reicht es, wenn wir den Namen setzen k&ouml;nnen (Write Only).<BR>
		<IMG SRC="/artikel/Bilder/199908/990828_3.gif" width=492 height=387 border=0 alt="Schritt 3 - Eigenschaften definieren">
	<li>Bei Schritt 4 angelangt, sind jetzt die Methoden an der Reihe. Wir brauchen eigentlich nur eine - <b>SayHello</b>,
		und weil wir <i>Name</i> as Eigenschaft angelegt haben, braucht sie auch keine Parameter.<br>
		<IMG SRC="/artikel/Bilder/199908/990828_4.gif" width=492 height=387 border=0 alt="Methoden deklarieren">
	<li>Da unserer Komponente keine Ereignisse (Events) unterst&uuml;tzen soll, brauchen wir auch keine zu deklarieren.
		Daher k&ouml;nnen wir Schritt 5 getrost &uuml;berspringen.
	<li>Der letzte Schritt gibt uns dann noch einen &Uuml;berblick, was wir uns alles ausgew&auml;hlt haben. Wenn alles
		pa&szlig;t, dann klickt auf <b>Finish</b>.
</ol>
</p>

<h3>Der erzeugte Sourcecode</h3>
<p>
Die WSC Komponente (oder das Skelett davon) ist f&uuml;r uns erzeugt worden. Was steht nun eigentlich in diesem
Skelett drinnen? Gute Frage. Hier ist der Source Code:
<pre>
&lt;?xml version="1.0"?&gt;
&lt;component&gt;

&lt;?component error=&quot;true&quot; debug=&quot;true&quot;?&gt;

&lt;registration
	description=&quot;HelloWorld&quot;
	progid=&quot;HelloWorld.WSC&quot;
	version=&quot;1.00&quot;
	classid=&quot;{1345c972-fdd2-47cf-a410-631568501d75}&quot;
&gt;
&lt;/registration&gt;

&lt;public&gt;
	&lt;property name=&quot;Name&quot;&gt;
		&lt;put/&gt;
	&lt;/property&gt;
	&lt;method name=&quot;SayHello&quot;&gt;
	&lt;/method&gt;
&lt;/public&gt;

&lt;implements type=&quot;ASP&quot; id=&quot;ASP&quot;/&gt;

&lt;script language=&quot;VBScript&quot;&gt;
&lt;![CDATA[

dim Name

function put_Name(newValue)
	Name = newValue
end function

function SayHello()
	SayHello = &quot;Temporary Value&quot;
end function

]]&gt;
&lt;/script&gt;

&lt;/component&gt;
</pre>
&Uuml;berraschung - es ist eine XML Datei! Es sieht zwar auf den ersten Blick etwas erschreckend aus,
ist es aber nicht. Die Zeile
<pre>&lt;?component error=&quot;true&quot; debug=&quot;true&quot;?&gt;</pre>
ist zum Beispiel der Ausflu&szlig; unserer Auswahl Error und Debugging Support. Der <i>&lt;registration&gt;</i> Block
beeinhaltet die ProgId, die ClassId, Versionsinfo und eine Beschreibung - so wie jede andere Komponente auch, aber halt
sch&ouml;n lesbar.
</p>
<p>
Weiter geht es mit der Deklaration unserer Eigenschaften und Methoden im &lt;public&gt; Block:
<pre>
&lt;public&gt;
	&lt;property name=&quot;Name&quot;&gt;
		&lt;put/&gt;
	&lt;/property&gt;
	&lt;method name=&quot;SayHello&quot;&gt;
	&lt;/method&gt;
&lt;/public&gt;
</pre>
Die <i>Name</i> Eigenschaft ist <i>put</i> (Write Only), und die Methode <i>SayHello</i> ist auch einfach deklariert.
Interessant und wichtig f&uuml;r ASP Komponenten ist
<pre>&lt;implements type=&quot;ASP&quot; id=&quot;ASP&quot;/&gt;</pre>
da mit dieser Zeile die ganzen ASP Objekte (Server, Request, ...) eingebunden werden. Der "Rest" der Datei ist dann
der VBScript Sourcecode f&uuml;r unsere Komponente.
</p>

<h3>Registrierung einer WSC Komponente</h3>
<p>
Bevor wir jetzt weiterprogrammieren, registrieren wir mal die Komponente. Dazu &ouml;ffnet Ihr den Explorer und geht
in das Verzeichnis, wo der WSC Wizard die Komponente hingespeichert hat (Schritt 1). Bei mir war das d:\. Klickt mit
der rechten Maustaste auf die WSC Datei und w&auml;hlt <b>Register</b> aus dem Kontextmen&uuml;. Ihr bekommt folgende
Meldung:<br>
<IMG SRC="/artikel/Bilder/199908/990828_5.gif" width=466 height=119 border=0 alt="Erfolgte Komponentenregistrierung"><br>
Dann ist alles paletti. Scheitert Ihr hier, dann sind nicht die korrekten Scripting Engines installiert.
</p>

<h3>Die ASP Seite</h3>
<p>
Eine Komponente bringt nur dann was, wenn man Sie auch verwendet. Dazu brauchen wir eine ASP Datei:
<pre>
&lt;%
Set xObj = Server.CreateObject("HelloWorld.WSC")
xObj.SayHello
%&gt;
</pre>
Wenn ich die Datei im Browser aufrufe, passiert gar nichts - kein Wunder, wenn man sich die <i>SayHello</i> Funktion in der
WSC Komponente ansieht.
</p>

<h3>Die WSC Komponente fertigstellen</h3>
<p>
Gut - dann bauen wir die <i>SayHello</i> Funktion mal um. Und zwar so:
<pre>
function SayHello()
	Response.Write "Hello World " &amp; Name
end function
</pre>
Speichert die Datei und ruft die ASP Seite erneut auf - et volia, Hello World steht schon da! Aber kein Name,
was mich wiederrum nicht wundert, denn die ASP Seite hat noch einen Sch&ouml;nheitsfehler (die <i>Name</i> Eigenschaft
ist nicht gesetzt worden):
<pre>
&lt;%
Set xObj = Server.CreateObject("HelloWorld.WSC")
xObj.Name = "Christoph"
xObj.SayHello
%&gt;
</pre>
Jetzt funktioniert alles so, wie es soll.<br>
<IMG SRC="/artikel/Bilder/199908/990828_6.gif" width=537 height=183 border=0 alt="Jetzt funktioniert es">
</p>

<h3>Das Res&uuml;mee</h3>
<p>
Aufmerksamen Lesern ist bereits aufgefallen, da&szlig; ich den Web Server nicht stoppen mu&szlig;te, damit die
&Auml;nderung am Code der Komponente &uuml;bernommen wurde - keine andere Komponenteentwicklungsumgebung au&szlig;er
WSC erlaubt diesen Luxus. Weiters kann ich meine ASP Scripts beinahe 1:1 &uuml;bernehmen, auch ein gewaltiger Vorteil.
Und das bischen XML schreckt einen nicht, weil man hat ja den WSC Wizard.
</p>
<p>
Erfolgreiches Programmieren mit WSC's!
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20010202.htm">Dateiupload mit ASP und WSC</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010202.htm</span><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fmsdn%2Emicrosoft%2Ecom%2Fscripting%2F">Scripting Engines</a><br>
<SPAN class="content">http://msdn.microsoft.com/scripting/</span><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fmsdn%2Emicrosoft%2Ecom%2Fscripting%2Fscriptlets%2Fwz10en%2Eexe">WSC Wizard</a><br>
<SPAN class="content">http://msdn.microsoft.com/scripting/scriptlets/wz10en.exe</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
