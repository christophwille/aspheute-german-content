<HTML>
<HEAD>
<TITLE>Optimiertes Erstellen von DropDowns</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Dropdownmen&uuml;s mit Dutzenden, ja vielleicht sogar Hunderten von Eintr&auml;gen: Dieser Artikel zeigt einen cleveren Weg auf, wie mittels weniger Tricks der gr&ouml;sste Teil der Arbeit der Datenbank &uuml;berlassen wird.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Dropdown,Optimierung,Performance,Trick,Tip,Generierung,GetString,Recordset,SQL,Access,Statement">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Optimiertes Erstellen von DropDowns</H1>
<p>
Geschrieben von: <a href="../autoren/stephantroxler.htm">Stephan Troxler</a><br>
Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20040901"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Das Problem tritt &uuml;berall dort auf, wo &uuml;berlange Dropdownmen&uuml;s mit Dutzenden, ja vielleicht sogar Hunderten von 
Eintr&auml;gen aus einer Datenbank gelesen und aufbereitet werden. Durch die enorme Datenmenge, welche normalerweise &uuml;ber 
ein Recordset abgearbeitet und HTML-konform aufbereitet werden muss, verz&ouml;gert sich der Seitenaufbau schnell einmal 
um einige Sekunden. Das muss nicht sein! Dieser Artikel zeigt einen cleveren Weg auf, wie mittels weniger Tricks der 
gr&ouml;sste Teil der Arbeit der Datenbank &uuml;berlassen wird.
</p>

<h2>Es war einmal</h2>
<p>
Nehmen wir als Beispiel ein Dropdown welches alle L&auml;ndernamen der Welt auflistet, wie man es h&auml;ufig im Web antrifft. Die Daten 
sind in einer Datenbanktabelle "countries" abgelegt, die Spalte mit dem L&auml;ndernamen heisst "name" und diejenige mit dem dazugeh&ouml;rigen 
L&auml;nderk&uuml;rzel "code". Das Ganze sieht in etwa wie folgt aus:
</p>

<table>
<tr>
	<td colspan="2"><b>countries</b></td>
</tr>
<tr>
	<td><b>name</b></td>
	<td><b>code</b></td>
</tr>
<tr>
	<td>Sweden</td>
	<td>se</td>
</tr>
<tr>
	<td>Switzerland</td>
	<td>ch</td>
</tr>
<tr>
	<td>Taiwan</td>
	<td>tw</td>
</tr>
<tr>
	<td>...</td>
	<td>...</td>
</tr>
</table>

<p>
Um dem Benutzer das Ausf&uuml;llen der Seite abzunehmen, wollen wir anhand seiner Spracheinstellungen aus dem Browser zus&auml;tzlich 
noch dynamisch den Eintrag seines Landes vorselektieren. Den ermittelten L&auml;ndercode haben wir dazu in einer lokalen 
Variablen "<b>selectedcountry</b>" abgelegt.
</p>

<h2>Das Unheil nimmt seinen Lauf</h2>
<p>
Im Normalfall w&uuml;rden wir das L&auml;nder-Dropdownmenu nun in etwa so generieren:
</p>

<pre style="background='silver';">
HTML-Code...
&lt;select name="mydropdown"&gt;
&lt;%
Datenbankverbindung &ouml;ffnen, Recorset (RS) erstellen
...
While not RS.EOF
if RS("code") = selectedcountry then
	myselect = "selected"
else
	myselectd = ""
end if 
%&gt;
&lt;option value="&lt;% =RS("code") %&gt;" &lt;% =myselect %&gt;&gt;&lt;% =RS("name")%&gt;&lt;/option&gt;
&lt;%
wend
%&gt;
&lt;/select&gt;
HTML-Code...
</pre>

<p>
Aufwendig ist an dieser Methode einerseits die Vermischung zwischen ASP- und HTML-Code und andererseits die Schleife, welche 
jedes Element des Recordsets behandelt und mit dem vorgegebenen L&auml;ndercode vergleicht. Dieses Vorgehen l&auml;sst sich 
zugegebenermassen noch geringf&uuml;gig optimieren, in dem der ganze HTML-Code zun&auml;chst serverseitig generiert, und dann an 
einem St&uuml;ck ausgegeben wird. Unter dem Strich bleibt aber die Schleife &uuml;ber alle Elemente des Recordsets, welche bei 
gr&ouml;sseren Aufz&auml;hlungen enorm an der Performance der Seite nagt. Folglich muss genau hier angesetzt werden.
</p>

<h2>Alle auf einen Streich</h2>
<p>
Was als ersten Schritt liegt n&auml;her, als uns den ganzen sp&auml;teren HTML-Code bereits in der Abfrage generieren zu lassen? Die 
nachfolgende SELECT Abfrage zeigt, wie man geschickt den HTML-Code, samt Selektierung des richtigen Landes ins Recordset 
einfliessen lassen kann.
</p>
<p>
Beispiel f&uuml;r Access:
</p>

<pre style="background='silver';">
SELECT '&lt;option value=""' + Cstr(code) + '""' + 
	iif(Cstr(code)=Cstr(" &amp; myselect &amp; "),' selected ','') + 
	'&gt;' + name + '&lt;/option&gt;' FROM countries ORDER BY name
</pre>

<p>
Beispiel f&uuml;r MS SQL Server:
</p>

<pre style="background='silver';">
SELECT '&lt;option value=""' + code + '""' + CASE ID WHEN '" &amp; myselect &amp; "' THEN 
	' selected' ELSE '' END + '&gt;' + name + '&lt;/option&gt;' 
	FROM countries ORDER BY name
</pre>

<p>
Drei Sachen machen die obenstehenden SQL-Statements speziell:
</p>

<ul>
	<li><b>Es wird ein Recordset mit nur einer einzigen Spalte zur&uuml;ckgeliefert.</b> Dies erm&ouml;glicht es uns anschliessend 
		das ganze Recordset in einem Zug auszulesen.
	<li><b>Der n&ouml;tige HTML-Code wird in der Abfrage als statischer Teil mit den Tabellenfeldern vermischt.</b> Dadurch entf&auml;llt 
		die m&uuml;hsame, geschleifte Generierung des eigentlichen HTML-Elements
	<li><b>Mittels einer Logik im SQL-Statement wird &uuml;berpr&uuml;ft ob der Eintrag selektiert werden muss.</b> Dadurch entf&auml;llt 
		die letzte H&uuml;rde, welche uns normalerweise zwingen w&uuml;rde die Eintr&auml;ge &uuml;ber eine Schleife mit dem zu vorselektierten 
		Wert zu vergleichen.
</ul>

<h2>Dropdown aus dem Sack</h2>
<p>
Nach dem Absetzen des SQL-Befehls bekommen wir nun also ein Recordset mit nur einer Spalte zur&uuml;ck, in welcher der fertige 
HTML-Code des Dropdownmenus abgebildet ist. Doch wie lesen wir dieses nun geschickt aus?
</p>
<p>
Das Zauberwort ist GetString, eine Methode des Recordset-Objekts welches uns den ganzen Inhalt als String zur&uuml;ckliefert, wie 
wir ihn f&uuml;r die Ausgabe im HTML-Code brauchen. Das &uuml;berarbeitete Beispiel sieht dann in etwa wie folgt aus:
</p>

<pre style="background='silver';">
HTML-Code...
&lt;select name="mydropdown"&gt;
&lt;%
Datenbankverbindung &ouml;ffnen, Recorset (RS) erstellen
..
Response.Write(RS.GetString)
%&gt;
&lt;/select&gt;
HTML-Code...
</pre>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Der Artikel zeit, wie man mit der richtigen Kombination aus Datenbeschaffung und der optimalen Nutzung von VB-Script auch 
aus klassischem ASP immer wieder einiges herausholen kann. Wenn man den ganzen Zugriff in eine Funktion packt, sind bestehende 
ASP-Seiten schnell &uuml;berarbeitet und der einen oder anderen Applikation kann so nochmals etwas Vorschub gegeben werden.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p>
<h2>Download des Codes</h2>
<p><a href="../Code/20040901.zip">Klicken Sie hier</a>, um den Download zu starten.<br><SPAN class="content">http://www.aspheute.com/code/20040901.zip</span></p>
<h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20010329.htm">Auto-Generierung von performantem Abfragecode</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010329.htm</span><br>
<a href="../artikel/20010130.htm">Datens&auml;tze zuf&auml;llig sortieren</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010130.htm</span><br>
<a href="../artikel/20001201.htm">Die SQL ORDER BY Clause</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001201.htm</span><br>
<a href="../artikel/20001013.htm">Highspeed-Abfragen einer SQL Server Datenbank</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001013.htm</span><br>
<a href="../artikel/20010326.htm">Records z&auml;hlen mit Stored Procedures</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010326.htm</span><br>
<a href="../artikel/20001004.htm">Sprache des Benutzers erkennen</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001004.htm</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
