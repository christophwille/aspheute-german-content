<HTML>
<HEAD>
<TITLE>Dateien umbenennen</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Auf den ersten Blick denkt man sich, da&szlig; das so schwer nicht sein kann. Allerdings wenn man dann nicht wie erwartet eine File.Rename Methode findet, wird die Suche nach der L&ouml;sung interessant.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,File,Move,File.Move,IOException,SecurityException,umbenennen,rename,Datei umbenennen">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Dateien umbenennen</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/Csharp.htm">C#</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20020409"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Auf den ersten Blick denkt man sich, da&szlig; das so schwer nicht sein kann. Allerdings wenn
man dann nicht wie erwartet eine <i>File.Rename</i> Methode findet, wird die Suche nach der L&ouml;sung
f&uuml;r Nicht-Alte-Hasen der Windows Programmierung mehr oder weniger interessant.
</p>
<p>
Warum gibt es wirklich keine <i>Rename</i> Methode in der <i>File</i> Klasse? Der Grund findet
sich in den File API's von Windows NT/2000, die ebenfalls keine Rename Methode anbieten - diese
Funktionalit&auml;t wird &uuml;ber die Move Funktionen zur Verf&uuml;gung gestellt. Wieso?
</p>
<p>
Dazu sehen wir uns NTFS ein wenig n&auml;her an, denn Copy und Move Operationen verhalten
sich n&auml;mlich voneinander verschieden. Beim Kopieren erben die Dateien die NTFS Rechte des Ordners,
in den sie hineinkopiert werden. Ein Move hingegen beh&auml;lt die Dateirechte bei, solange die Operation
auf ein und derselben Disk stattfindet (sonst wird die Move Operation zu einem Copy). Was hat
das mit dem Umbenennen von Dateien zu tun? Nun, sowohl beim Umbenennen als auch bei Move bleibt
alles beim alten bis auch den Ort der Datei - einmal &auml;ndert sich nur der Name, das andere Mal das
Verzeichnis. Deswegen werden beide Operationen durch eine - n&auml;mlich Move - abgebildet.
</p>

<h2>Umbenennen mit <i>File.Move</i></h2>
<p>
Um die Anwendung von <i>File.Move</i> zu demonstrieren, habe ich eine kleine Kommandozeilenapplikation
geschrieben (nat&uuml;rlich funktioniert das auch in ASP.NET). Im Prinzip habe ich den Befehl rename nochmal
selbst implementiert, und einige der m&ouml;glicherweise auftretenden Fehlerf&auml;lle abgefangen:
</p>

<pre style="background='silver';">
using System;
using System.IO;
using System.Security;

class MainClass
{
  public static void Main(string[] args)
  {
    if (args.Length != 2)
    {
      Console.WriteLine("Usage: rename source destination");
      return;
    }
    
    string strExistingFile = args[0];
    string strNewFilename = args[1];
    bool bRenameSucceeded = false;
    
    try
    {
      File.Move(strExistingFile, strNewFilename);
      bRenameSucceeded = true;
    }
    catch(FileNotFoundException fe)
    {
      Console.WriteLine("Source file does not exist");
    }
    catch(IOException ioe)
    {
      Console.WriteLine("Destination not acceptable");
    }
    catch(SecurityException se)
    {
      Console.WriteLine("You do not have permission for this operation");
    }
    catch(Exception e)
    {
      Console.WriteLine("File rename failed, reason: " + e.ToString());
    }
    if (bRenameSucceeded)
    {
      Console.WriteLine("Rename completed successfully");
    }
  }
}
</pre>

<p>
Wird die Applikation mit zuwenig Parametern aufgerufen (zwei sind n&ouml;tig - der originale Dateiname
und der neue), werden Informationen zur Verwendung ausgegeben. Danach geht es bereits an das 
Umbenennen, allerdings sollte man das tunlichst in einem <i>try...catch</i> Block machen, da beim
Umbenennen einiges schief laufen kann (ich habe nur die wichtigsten Fehler behandelt). 
</p>
<p>
Dateioperationen
sollte man immer mit <i>try...catch</i> verwenden, da das mindeste das schiefgehen kann fehlende
oder falsche Datei- und Verzeichnisrechte sind!
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Zwar ist das Umbenennen von Dateien nicht auf den ersten Blick intuitiv, so ist es dennoch nicht
schwierig sobald man wei&szlig;, wie man zum Ziel gelangt.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p>
<h2>Download des Codes</h2>
<p><a href="../Code/20020409.zip">Klicken Sie hier</a>, um den Download zu starten.<br><SPAN class="content">http://www.aspheute.com/code/20020409.zip</span></p>
<h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20000929.htm">Dateien lesen in ASP.NET</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000929.htm</span><br>
<a href="../artikel/20000804.htm">Directory Browsing a la .NET</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000804.htm</span><br>
<a href="../artikel/20020226.htm">Ein Touch-Utility in C#</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020226.htm</span><br>
<a href="../artikel/20000724.htm">Exception Handling in C#</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000724.htm</span><br>
<a href="../artikel/20021105.htm">Online File Management System mit ASP.NET und C# - Teil 2</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20021105.htm</span><br>
<a href="../artikel/20010208.htm">Web Projekte mit SharpDevelop erstellen</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010208.htm</span><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Eicsharpcode%2Enet%2Fopensource%2Fsd%2F">SharpDevelop</a><br>
<SPAN class="content">http://www.icsharpcode.net/opensource/sd/</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
