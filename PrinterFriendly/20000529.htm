<HTML>
<HEAD>
<TITLE>&Uuml;bergeben von Informationen von einer ASP-Seite zur n&auml;chsten</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Dieser Artikel beschreibt, wie man Formularwerte zwischen ASP Seiten weiterreichen kann, ohne das Session Objekt zu verwenden.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Request,QueryString,Form,Formulare,Werte,Session,Tracking,Weiterleitung">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>&Uuml;bergeben von Informationen von einer ASP-Seite zur n&auml;chsten</H1>
<p>
Geschrieben von: <a href="../autoren/christiankoller.htm">Christian Koller</a><br>
Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20000529"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>Man kann <i>Session</i> Variablen benutzen, um Informationen von einer ASP-Seite an
andere ASP-Seiten der selben Website weiterzugeben.
Dies erfordert jedoch, da&szlig; der Browser Cookies unterst&uuml;tzt und die ASP-Seite
Sessions unterst&uuml;tzt.</p>

<p>Daneben gibt es aber noch andere Methoden, um Informationen von einer 
Seite zur n&auml;chsten weiterzuleiten.</p>

<p>Sehen wir uns einmal an, was passiert, wenn ein Benutzer von einer ASP-Seite zur n&auml;chsten geht.
Der Benutzer ist auf einer Seite und kommt mittels Link, oder dem Absenden eines Formulares, von
einer beliebigen ASP-Seite zur n&auml;chsten ASP-Seite.</p>

<p>Wenn man nun Informationen an die aufgerufene ASP-Seite weitergeben will,
so mu&szlig; man diese Informationen in den Link oder in das Formular auf eine Art und Weise verpacken,
da&szlig; die aufgerufene ASP-Seite Zugriff auf diese Informationen erh&auml;lt.</p>

<p>Sehen wir uns also an, wie man das Weiterleiten von Informationen bewerkstelligt f&uuml;r den Fall,
da&szlig; der User auf einen Link einer ASP-Seite klickt um die n&auml;chste Seite aufzurufen.</p>

<h2>Informationen &uuml;ber einen Link weitergeben</h2>

<p>Der folgende Link enth&auml;lt Informationen in Form eines Querystrings,
der einfach an die URL des Links angeh&auml;ngt wird:</p>

<pre style="background='silver';">
&lt;a href="<i>neueSeite.asp</i><b>?Vorname=Christian&amp;Nachname=Koller</b>"&gt;Ein Link&lt;/a&gt;
</pre>

<p>Wenn nun der User auf diesen Link klickt, so ruft er die Seite <i>neueSeite.asp</i> auf.
Diese Seite wiederum kann die Werte aus dem Querystring mit Hilfe der <i>Request.QueryString</i>
Collection auslesen:</p>

<pre style="background='silver';">
&lt;%
<i>strVorname</i>  = <b>Request.QueryString(</b>"<i>Vorname</i>"<b>)</b>
<i>strNachname</i> = <b>Request.QueryString(</b>"<i>Nachname</i>"<b>)</b>
%&gt;
</pre>

<p>Das Auslesen der Werte aus dem Querystring geht also genauso vor sich,
wie das Auslesen eines mit <i>METHOD="GET"</i> abgeschickten HTML-Formulares.</p>

<p>Es gibt nat&uuml;rlich einige wichtige Dinge, die man beachten mu&szlig;,
wenn man Werte in einen Querystring verpackt:</p>

<ul>
	<li><b>L&auml;nge des Querystrings</b>: Die URL und der Querystring zusammen sollten nicht mehr als
500 bis 2000 Zeichen enthalten, ansonsten besteht die Gefahr, da&szlig; einige Werte einfach nicht
&uuml;bergeben werden (vom Browser abh&auml;ngig).</li>

	<li><b>Sonderzeichen:</b> Sonderzeichen im Querystring mu&szlig; man "kodieren".
Dies geschieht &auml;hnlich wie die Darstellung von Sonderzeichen unter HTML. 
ASP selbst stellt die <i>Server.URLEncode</i> Funktion zur Verf&uuml;gung, die analog der 
<i>Server.HTMLEncode</i> Funktion die Feldnamen und Feldwerte kodiert.</li>
</ul>

<h2>Erzeugen des Querystrings in einer ASP-Seite</h2>

<p>Der Querystring wird einfach mit einem Fragezeichen eingeleitet und an die URL angeh&auml;ngt.
Ein Querystring kann mehrere Felder enthalten. Jedes Feld besteht aus einem
Feldnamen und einem Feldwert. Feldname und Feldwert werden durch ein Gleichheitszeichen
getrennt:
</p>

<pre style="background='silver';">
Vorname=Christian</pre>

<p>Feldnamen sollten keine Sonderzeichen, Umlaute oder Leerzeichen enthalten. 
Nur die zus&auml;tzliche Verwendung des Unterstriches (<b>_</b>) ist gefahrlos.
Sonderzeichen in Feldwerten m&uuml;ssen richtig kodiert sein, was mit dem Einsatz der 
ASP-Funktion <i>Server.URLEncode</i> einfach zu erreichen ist.</p>

<p>Mehrere Felder des Querystrings werden durch das kaufm&auml;nnische Und (<b>&amp;</b>) verbunden.
Die Reihenfolge der Felder selbst spielt keine Rolle.</p>

<pre style="background='silver';">
Vorname=Christian<b>&amp;</b>Nachname=Koller
</pre>

<p>Wie f&uuml;gt man nun dynamisch Werte in den Querystrings eines Links ein? 
Nehmen wir einmal an, in den Variablen <i>strVorname</i> und <i>strNachname</i> werden in der 
ASP-Seite (nat&uuml;rlich vor dem Link) Werte gespeichert. 
Die Variablen werden dann in den Querystring des Links als Werte eingebaut:</p>

<pre style="background='silver';">
&lt;%
<i>strVorname</i> = "Lao"
<i>strNachname</i> = "Tse"
%&gt;
&lt;a href="neueSeite.asp?<i>Vorname</i>=&lt;%= <i>strVorname</i> 
   %&gt;&amp;<i>Nachname</i>=&lt;%= <i>strNachname</i> %&gt;"&gt;Ein Link&lt;/a&gt;</pre>

<p>Nat&uuml;rlich k&ouml;nnte man den Link auch mit einem <i>Response.Write</i> Befehl
zum Browser schreiben:</p>

<pre style="background='silver';">
&lt;%
strVorname = "Lao"
strNachname = "Tse"

Response.Write "&lt;a href="""
Response.Write "neueSeite.asp"
' QueryString:
Response.Write "?Vorname=" &amp; strVorname &amp; "&amp;Nachname=" &amp; strNachname

Response.Write """&gt;Ein Link&lt;/a&gt;"
%&gt;</pre>

<p>Wenn man nun, aus welchem Grund auch immer, Sonderzeichen (Umlaute, Zeilenschaltungen, Leerzeichen)
in den Feldwerten erwartet, so kodiert man die Feldwerte mit der <i>Server.URLEncode</i> Methode:</p>

<pre style="background='silver';">
&lt;%
strVorname = "Lao"
strNachname = "Tse"
%&gt;
&lt;a href="neueSeite.asp?Vorname=&lt;%= <b>Server.URLEncode(</b>strVorname<b>)</b>
%&gt;&amp;Nachname=&lt;%= <b>Server.URLEncode(</b>strNachname<b>)</b> 
%&gt;"&gt;Ein Link&lt;/a&gt;</pre>

<p>Oder auch:</p>

<pre style="background='silver';">
&lt;%
strVorname = "Lao"
strNachname = "Tse"

Response.Write "&lt;a href="""
Response.Write "neueSeite.asp"
Response.Write "?Vorname=" &amp; <b>Server.URLEncode(</b>strVorname<b>)</b> 
Response.Write "&amp;Nachname=" &amp; <b>Server.URLEncode(</b>strNachname<b>)</b> 
Response.Write """&gt;Ein Link&lt;/a&gt;"
%&gt;</pre>

<h2>Auslesen der Werte des Querystrings in der aufgerufenen Seite</h2>

<p>Die im Querystring enthaltenen Werte kann man auf der aufgerufenen 
ASP-Seite mit Hilfe der <i>Request.QueryString</i> Collection wieder auslesen.</p>

<p>Wenn Werte in Querystring kodiert waren, so liefert <i>Request.Querystring</i> bereits
die r&uuml;ckkodierten (also originalen) Werte.</p>

<p>Um das Feld mit dem Feldnamen <i>Nachname</i> in einer ASP-Seite 
aus dem Querystring zu lesen und in der Variable <i>strNachname</i> zu speichern, 
benutzt man den folgenden Befehl:</p>

<pre style="background='silver';">
&lt;%
<i>strNachname</i> = <b>Request.QueryString(</b>"<i>Nachname</i>"<b>)</b>
%&gt;</pre>

<p>Analog liest man alle anderen Feldwerte des QueryStrings aus.</p>


<h2>&Uuml;bergeben von Informationen in Formularen</h2>

<p>Wenn man Informationen beim Absenden von HTML-Formularen weitergeben will,
so hat man grunds&auml;tzlich die folgende M&ouml;glichkeit.</p>

<p>Man speichert Feldwerte in sogenannten "Hidden Fields" (Verborgenen Feldern) des Formulares.
Diese Felder werden dann beim Absenden einfach zusammen mit den anderen Feldwerten
verschickt und k&ouml;nnen genauso wie die anderen Feldwerte ausgelesen werden.</p>

<p>Ein verstecktes Feld in einem Formular hat die folgende HTML-Syntax:</p>

<pre style="background='silver';">
&lt;input type="Hidden" name="<i>Feldname</i>" value="<i>Feldwert</i>"&gt;</pre>

<p>Hierbei darf der Feldwert nicht verschl&uuml;sselt werden. Feldwerte in 
verborgenen Formularfeldern d&uuml;rfen keine Zeilenschaltungen enthalten.</p>

<p>Um einen Wert dynamisch einem verborgenen Feld zuzuweisen,
 f&uuml;gt man eine ASP-Variable anstelle des Feldwertes ein:</p>

<pre style="background='silver';">
&lt;input type="Hidden" name="<i>Feldname</i>" value="&lt;= <b>strFeldwert</b> %&gt;"&gt;

<b><u>oder:</u></b>

&lt;%
Response.Write "&lt;input type=""Hidden"" name=""<i>Feldname</i>"" " 
Response.Write "value=""" &amp; <b>strFeldwert</b> &amp; """&gt;"
%&gt;</pre>

<h2>&Uuml;bergeben eines Querystrings in einem POST Formular</h2>

<p>Ein ausgefuchstes Vorgehen, um Informationen beim Abschicken eines HTML-Formulares 
von einer ASP-Seite zur n&auml;chsten zu transportieren ist wie folgt:</p>

<p>Man benutzt die POST Sendemethode f&uuml;r das Formular und gestaltet das HTML-Formular wie gewohnt.
An die Empf&auml;ngeradresse (im Attribut ACTION) allerdings h&auml;ngt man einen
Querystring mit Feldwerten an:</p>

<pre style="background='silver';">
&lt;form action="<i>Empfaenger.asp</i><b>?Vorname=Chris</b>" method="<b>POST</b>"&gt;
Wert: &lt;input type="Text" name="Wert" value="Ein Wert"&gt;&lt;br&gt;
&lt;input type="Submit"&gt;
&lt;/form&gt;</pre>

<p>Nat&uuml;rlich kann man den Querystring wieder dynamisch generieren:</p>

<pre style="background='silver';">
&lt;%
strVorname = "Chris"
%&gt;
&lt;form action="<i>Empfaenger.asp</i><b>?Vorname=&lt;%= strVorname
%&gt;</b>" method="POST"&gt;
...
&lt;/form&gt;</pre>

<p>Alle Werte des Formulares liest man dann (wegen METHOD="POST") 
mit der <i>Request.Form</i> Collection aus. Nur die Werte des Querystrings werden
mittels <i>Request.QueryString</i> ausgelesen.</p>

<p>Hat das HTML-Formular also einem Querystring in der Action-URL, und
benutzt es die POST &Uuml;bermittlungsmethode, so k&ouml;nnte die
Empf&auml;ngerseite wie folgt aussehen:</p>

<pre style="background='silver';">
&lt;%
<i>strVorname</i> = Request.QueryString("<i>Vorname</i>")
<i>strWert</i>    = Request.Form("<i>Wert</i>")
%&gt;</pre>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Um einzelne Werte von einer ASP-Seite zur n&auml;chsten zu &uuml;bergeben
sind die in diesem Artikel beschriebenen Methoden hervorragend geeignet.
Will man aber Werte f&uuml;r einen User speichern (&auml;hnlich wie in einer Session Variable),
so mu&szlig; man andere Methoden finden (zum Beispiel das &Uuml;bergeben einer User ID von
einer Seite zur n&auml;chsten und dem Speichern der Userdaten in einer Datenbank, 
die dann mittels User ID wieder ausgelesen werden).
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20000522.htm">&Uuml;berpr&uuml;fen von HTML-Formularen mit ASP</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000522.htm</span><br>
<a href="../artikel/20000406.htm">Auswertung von HTML Formularen mit ASP</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000406.htm</span><br>
<a href="../artikel/20020429.htm">Benutzerverwaltung leicht gemacht: Teil 1</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020429.htm</span><br>
<a href="../artikel/20000505.htm">Session Variablen - Verwendung und Stolpersteine</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000505.htm</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
