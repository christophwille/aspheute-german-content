<HTML>
<HEAD>
<TITLE>Komponentenverwendung einschr&auml;nken</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Wer mehr als eine Site pro Server betreibt - und nicht nur ISP's sind davon betroffen - kommt m&ouml;glicherweise irgendwann einmal in die Situation, da&szlig; eine am Server installierte Komponente nur bestimmten Websites zur Verf&uuml;gung stehen soll.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Registry,Registrierdatenbank,Sicherheit,NTFS,ACL,Access Control List,ProgId,ClassId,01ad">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Komponentenverwendung einschr&auml;nken</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20020129"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Wer mehr als eine Site pro Server betreibt - und nicht nur ISP's sind davon betroffen - kommt
m&ouml;glicherweise irgendwann einmal in die Situation, da&szlig; eine am Server installierte Komponente
nur bestimmten Websites zur Verf&uuml;gung stehen soll. Entweder ist der Grund, da&szlig; nur der zahlende
Kunde diese verwenden k&ouml;nnen soll (und keine andere zuf&auml;llig am gleichen Server laufende Site), oder da&szlig;
bestimmte Komponenten sicherheitssensitiv sind (Businesslogikkomponenten zum Beispiel).
</p>
<p>
Wie immer f&uuml;hren mehrere Wege nach Rom, aber grunds&auml;tzlich haben alle etwas mit der Sicherheit von
NT zu tun - den Access Control Lists (ACL). Im Prinzip sorgt man einfach daf&uuml;r, da&szlig; nur berechtigte
Accounts Zugriff auf die f&uuml;r die Komponente wichtigen Daten bekommen: das ist einerseits die DLL/EXE
in der die Komponente "lebt", andererseits die Informationen zur Komponenteninstanzierung in der
Registrierdatenbank.
</p>

<h2>Absicherung mittels NTFS Berechtigungen</h2>
<p>
Der schnellste Weg zum Ziel sind NTFS Berechtigungen auf der DLL/EXE der Komponente. Als Beispielkomponente
habe ich <a href="http://www.alphasierrapapa.com/componentcenter/asptear/" target="_blank">AspTear</a> verwendet, und ein wirklich sehr minimales Testscript:
</p>

<pre style="background='silver';">
&lt;%
Set xObj = Server.CreateObject("SOFTWING.ASPtear")
%&gt;
</pre>

<p>
Normal aufgerufen ist der Output dieses Scripts exakt gar nichts - eine leere Seite. &Auml;ndert man die
NTFS Permissions auf <b>asptear.dll</b> allerdings von Everyone/Full Control (Standardeinstellung)
auf zB Administrator und SYSTEM/Full Control, dann sieht das Ergebnis so aus:
</p>

<pre style="background='silver';">
Microsoft VBScript runtime error '800a01ad' 
ActiveX component can't create object 
/aspheute/DllCage/doasptear.asp, line 2 
</pre>

<p>
<b>Achtung</b> ASP und IIS cachen die Class Factories der Komponenten, um die Performance zu erh&ouml;hen.
Um daraus resultierende Seiteneffekte f&uuml;r Komponententests zu verhindern, rufen Sie nach der &Auml;nderung
immer zuerst <i>net stop iisadmin /y</i> gefolgt von <i>net start w3svc</i> auf.
</p>

<p>
Mit dieser Radikalkur ist mir nicht geholfen, da nun niemand mehr Zugriff auf die Komponente hat. Wie
bringe ich die Komponente wieder zum Laufen? Nun, da Sites standardm&auml;&szlig;ig Pooled laufen (siehe Screenshot),
</p>

<IMG SRC="/artikel/Bilder/200201/20020129_4.png" width="461" height="435" alt="" border="0">

<p>
mu&szlig; man Read und Execute f&uuml;r den IWAM_<i>machinename</i> Account hinzuf&uuml;gen:
</p>

<IMG SRC="/artikel/Bilder/200201/20020129_1.png" width="370" height="443" alt="" border="0">

<p>
Und schon funktioniert die Seite wieder! Der Haken an der Sache - es funktioniert wieder f&uuml;r alle Sites,
die Pooled laufen - also alle Sites. Wenn man sich eine neue Applikation im Internet Services Manager (ISM)
erstellen l&auml;&szlig;t, wird diese in Component Services eingetragen (hier ist die Standard-Pooled Applikation
selektiert, nur damit jeder wei&szlig;, wo sie zu finden ist):
</p>

<IMG SRC="/artikel/Bilder/200201/20020129_2.png" width="572" height="419" alt="" border="0">

<p>
Die letzten beiden Applikationen in der Liste sind eigenst&auml;ndige Applikationen, denen man - genauso wie
der Pooled Applikation - einen anderen Account zuweisen kann (und mu&szlig;, wenn man die verschiedenen Sites
auf diese Weise auseinanderhalten will):
</p>

<IMG SRC="/artikel/Bilder/200201/20020129_3.png" width="404" height="448" alt="" border="0">

<p>
Also mu&szlig; man folgendes beachten, um eine Komponente per NTFS ACL's abzusichern:
</p>

<ul>
<li>Alle Sites, die die Komponente verwenden sollen, m&uuml;ssen unter Pooled/Out-of-process Accounts laufen, die
    von denen unterschiedlich sind, f&uuml;r die die Komponente nicht angreifbar sein darf.
<li>Die DLL/EXE der Komponente per NTFS ACL auf Read und Execute f&uuml;r die berechtigten Pooled/Out-of-process
    Accounts einschr&auml;nken.
</ul>

<h2>Absicherung mittels Registry Berechtigungen</h2>
<p>
Die oben vorgestellte Methode funktioniert bis zu einem genau definierten Knackpunkt: was macht man,
wenn Site A Komponente X verwenden darf, und Site B Komponente Y - aber X und Y in ein und derselben
DLL gespeichert sind? Abstrakt? Keineswegs: <i>Scripting.Dictionary</i> und <i>Scripting.FileSystemObject</i> teilen
sich eine gemeinsame DLL - und hin und wieder kann das Sperren des FileSystemObjects f&uuml;r eine Site
wichtig werden.
</p>
<p>
Die Problemstellung ist nun bekannt, was macht man? Eine Komponente kann via <i>Server.CreateObject</i>
sowohl &uuml;ber ProgId (zB <i>Scripting.FileSystemObject</i>) oder ClassId (zb <i>{A06F79A7-A329-11D2-880F-0020AFD81B6D}</i>)
instanziert werden. Beide sind in der Registry gespeichert, und sagen COM+, wie die Komponente geladen
werden mu&szlig; (vereinfacht dargestellt). Da die ClassId letzlich das f&uuml;r COM+ ausschlaggebende St&uuml;ck Information
ist, mu&szlig; nur diese per ACL abgesichert werden.
</p>
<p>
Wie stellt man das an? Als erstes startet man <b>regedit.exe</b> und sucht nach der ProgId, in unserem
Fall <i>Scripting.FileSystemObject</i>:
</p>

<IMG SRC="/artikel/Bilder/200201/20020129_6.png" width="594" height="134" alt="" border="0">

<p>
Ein Doppelklick auf <i>(Default)</i> und man kann aus der Edit String Dialogbox die zugeh&ouml;rige ClassId in die Zwischenablage
herauskopieren. Nun startet man den "richtigen" Registry-Editor, n&auml;mlich <b>regedt32.exe</b> - denn nur
dieser kann verwendet werden, um ACL's zu setzen - aber dessen Suchfunktionen sind h&ouml;flich formuliert
sehr eingeschr&auml;nkt, deswegen der Umweg &uuml;ber <b>regedit.exe</b>.
</p>

<p>
Wir sind also im Registry Editor (<b>regedt32.exe</b>). Dort w&auml;hlt man das Fenster mit dem HKEY_LOCAL_MACHINE
Zweig der Registry, und startet im View Men&uuml; den Find Key Befehl. Dort f&uuml;gt man die zuvor kopierte ClassId
ein und klickt auf Find Next. Die richtige Fundstelle hat man dann, wenn das Element ein Plussymbol zeigt,
aufgemacht werden kann, und einen ProgId Unterschl&uuml;ssel hat:
</p>

<IMG SRC="/artikel/Bilder/200201/20020129_8.png" width="622" height="459" alt="" border="0">

<p>
Der schwierige Teil ist nun vorbei - unter Security / Permissions findet man nun die gewohnte ACL Dialogbox
wieder. Damit ein User eine Komponente erstellen kann, mu&szlig; er Leseberechtigung auf dem Schl&uuml;ssel (und Unterschl&uuml;sseln)
haben. Der folgende ACL zB zeigt, da&szlig; IWAM_<i>machinename</i> keinerlei Zugriff hat:
</p>

<IMG SRC="/artikel/Bilder/200201/20020129_9.png" width="367" height="443" alt="" border="0">

<p>
Und richtig, das FileSystemObject ist ab sofort off-limits:
</p>

<pre style="background='silver';">
Microsoft VBScript runtime error '800a01ad' 
ActiveX component can't create object 
/AspHeute/DllCage/dofso.asp, line 2 
</pre>

<p>
Es gilt hier genau das gleiche wie f&uuml;r NTFS Berechtigungen - nur die User zulassen, die auf die entsprechenden
COM+ Applikationen (Web Applikationsroots) zugewiesen sind.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Durch &Auml;nderungen an NTFS und Registry Permissions kann man auch die B&uuml;chse der Pandora &ouml;ffnen - man sollte
sich unbedingt den Artikel <a href="../artikel/20011119.htm">Schritt-f&uuml;r-Schritt Debuggen von Sicherheitsproblemen</a> durchlesen!
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20020412.htm">Der Microsoft Baseline Security Analyzer (MBSA) 1.0</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020412.htm</span><br>
<a href="../artikel/20011119.htm">Schritt-f&uuml;r-Schritt Debuggen von Sicherheitsproblemen</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20011119.htm</span><br>
<a href="../artikel/20001109.htm">Verzeichnissicherheit mit NTFS und IIS Authentifizierung</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001109.htm</span><br>
<a href="../artikel/20020131.htm">Vorsicht Falle: Dateien, die keine sind</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020131.htm</span><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Ealphasierrapapa%2Ecom%2Fcomponentcenter%2Fasptear%2F">AspTear</a><br>
<SPAN class="content">http://www.alphasierrapapa.com/componentcenter/asptear/</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
