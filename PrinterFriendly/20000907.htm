<HTML>
<HEAD>
<TITLE>Einfacher Test, ob der Browser Cookies annimmt</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Man kann sich nie sicher sein, da&szlig; der Browser des Benutzers den
zugeh&ouml;rigen Sessioncookie annimmt. Dieser Artikel erklärt wie man dieses Problem mit Hilfe von ASP löst.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,BrowserHawk, Cookies, Session Variable, Sessioncookie, CookiesEnabled, ServerVariables">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Einfacher Test, ob der Browser Cookies annimmt</H1>
<p>
Geschrieben von: <a href="../autoren/christiankoller.htm">Christian Koller</a><br>
Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20000907"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Das Problem ist vielen Programmieren bekannt: Man benutzt Session Variablen
und kann sich nie sicher sein, da&szlig; der Browser des Benutzers auch den 
zugeh&ouml;rigen Sessioncookie annimmt. Akzeptiert der Browser den Cookie nicht,
so kann man f&uuml;r den Benutzer keine Werte in Session Variablen speichern.
Ohne Session Variablen zu benutzen ist zum Beispiel die Implementation eines 
abgesicherten Bereiches einer Website nur mit sehr viel Aufwand m&ouml;glich.
</p>
<p>
Oftmals ist es notwendig, f&uuml;r den Fall, da&szlig; der Browser keine Cookies
akzeptiert, einen alternative Inhalt der HTML-Seite zum 
Browser zu schicken, die an die Gegebenheiten und M&ouml;glichkeiten des Browsers
angepasst ist.
</p>
<p>
Wie kann nun ein ASP Skript erkennen, ob der Browser Cookies annimmt?
</p>
<p>
Die elegante M&ouml;glichkeit, n&auml;mlich eine serverseitige Komponente 
wie BrowserHawk 2000 zu benutzen, habe ich schon in den Artikeln
<a href="../artikel/20000412.htm">Pr&uuml;fen ob ein Browser Cookies annimmt</a>
und
<a href="../artikel/20000410.htm">Browsereigenschaften mit BrowserHawk 2000 bestimmen</a>
erw&auml;hnt.
</p>
<p>
Aber wenn Sie am Server keine Komponente zur Verf&uuml;gung haben,
gibt es auch einen Weg, um mit reinem ASP zu erkennen,
ob der Browser Cookies annimmt.
</p>
<h2>Implementation der Pr&uuml;fung</h2>
<p>
Da eine Session Variable nur dann gespeichert bleibt, wenn der Browser Cookies
annimmt, kann man auch den umgekehrten Weg gehen: Einen Wert in einer Session
Variablen speichern, zu einer neuen ASP Seite gehen, und dort pr&uuml;fen, ob der 
Wert noch immer in der Session Variablen gespeichert ist. Ist dies der Fall,
so akzeptiert der Browser Cookies.
</p>
<p>
Wie dies auf ein und der selben Seite gepr&uuml;ft werden kann, zeigt das 
folgende Skript:
</p>
<p>
<pre style="background='silver';">
 1: &lt;% @Language=VBScript %&gt;
 2: &lt;% 
 3: <i>' Pruefen, ob bereits ein Redirect vorangegangen ist:</i>
 4: strRedirect = Request.QueryString("Redirect")
 5: If UCase(strRedirect) &lt;&gt; UCase("True") Then
 6:    <i>' Es hat noch kein Redirect stattgefunden,</i>
 7:    <i>' die Seite ist erst aufgerufen worden.</i>
 8: 
 9:    <i>' Wert in einer Session Variable speichern</i>
10:    Session("CookiesEnabled") = True
11: 
12:    <i>' Redirect zur selben Seite machen</i>
13:    strSeite = Request.ServerVariables("SCRIPT_NAME")
14:    <i>' Querystring an die URL anhaengen um zu kennzeichnen,</i>
15:    <i>' dass die Seite via Redirect aufgerufen wurde:</i>
16:    strQueryString = "Redirect=True"
17:    strURL = strSeite &amp; "?" &amp; strQueryString
18:    Response.Redirect(strURL)
19:    Response.End
20: Else
21:    <i>' Es hat ein Redirect stattgefunden.</i>
22:    <i>' Pruefen, ob der Wert in der Session Variablen</i>
23:    <i>' noch immer gespeichert ist.</i>
24:    bSessionWert = Session("CookiesEnabled")
25:    If bSessionWert = True Then
26:       bCookies = True
27:    Else
28:       bCookies = False
29:    End If
30: End If 
31: 
32: <i>' den Wert in bCookies benutzen, um Aktionen zu setzen:</i>
33: If bCookies = True Then
34:    Response.Write("&lt;font color=""Green""&gt;Ihr Browser " & _
35:       "nimmt Cookies an.&lt;/font&gt;")
36: Else
37:    Response.Write("&lt;font color=""Red""&gt;Ihr Browser " & _
38:       "nimmt keine Cookies an.&lt;/font&gt;")
39: End If
40: %&gt;
</pre>
</p>
<p>
Sie k&ouml;nnen das Script auch <a href="20000907_01.asp">hier testen</a>.
Der Sourcecode des Scripts kannn downgeloadet werden (siehe Link am Fu&szlig;
des Artikels).
</p>
<p>
Was macht das Script im einzelnen? Es speichert in Zeile 10 einen Wert
in einer Session Variablen, ruft sich selbst in Zeile 18 mittels
<i>Response.Redirect</i> auf, und pr&uuml;ft anschliessend in Zeile 24 bis 29,
ob der in der Sessionvariablen gespeicherte Wert noch immer vorhanden ist.
</p>
<p>
Der Trick dabei ist, da&szlig; beim Redirect an die URL ein QueryString 
(<i>Redirect=True</i>) geh&auml;ngt wird, der sozusagen als Marker dient, 
da&szlig; das Script gerade via Redirect aufgerufen wird.
Der QueryString wird in den Zeilen 16 und 17 an die URL des Skripts selbst
geh&auml;ngt, bevor in Zeile 18 der Redirect erfolgt.
</p>
<p>
Bei jedem Aufruf pr&uuml;ft nun das Script, ob bereits ein Redirct erfolgt ist.
Dazu liest es, auf gut Gl&uuml;ck, den Wert des QueryStrings aus und speichrt ihn
in der Variablen <i>strRedirect</i> in Zeile 4. Wenn kein QueryString in der URL 
vorhanden ist, weil das Script eben das erste Mal aufgerufen wurde, dann
enth&auml;lt die Variable <i>strRedirect</i> nur einen Leerstring. Ist
das Script jedoch via redirect aufgerufen worden, so enth&auml;lt die
Variable <i>strRedirect</i> den Wert "<i>True</i>".
</p>
<p>
Wird das Script also das erste Mal aufgerufen, so werden die Zeilen 6
bis 19 ausgef&uuml;hrt, ein Wert in der Session Variablen
<i>Session("CookiesEnabled")</i> gespeichert, die URL des Scripts in Zeile
13 mittles <i>Request.ServerVariables("SCRIPT_NAME")</i> ermittelt,
ein QueryString an die URL angeh&auml;ngt um den Redirect zu kennzeichnen,
und anschlie&szlig;end das Skript nochmals aufgerufen.
</p>
<p>
Wird das Script nun via Redirect aus Zeile 18 aufgerufen, so werden die Zeilen 
21 bis 29 ausgef&uuml;hrt: Die Session Variable <i>Session("CookiesEnabled")</i>
wird ausgelesen und ihr Wert in der Variablen bSessionWert gespeichert. 
Enth&auml;lt die Session Variable den Wert <i>True</i> weil der Browser Cookies
annimmt, so wird der Wert der Variablen <i>bCookies</i> auf <i>True</i>
gesetzt, um zu kennzeichnen, da&szlig; der Browser Cookies annimmt.
Falls die Session Variable keine Wert enth&auml;lt weil der Browser keine Cookies
annimmt, so wird die Variable <i>bCookies</i> auf <i>False</i> gesetzt.
</p>
<p>
Den Wert der Variablen <i>bCookies</i> kann man dann im weiteren Script
benutzen, um jeweils darauf zu reagieren, ob der Browser Cookies annimmt
oder nicht, wie das im Script in den Zeilen 32 bis 39 exemplarisch 
ausgef&uuml;hrt ist.
</p>
<p>
Es ist noch anzumerken, da&szlig; das Script noch verbessert werden kann.
So k&ouml;nnte man zum Beispiel schon vor der Zeile 3 pr&uuml;fen, ob die 
Session Variable <i>Session("CookiesEnabled")</i> den Wert <i>True</i> enth&auml;lt.
Ist dies der Fall, so wei&szlig; man, da&szlig; die Session Variable in einer
anderen Seite oder einem fr&uuml;heren Seitenaufruf gesetzt wurde und 
der Browser daher Cookies annimmt!
</p>
<h2>Schlu&szlig;bemerkung</h2>
<p>
ASP Seiten, die Session Variablen benutzen, sind darauf angewiesen,
da&szlig; der Browser den Session Cookie annimmt und speichert.
Um keine falschen Annahmen dar&uuml;ber zu treffen, ob der Browser 
Cookies annimmt oder nicht, empfiehlt sich in jeder ASP Seite,
die Session Variablen oder Cookies benutzt, zu pr&uuml;fen,
ob der jeweilige Browser tats&auml;chlich Cookies annimmt.
</p>
<p>
Diese Pr&uuml;fung l&auml;&szlig;t sich in reinem ASP implementieren,
indem man eine Session Variable setzt, eine Redirect zum selben
ASP Script ausf&uuml;hrt und anschlie&szlig;end pr&uuml;ft, ob der Wert noch
immer in der Session Variablen gespeichert ist.
</p>
<p>
Wenn der Browser Cookies annimmt, so ist der Wert auch nach dem Redirect
in der Session Variable vorhanden, und das Script "wei&szlig;", da&szlig;
es getrost darauf vertrauen kann, da&szlig; Session Variablen
auf &uuml;ber ASP Seiten hinweg erhalten bleiben.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p>
<h2>Download des Codes</h2>
<p><a href="../Code/20000907.zip">Klicken Sie hier</a>, um den Download zu starten.<br><SPAN class="content">http://www.aspheute.com/code/20000907.zip</span></p>
<h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20000410.htm">Browsereigenschaften mit BrowserHawk 2000 bestimmen</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000410.htm</span><br>
<a href="../artikel/20000908.htm">Cookies in Flash mittels ASP manipulieren</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000908.htm</span><br>
<a href="../artikel/20010306.htm">Dynamische Stylesheets</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010306.htm</span><br>
<a href="../artikel/20010509.htm">Neue Inhalte einer Web Site f&uuml;r den Benutzer hervorheben</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010509.htm</span><br>
<a href="../artikel/20000412.htm">Pr&uuml;fen ob ein Browser Cookies annimmt</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000412.htm</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
