<HTML>
<HEAD>
<TITLE>Excel Dateien ohne Excel anzeigen</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Dieser Artikel beschreibt wie man eine Excel-Datei schnell und einfach dem Benutzer im Web oder Intranet anbietet, ohne daß sich Excel &ouml;ffnet zeigt dieser Artikel.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Excel,Jet-Datenbanktreiber,ASP,Tabellenkalkulation,Excel-Datei,Webserver,Web Server,Internet">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Excel Dateien ohne Excel anzeigen</H1>
<p>
Geschrieben von: <a href="../autoren/hubertdaubmeier.htm">Hubert Daubmeier</a><br>
Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20001110"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Excel wird gerne zum Verwalten von Listen aller Art verwendet. Es ist einfacher zu handhaben 
und verlangt weniger - eigentlich keine - Struktur bei der Anlage, wie das etwa eine 
Datenbank erfordern w&uuml;rde. Nun w&auml;re es doch naheliegend so eine Excel-Datei auch im Web oder
Intranet anzubieten. Wie man eine Excel-Datei auf den Server stellt und verlinkt wissen Sie 
sicher. Aber wie man sie schnell und einfach dem Benutzer anbietet, ohne da&szlig; sich Excel 
&ouml;ffnet zeigt dieser Artikel.
</p>

<p>
Ein Folgeartikel besch&auml;ftigt sich dann mit dem Gegenteil: wie bietet man dem Besucher eine 
vorhandene Liste als Excel-Datei an, soda&szlig; sie einfach weiterverwendet werden kann. Dies 
ber&uuml;cksichtigte der hier vorgestellte Code bereits. 
</p>

<h2>Die Excel-Datei vorbereiten</h2>

<p>
Zum Vorgehen verwenden wir ADO bzw. den Jet-Datenbanktreiber der auch den Komfort bietet eine 
Excel-Datei als Datenbank abzufragen. Damit verbunden ist jedoch ein kleiner Wehmutstropfen: 
da wir die Daten als Datenbank abfragen, k&ouml;nnen keine Formatierung und keinerlei grafische 
Objekte (Diagramme, Textfelder, etc) angezeigt werden. 
</p>

<p>
Zwei Dinge sollten erf&uuml;llt sein, damit dies funktioniert:
</p>

<p>
<ol>
<li>
Markieren Sie in Ihrer Excel-Datei den Bereich, der sp&auml;ter als Datenbank verwendet werden 
soll und legen Sie einen beliebigen Namen daf&uuml;r fest (entweder per Strg-F3 oder 
EINF&Uuml;GEN - NAMEN - NAMEN DEFINIEREN). Wenn Sie das Beispiel ohne &Auml;nderung gleich 
ausprobieren wollen, verwenden Sie bitte den Namen "tabelle". Dies wird hinterher der 
Name der sich hinter dem SELECT feldliste FROM ...." verbergen wird. 
</li>

<li>
Die Tabelle sollte keine Zellen mit mehr als 255 Zeichen enthalten. Ein schneller Weg um 
dies zu erreichen w&auml;re das Tabellenblatt in eine neue Mappe zu kopieren. Dabei werden 
&uuml;berlange Feldinhalte abgeschnitten. Nebenbei bleibt Ihre eigentliche Arbeitsmappe damit 
unver&auml;ndert erhalten. Klicken Sie mit der rechten Taste auf den Karteireiter am unteren 
Rand der Excelmappe und w&auml;hlen VERSCHIEBEN/KOPIEREN. Im folgenden Dialog w&auml;hlen Sie bei 
"Zur Mappe" den Eintrag "(neue Arbeitsmappe)" aus und kreuzen Sie "Kopie erstellen" an.
Die Liste "Einf&uuml;gen vor" ist hier nicht relevant.
</li>
</ol>
</p>

<p>
Die Datei noch auf Ihren ASP-f&auml;higen Server gespeichert und schon kann es ans Programmieren
gehen. Die Beispieldaten dieses Artikels finden Sie in database.xls, und es handelt sich 
um B&ouml;rsedaten:
</p>

<p>
<IMG SRC="/artikel/Bilder/200011/20001110_exceldata.png" width="540" height="385" alt="" border="0">
</p>

<h2>Der Code zur Wiederverwendung</h2>

<p>
Nachfolgend die Beschreibung der Datei READDB.ASP, die wir sp&auml;ter per serverside include 
einbinden. In der Konstante CDATABASE wurde der Name der Exceldatei abgelegt und weit 
oben platziert, damit er sich bei Bedarf schnell &auml;ndern l&auml;sst. Den Rest der Geschichte 
kennen Sie sicher aus anderen Beispielen: es werden die Objektvariablen definiert und die 
Datenbank abgefragt. 
</p>

<p>
<pre style="background='silver';">
Const CDATABASE = "./meineTabelle.xls"

Dim oConn 
Dim oRs 
Dim Index

Set oConn = CreateObject("ADODB.Connection")
oConn.Open "Provider=Microsoft.Jet.OLEDB.4.0;Excel 8.0;DATABASE=" &amp; _
Server.MapPath(CDATABASE)
Set oRs = oConn.Execute("SELECT * FROM tabelle")
</pre>
</p>

<p>
Im Folgenden wird die Datenbank ausgelesen. Zwei kleinere Probleme tauchen auf: wie hei&szlig;en 
denn nun meine Feldnamen in der Datenbank bzw. was passiert, wenn ich deren Namen &auml;ndere?  
Und zum anderen was tun, wenn sich die Anzahl der Spalten &auml;ndert? Bestimmt wurden Ihre 
Spalten und deren &Uuml;berschriften nicht sehr strukturiert angelegt, wie etwa bei einer 
Accessdatenbank. Einfache Antwort: plagen Sie sich nicht und &uuml;berlassen Sie die Arbeit 
dem System. Das Beispiel zeigt daher, wie Sie die Feldnamen per Indexnummer in einer 
Schleife ausgeben und damit beide Probleme elegant umgehen k&ouml;nnen. 
</p>

<p>
<pre style="background='silver';">
  Response.write("&lt;table cellspacing=""0"" cellpadding=""2""&gt;") &amp; vbcrlf
For Index=0 to (oRs.fields.count-1)
  Response.write("&lt;th&gt;" &amp; oRs(Index).Name &amp; "&lt;/td&gt;") &amp; vbcrlf
Next
</pre>
</p>

<p>
Die erste Zeile schreibt den Tabellenheader. Die folgende Schleife durchl&auml;uft die Felder 
und gibt f&uuml;r jedes Feld per .Name den Feldnamen aus. Ich habe hierbei bewu&szlig;t die 
gemischte Schreibweise von ASP Code und HTML vermieden, da die Dinge so doch 
&uuml;bersichtlicher bleiben.
</p>

<p>
<pre style="background='silver';">
Do while (Not oRs.eof)
 Response.write("&lt;tr&gt;") &amp; vbcrlf
For Index=0 to (oRs.fields.count-1)
   Response.write("&lt;td&gt;" &amp; oRs(Index) &amp; "&lt;/td&gt;") &amp; vbcrlf
Next
   Response.write("&lt;/tr&gt;") &amp; vbcrlf
   oRs.MoveNext 
Loop 
</pre>
</p>

<p>
Dieser Codeteil durchl&auml;uft nun alle Datens&auml;tze und gibt sie der Reihe nach aus. Soweit 
keine Abweichung von der Standardbehandlung etwa mit einer Access-DB. Zu guter Letzt 
wird noch der Tabellenabschlu&szlig; geschrieben und die Datenbank geschlossen. 
</p>

<p>
<pre style="background='silver';">
Response.write("&lt;/table&gt;") &amp; vbcrlf

oRs.close
oConn.close 
</pre>
</p>

<h2>Der Code im &Uuml;berblick</h2>

<p>
Das folgende Gesamtlisting der Include-Datei erweitert das obige Beispiel um:
</p>

<p>
<ol>
<li>
Eine farbliche Markierung der jeweils zweiten Zeile, um die Daten &uuml;bersichtlicher darzustellen.
Dazu finden Sie im Download ein Beispiel-Stylesheet. Um das Ihren W&uuml;nschen anzupassen k&ouml;nnen 
Sie &uuml;brigens jederzeit Excel "&uuml;ber die Schulter schauen". Speichern Sie einfach eine 
sch&ouml;n formatierte Tabelle als HTML ab und schauen Sie sich die am Anfang der HTML-Datei 
abgelegten CSS-Style Angaben an. Als goldene Regel: nur das Wichtige rausholen h&auml;lt die
Dinge &uuml;bersichtlicher. Selbstverst&auml;ndlich l&auml;sst sich anstelle von Stylesheets auch mit 
direkter Formatierung arbeiten. 
</li>

<li>
Zum anderen wird der Code in einem Unterprogramm zusammengefasst.
</li>

<li>
3.	Die ASP typischen &lt;%%&gt; Begrenzer d&uuml;rfen auch nicht fehlen. 
</li>
</ol>
</p>

<p>
<pre style="background='silver';">
&lt;%
Const CDATABASE = "./database.xls"

Dim oConn 
Dim oRs 
Dim Index 
Dim sColorcount, sColorstyle

Sub Readdb()
  Set oConn = Server.CreateObject("ADODB.Connection")
  oConn.Open "Provider=Microsoft.Jet.OLEDB.4.0;Excel 8.0;DATABASE=" &amp; _
  Server.MapPath(CDATABASE)
  Set oRs = oConn.Execute("SELECT * FROM tabelle")
    
  Response.write("&lt;table cellspacing=""0"" cellpadding=""2""&gt;") &amp; vbcrlf
  For Index=0 to (oRs.fields.count-1)
    Response.write("&lt;th&gt;" &amp; oRs(Index).Name &amp; "&lt;/td&gt;") &amp; vbcrlf
   Next
    sColorcount = 1
   Do while (Not oRs.eof)
    Response.write("&lt;tr&gt;") &amp; vbcrlf
    if (sColorcount and 1) = 1 Then sColorstyle = " class=""marked""" 
	Else sColorstyle = ""
    For Index=0 to (oRs.fields.count-1)
    Response.write("&lt;td" &amp; sColorstyle &amp; ">" &amp; oRs(Index) &amp; _ 
	    "&lt;/td&gt;") &amp; vbcrlf
   Next
   Response.write("&lt;/tr&gt;") &amp; vbcrlf
   oRs.MoveNext 
   sColorcount = sColorcount + 1
  Loop 
 Response.write("&lt;/table&gt;") &amp; vbcrlf

 oRs.close
 oConn.close 
End Sub
%&gt;
</pre>
</p>

<h2>Die Endmontage</h2>

<p>
Bleibt noch die Ausgabe. Da die Include-Datei die komplette Tabelle erstellt, kann die 
Ausgabeseite einfach oder komplex gehalten sein. Konzentrieren Sie sich in diesem Schritt 
daher mehr auf das Design und nehmen Sie nur die beiden wichtigen Schritte aus diesem 
Beispiel heraus: das Einbinden der Include-Datei in Zeile 2  und an passender Stelle der 
Aufruf der Unterroutine READDB. 
</p>

<p>
Den folgenden Sourcecode finden Sie in der Datei <b>default.asp</b>:
</p>

<p>
<pre style="background='silver';">
&lt;%@ LANGUAGE = VBScript %&gt;
&lt;!-- #include file="include/readdb.asp" --&gt;

&lt;html&gt;

&lt;head&gt;
&lt;title&gt;Excel als Datenbank &lt;/title&gt;
&lt;link rel="stylesheet" type="text/css" href="Include/stylesheet.css"&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;b&gt;Exceldatei als Datenbank ausgegeben&lt;br&gt;
&lt;hr size="1" color="#000000"&gt;

&lt;% call Readdb %&gt;
&lt;/body&gt;

&lt;/html&gt;
</pre>
</p>

<p>
<IMG SRC="/artikel/Bilder/200011/20001110_output-read.png" width="554" height="378" alt="" border="0">
</p>

<h2>Schlu&szlig;bemerkung</h2>

<p>
Das Beispiel ist bewu&szlig;t einfach gehalten.  Ich wollte Ihnen damit prim&auml;r mehr einen 
Startpunkt und ein sofort einsetzbares Beispiel geben, das Sie nach Ihren eigenen Ideen 
ausbauen k&ouml;nnen. Denkbare Erweitungen reichen von der Formatierung bis zur Fehlerbehandlung 
und nat&uuml;rlich einem etwas attraktiverem Design. Nicht sehr elegant gel&ouml;st ist auch die 
fest "verdrahtete" Dateiangabe. Da Sie das Beispiel sicher f&uuml;r Ihre Bed&uuml;rfnisse - etwa um 
die &Uuml;bergabe eines Abfragekriteriums - anpassen werden, sollte Ihrer Kreativit&auml;t keine 
Grenze gesetzt sein. 
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p>
<h2>Download des Codes</h2>
<p><a href="../Code/20001110.zip">Klicken Sie hier</a>, um den Download zu starten.<br><SPAN class="content">http://www.aspheute.com/code/20001110.zip</span></p>
<h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20001128.htm">Datenbank zur Weiterbearbeitung in Excel bereitstellen</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001128.htm</span><br>
<a href="../artikel/20010307.htm">Ein Excel-Diagramm am Server generieren und zum Client schicken</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010307.htm</span><br>
<a href="../artikel/20010305.htm">Ein Excel-Sheet am Server generieren und zum Client schicken</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010305.htm</span><br>
<a href="../artikel/20010309.htm">Excel Diagramme als GIF's serven</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010309.htm</span><br>
<a href="../artikel/20020128.htm">Serverdaten clientseitig in Exceltemplates importieren</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020128.htm</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
