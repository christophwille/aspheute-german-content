<HTML>
<HEAD>
<TITLE>Meta Tags von fremden Seiten parsen</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Mit diesem Artikel greife ich eine Frage aus der aspDEcoffeehouse Liste von AspGerman auf - wie kann man, wenn man eine Seite einer fremden Website als String vor sich hat, die Meta Tags daraus extrahieren, und dann mit den Namen/Werten weiterarbeiten?">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,META,Tag,Meta Tags,Parsen,Parse,Parsing,AspTear,RegEx,regular expression,VBScript.JavaScript,DHTML">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Meta Tags von fremden Seiten parsen</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010803"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Mit diesem Artikel greife ich eine Frage aus der 
<a href="http://www.aspgerman.com/aspgerman/listen/anmelden/aspDEcoffeehouse.asp" target="_blank">aspDEcoffeehouse Liste</a> von 
<a href="http://www.aspgerman.com/aspgerman/" target="_blank">AspGerman</a> auf - wie kann man,
wenn man eine Seite einer fremden Website als String vor sich hat, die Meta Tags daraus extrahieren, und 
dann mit den Namen/Werten weiterarbeiten? Wie bei den 
<a href="http://www.aspgerman.com/aspgerman/listen/" target="_blank">AspGerman Listen</a> so &uuml;blich, gab es eine L&ouml;sung.
</p>
<p>
Diese hatte allerdings einen "Haken" - das vorgeschlagene Skript, stammend aus dem 
<a href="http://faqchest.dynhost.com/msdn/IE-HTML/script-99/script-9911/script99112506_20925.html" target="_blank">IE-HTML Digest</a>
war einerseits client-seitig, und andererseits in JavaScript geschrieben. Die Frage daher: wie bekomme ich
das auf den Server, und wie verwende ich es wenn ich in VBScript programmiere?
</p>

<h2>Das client-seitige Ausgangsskript</h2>
<p>
Das Script, das im Download als <b>clientjstest.asp</b> verf&uuml;gbar ist, stammt aus dem
<a href="http://faqchest.dynhost.com/msdn/IE-HTML/script-99/script-9911/script99112506_20925.html" target="_blank">IE-HTML Digest</a>,
und ich habe es klarerweise zuallererst unver&auml;ndert getestet (die Variable <i>sHeadHtml</i> ist der Lesbarkeit
halber gek&uuml;rzt):
</p>

<pre style="background='silver';">
  &lt;SCRIPT LANGUAGE-"JScript"&gt;

    var sHeadHtml = '&lt; META NAME = "AuthorName" CONTENT="  Geor  .....';

    function ShowMetaTags()
    {
      var aMetaMatch = sHeadHtml.match(/&lt;\s*META[^&gt;]*&gt;/gi);
      {
        if (!aMetaMatch) return false;
        var iNumMeta = aMetaMatch.length;
        for (var i=0;i&lt;iNumMeta;i++)
        {
          var sMetaMatch = aMetaMatch[i];
          var aAttMatch = sMetaMatch.match(/NAME\s*=\s*(["][^"]*["]|\S*)\s+
              <i>[line continued]</i>CONTENT\s*=\s*(["][^"]*["]|\S*)\s*/i);
          window.alert("Tag: " + sMetaMatch);
          window.alert("Name: " + RegExp.$1);
          window.alert("Content: " + RegExp.$2);
        }
      }
    }

  &lt;/SCRIPT&gt;

  &lt;BUTTON ONCLICK="ShowMetaTags();"&gt;Show Meta Tags&lt;/BUTTON&gt;
</pre>

<p>
Jawohl, das Skript erf&uuml;llt seinen Zweck - also werden wir es jetzt in ein serverseitiges Skript umbauen.
</p>

<h2>Konvertierung auf serverseitiges Skript</h2>
<p>
Hier g&auml;be es zwei Varianten - Variante 1 ist, das Skript von JavaScript auf VBScript umzuprogrammieren. Das
ist mir aber zu viel Arbeit. Ich habe mich f&uuml;r Variante 2 entschieden: das JavaScript f&uuml;r serverseitige
Ausf&uuml;hrung anpassen, und von VBScript aus aufrufen - und dabei das nette Feature von ASP ausnutzen, auf einer
Seite mehrere Skriptsprachen mischen zu k&ouml;nnen.
</p>

<p>
Ganz so einfach wollte ich es mir auch nicht machen - deshalb stecke ich die gefundenen Meta Tags in ein
Dictionary - und da ich es nur auf derselben Seite verwende, handle ich mir auch keine Threadingprobleme
ein. Der Parsing-Code ist in der JavaScript Funktion <i>ParseMetaTags</i> enthalten, der Aufruf geschieht von 
VBScript aus (<b>ParseMetaTags.asp</b>).
</p>

<pre style="background='silver';">
&lt;% @Language=VBScript %&gt;
&lt;%
Option Explicit
Dim sHeadHtml, objDict, arrTags, arrTagValues, i

sHeadHtml = "&lt; META NAME = ""AuthorName"" CONTENT=""  ....."
Set objDict = Server.CreateObject("Scripting.Dictionary")
Call ParseMetaTags(sHeadHtml, objDict)

arrTags = objDict.Keys
arrTagValues = objDict.Items
For i = 0 To (objDict.Count -1)
	Response.Write arrTags(i) &amp; " " &amp; arrTagValues(i) &amp; "&lt;br&gt;"
Next

Set objDict = Nothing
%&gt;
&lt;script language="jscript" runat="server"&gt;
function ParseMetaTags(strText2Parse, objDictionary)
{
  var aMetaMatch = strText2Parse.match(/&lt;\s*META[^&gt;]*&gt;/gi);
  {
    if (!aMetaMatch) return false;
    var iNumMeta = aMetaMatch.length;
    for (var i=0;i&lt;iNumMeta;i++)
    {
      var sMetaMatch = aMetaMatch[i];
      var aAttMatch = sMetaMatch.match(/NAME\s*=\s*(["][^"]*["]|\S*)\s+
          <i>[line continued]</i>CONTENT\s*=\s*(["][^"]*["]|\S*)\s*/i);
      objDictionary.Add(RegExp.$1, RegExp.$2);
    }
  }
}
&lt;/script&gt;
</pre>

<p>
Die Idee mit dem Dictionary dient dazu, sp&auml;ter bequem nach bestimmten Meta Tags suchen zu k&ouml;nnen. Wenn man
das nicht vorhat, w&uuml;rde ein simples Array ausreichen.
</p>

<h2>Wir parsen fremde Seiten</h2>
<p>
Punkt 1 beim Parsen von Seiten von fremden Servern ist der, sich die Seite erst einmal zu holen. Dies
habe ich der Einfachheit halber ohne gro&szlig;e Fehlerbehandlung mittels AspTear realisiert (Links
zu Download und detaillierteren Artikeln am Ende des heutigen). Der gesamte 
Sourcecode ist in der Datei <b>ParseRemoteSite.asp</b> des heutigen Downloads enthalten.
</p>
<pre style="background='silver';">
&lt;script language="vbscript" runat="server"&gt;
Function RetrievePageGet(ByVal strWebDatei)
    Dim objAspTear, strDateiInhalt
    Set objAspTear = Server.CreateObject("SOFTWING.ASPtear")      
    strDateiInhalt = objAspTear.Retrieve(strWebDatei, 2, "", "", "")
    Set objAspTear = Nothing
    RetrievePageGet = strDateiInhalt
End Function
&lt;/script&gt;
</pre>

<p>
Diese Funktion liefert mir also das Dokument, das ich parsen will. Dieses &uuml;bergebe ich dann wieder
der Funktion <i>ParseMetaTags</i>, die nun noch einen zus&auml;tzlichen Check enth&auml;lt, ob das Tag nicht
schon im Dictionary enthalten ist:
</p>

<pre style="background='silver';">
&lt;script language="jscript" runat="server"&gt;
function ParseMetaTags(strText2Parse, objDictionary)
{
  var aMetaMatch = strText2Parse.match(/&lt;\s*META[^&gt;]*&gt;/gi);
  {
    if (!aMetaMatch) return false;
    var iNumMeta = aMetaMatch.length;
    for (var i=0;i&lt;iNumMeta;i++)
    {
      var sMetaMatch = aMetaMatch[i];
      var aAttMatch = sMetaMatch.match(/NAME\s*=\s*(["][^"]*["]|\S*)\s+
          <i>[line continued]</i>CONTENT\s*=\s*(["][^"]*["]|\S*)\s*/i);
      if (!objDictionary.Exists(RegExp.$1))
      {
        objDictionary.Add(RegExp.$1, RegExp.$2);
      }
    }
  }
}
&lt;/script&gt;
</pre>

<p>
Damit h&auml;tten wir alle Grundfunktionalit&auml;ten abgedeckt. Der Aufruf der entsprechenden Funktionen
ist nun wieder einfaches VBScript:
</p>

<pre style="background='silver';">
&lt;% @Language=VBScript %&gt;
&lt;%
Option Explicit
Dim sHeadHtml, objDict, arrTags, arrTagValues, i

sHeadHtml = RetrievePageGet("http://strangelove../default.htm")

Set objDict = Server.CreateObject("Scripting.Dictionary")
Call ParseMetaTags(sHeadHtml, objDict)

arrTags = objDict.Keys
arrTagValues = objDict.Items
For i = 0 To (objDict.Count -1)
	Response.Write arrTags(i) &amp; " " &amp; arrTagValues(i) &amp; "&lt;br&gt;"
Next

Set objDict = Nothing
%&gt;
</pre>

<p>
Damit erh&auml;lt man eine Liste von Meta Tags und ihren Werten. Durch die Suchfunktionen des Dictionary
kann man allerdings "intelligentere" Verarbeitungswege einschlagen, als den hier gezeigten.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Dieser Artikel sollte zeigen, da&szlig; nur weil ein Beispiel client-seitiger Code ist, noch dazu in einer
Programmiersprache die man normalerweise nicht verwendet, dies noch lange kein Hinderungsgrund ist,
sich die Funktionalit&auml;t dieses Codes in eigene server-seitige Scripts einzuverleiben.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010803.zip">Klicken Sie hier</a>, um den Download zu starten.<br><SPAN class="content">http://www.aspheute.com/code/20010803.zip</span></p>
<h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/19990806.htm">Das Dictionary Objekt - Dein Feind und Helfer</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/19990806.htm</span><br>
<a href="../artikel/20000508.htm">Erstellen eines HTTP Test Tools</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000508.htm</span><br>
<a href="../artikel/20000519.htm">Laden von Dateien aus dem Web mit ASP</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000519.htm</span><br>
<a href="../artikel/20000829.htm">Regul&auml;re Ausdr&uuml;cke / Regular Expressions</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000829.htm</span><br>
<a href="../artikel/20011113.htm">Sonderzeichen korrekt grabben mit XmlHttp</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20011113.htm</span><br>
<a href="../artikel/20010328.htm">Webpage-Grabbing mit dem XML Parser</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010328.htm</span><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Easpgerman%2Ecom%2Faspgerman%2F">AspGerman</a><br>
<SPAN class="content">http://www.aspgerman.com/aspgerman/</span><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Ealphasierrapapa%2Ecom%2Fcomponentcenter%2Fasptear%2F">AspTear</a><br>
<SPAN class="content">http://www.alphasierrapapa.com/componentcenter/asptear/</span><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Ffaqchest%2Edynhost%2Ecom%2Fmsdn%2FIE%2DHTML%2Fscript%2D99%2Fscript%2D9911%2Fscript99112506%5F20925%2Ehtml">IE-HTML Digest</a><br>
<SPAN class="content">http://faqchest.dynhost.com/msdn/IE-HTML/script-99/script-9911/script99112506_20925.html</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
