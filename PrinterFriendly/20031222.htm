<HTML>
<HEAD>
<TITLE>Tee Off! Wolpertinger Genome Project</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Nach langer Pause gab es wieder ein Golfturnier mit spannender Aufgabe und
heroischen Mitspielern. Dieses Mal stammt die Aufgabenstellung von Alexander Veit.
Die Aufgabe erscheint auf den ersten Blick kompliziert...">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Golf,Wolpertinger,Blond,Genom,Golffreunde,Gene,Sequenzierung,Leaderboard,Tee Off,Fairway">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Tee Off! Wolpertinger Genome Project</H1>
<p>
Geschrieben von: <a href="../autoren/bernhardspuida.htm">Bernhard Spuida</a><br>
Kategorie: <a href="../kategorien/Tee%20Off.htm">Tee Off</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20031222"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Nach langer Pause gab es wieder ein Golfturnier mit spannender Aufgabe und
heroischen Mitspielern. Dieses Mal stammt die Aufgabenstellung von Alexander Veit.
Die Aufgabe erscheint auf den ersten Blick kompliziert -
weshalb auch eine Dauer von einem Monat f&uuml;r das Turnier festgesetzt wurde -
ist aber mit erstaunlich wenig Schl&auml;gen zu bew&auml;tigen. Sehen wir sie uns
an.
</p>

<h3>Die Aufgabenstellung</h3>
<p>
B&ouml;sewicht Venter m&ouml;chte aus der DNA verschiedener alpenl&auml;ndischer
Tierarten den Wolpertinger wieder erschaffen. Hans Blond, Topspion der Staatspolizei,
soll ihm zuvor kommen und die Welt vor der Tyrannei, die Venter mit Hilfe des
Wolpertingers zu errichten gedenkt (Wie soll das gehen?, der Autor) bewahren.
</p>
</p>
Da Blond keinen Plan von Molekulargenetik hat, bittet er seine Golffreunde um
Mithilfe.
</p>
<p>
Regeln:
</p>

<ol>
<li> Application("input") ist ein Array aus DNA-Fragmenten, Application("output")
 ist das rekonstruierte Wolpertinger-Gen.</li>

<li>Ein DNA-Fragment ist eine nichtleere Zeichenkette aus [A-Z]*.</li>

<li>Ein Gen ist ein DNA-Fragment.</li>

<li>Zwei DNA-Fragmente passen zueinander, wenn sie &uuml;berlappende Anfangs- oder
Endst&uuml;cke haben. Sie k&ouml;nnen dann miteinander verschmolzen werden.
Bsp.:
<pre>
 "A...O" und "Q...O"   passen nicht zusammen

 "AS...Z" und "U...AS" passen zusammen: "U...AS"
                                                     --> "U...AS...Z"
                                            "AS...Z"
</pre></li>
<li>Gibt es mehr als eine &Uuml;berlappung, so erh&auml;lt beim Verschmelzen die
gr&ouml;&szlig;te den Vorzug.
Bsp.:
<pre>
 "A...GOLF"
           "OLF...U"    --> "A...GOLF...V", "OLF...U"
          "GOLF...V"
</pre></li>
<li>Die Aufgaben werden so gew&auml;hlt, da&szlig; sie eindeutig l&ouml;sbar sind und
alle Fragmente in das eine resultierende Gen eingebaut werden k&ouml;nnen.
Insbesondere gibt es zu einem vorgegebenen Fragment h&ouml;chstens ein Fortsetzungsst&uuml;ck
mit maximaler &Uuml;berlappung. Dieses passt dann nicht gleichzeitig mit gleicher
oder gr&ouml;&szlig;erer &Uuml;berlappung an ein anderes Fragment als Fortsetzungsst&uuml;ck.
Falls es hilft: das Anfangsst&uuml;ck des gesamten Gens beginnt immer mit einem
A. Diese Eigenschaft hat kein anderes Fragment.</li>
</ol>

<p>
Diese Aufgabenstellung h&oumL;rt sich wirklich kompliziert und nahezu unl&ouml;sbar
an. Ist sie aber nicht, au&szlig;erdem wurde ein Testprogramm zur Verf&uuml;gung gestellt.
Ein Beispiel f&uuml;r Rohdaten in der richtigen Sequenz:
</p>

<pre>
ALLEK
    KUEHE
		   HETR 
        ETRINK
            NKENG
                GERNEM
                     MILCH
</pre>

<p>
Ist doch nicht so schlimm wie man nach dem ersten Durchlesen der Aufgabenstellung
meinen k&ouml;nnte, oder? Nach einigen Diskussionen auf der Mailingliste war allen
klar was zu tun war und ein spannendes Turnier nahm seinen Lauf.
</p>

<h3>Leaderboard</h3>
<ul>
<li>1. Johann Engbers 192</li>
<li>2. Michele Marsching 199</li>
<li>3. Markus Oestreicher 211</li>
<li>4. Michael Schmidt 249</li>
<li>5. Stefan Mayer 311</li>
<li>6. Claudius Ceteras 318</li>
<li>7. Daniel Daxl 462</li>
</ul>

<p>
Zwar recht wenige Teilnehmer, aber in Anbetracht der Aufgabe beachtlich. Und
kein einziger Golfer lag zum Turnierende im Bunker. Die ersten beiden Pl&auml;tze
bekamen einen Intrexx Portal Manager respektive ein United Planet Zippo. Gratulation!
Bedenkt man da&szlig; die l&auml;ngste g&uuml;ltige Einreichung bei 712 Schl&auml;gen
(Stefan Mayer, auf 311 herunter gegolft) liegt, ist der Spizenplatz wirklich
eindrucksvoll. Wir waren alle &uuml;berrascht da&szlig; so etwas m&ouml;glich ist.
</p>
<p>
Und nun wenden wir uns einigen L&ouml;sungen zu:
</p>

<h3>Stefan Mayer</h3>
<p>
<i>Stefan hat eine wahrhaft heroische Verbesserung seines Scores erreicht. Von
anf&auml;nglich 712 um 401 Schl&auml;ge verbessert, alle Achtung.</i>
</p>
<p>
Na dann - mein Code samt Erkl&auml;rung:
</p>

<pre style="background='silver';">
&lt;%Set V=Application
A=V("input")
u=ubound(a)
for g=0 to u
m=0
for i=0 to u
for j=0 to u
c=len(a(i)):d=len(a(j))
if d&lt;c then c=d
p=0
for e=1 to c
if i&lt;&gt;j and right(a(i),e)=left(a(j),e) then p=e
next
if m&lt;p then m=p:k=j:f=i
next
next
a(f)=a(f)&amp;mid(a(k),m+1)
a(k)=""
next
v("output")=join(a,q)%&gt;
</pre>

<p>
Mein Problem ist aber, da&szlig; ich nicht mehr so genau wei&szlig;, wie ich darauf
gekommen bin......
</p>

<p>
Auf jeden Fall funktioniert es so: Die einzelnen Fragmente werden jeder mit jedem auf &Uuml;berschneidungen
verglichen und da, wo sie am gr&ouml;&szlig;ten ist, wird Vorderteil und Hinterteil
im Feld des Vorderteils gespeichert. Der Hinterteil wird auf "" gesetzt.
Das ganze wiederholt er so oft es Felder im Array gibt.
</p>
<p>
Zum Schlu&szlig; wird das Array zusammengebaut mit dem Trennzeichen LEER.
</p>
<p>
That's it
</p>

<h3>Michael Schmidt</h3>
<p>
<i>Die beste L&ouml;sung ist ablauftechnisch &auml;hnlich der von Stefan Mayer, aber
doch um einiges
k&uuml;rzer. Au&szlig;erdem erkl&auml;rt uns Michael noch einen alternativen Ansatz den
er aus Zeitgr&uuml;nden leider nicht einreichen konnte. Man mu&szlig; nicht immer 
'for'-Schleifen nehmen...</i>
</p>
<p>
Platz da und Weg frei f&uuml;r meine L&ouml;sung:
</p>

<pre style="background='silver';">
&lt;%set a=Application:i=a("input"):u=ubound(i)
for e=0to u
t=0
for m=0to u:for n=0to u
if m&lt;&gt;n then
for j=1to len(i(m))
if right(i(m),j)=left(i(n),j) and j&gt;t then t=j:b=m:c=n
next
end if
next:next
i(b)=i(b)&amp;mid(i(c),t+1)
i(c)=r
next
a("output")=i(b)%&gt;
</pre>

<p>Also: Von der Technik ebenso wie bei Stefan,
ich durchlaufe eine Schleife sooft wie Elemente &uuml;bergeben wurden.
Die Variable t wird bei jedem Schleifendurchlauf auf 0 gesetzt, in
ihr wird sp&auml;ter in der Schleife die maximale &Uuml;berlappung gespeichert.
Jetzt wird jedes Element im Input-Array mit jedem anderen verglichen,
wobei mit einer Schleife, geschaut wird, wie hoch jeweils die  &Uuml;berlappung
zum n&auml;chsten Element ist (right(i(m),j)=left(i(n),j)). Ist bei diesem
Schleifendurchlauf noch keine h&ouml;here &Uuml;berlappung gefunden worden (j&gt;t),
merke ich mir die &Uuml;berlappung in t und die entsprechenden Elementnummern
in b und c (t=j:b=m:c=n). Danach f&uuml;ge ich direkt im Input-Array den nicht
&uuml;berlappenden Rest des c-Elements (rechter Teil der &Uuml;berlappung,
mid(i(c),t+1)) an das  b-Element (linker Teil der &Uuml;berlappung, i(b)) und
leere das Feld i(c). Am Ende von dat Janze steht nur noch im letzten
i(b)-Feld etwas, was dann auch direkt an a("output") &uuml;bergeben werden
kann.
</p>

<p>
&Uuml;brigens: Zweite L&ouml;sung mit 237 Zeichen:
</p>

<pre style="background='silver';">
&lt;%set a=Application:i=a("input"):u=ubound(i)
do
t=0
for m=0to u
for n=0to u
for j=1to len(i(m))
if right(i(m),j)=left(i(n),j) and j&gt;t and m&lt;&gt;n then t=j:b=m:c=n
next
next
next
i(b)=i(b)&amp;mid(i(c),t+1)
i(c)=r
loop while t
a("output")=i(b)%&gt;
</pre>

<p>
Funktionsweise wie oben, jedoch mit</p>
<p>


<pre style="background='silver';">do
...
loop while t</pre>

<p>
statt der &auml;u&szlig;eren for/next-Schleife. Es l&auml;uft halt so lange, wie es 
&Uuml;berlappungen gibt.
</p>

<p>
m&lt;&gt;n innerhalb von if right(i(m),j)=left(i(n),j) and j&gt;t and m&lt;&gt;n,  
dadurch spare ich mir ein weiteres "if", "then" und "end if".
</p>

<p>
<i>So wird man nebenher noch diese l&auml;stigen Abfragen los...</i>
</p>

<h3>Markus Oestreicher</h3>
<p>
<i>Diese L&ouml;sung ist anders und zeigt uns Golf wie es sich geh&ouml;rt - 
knapp, originell und funktional. Die vorbildliche Erkl&auml;rung folgt den in den Code
eingef&uuml;gten Ziffern.</i>
<p>
<p>
So... Platz 3 meldet sich auch zu Wort.
</p>

<pre style="background='silver';">
&lt;%
(1)
set b=application
a=b("input")
c=ubound(a)

(2)
p=9
while p
 m=1
(3)	for i=0to c
 for j=0to c
  s=a(j)
(4)		if right(a(i),p)=left(s,p)&lt;(i=j)&lt;(s=x)then 
   a(i)=a(i)&amp;mid(s,p+1)
   a(j)=x
(5)			m=0
  end if
 next
 next
(6)	p=p-m
wend
b("output")=join(a,x)
%&gt;
</pre>

<p>
(1) Das traditionelle "must have" <i>(Siehe dazu fr&uuml;here Tee Off! Artikel)</i><br>

(2) Ich habe eine Variable p eingef&uuml;hrt. Gepr&uuml;ft werden jeweils
p-fache &Uuml;bereinstimmungen. Ich beginne bei 9 und z&auml;hle St&uuml;ck f&uuml;r
St&uuml;ck herunter.<br>

(3) Die beiden for-Schleifen testen alle Kombinationen durch. An
dieser Stelle hatte ich lange mit einem Konstrukt von div/modulo 
gebastelt, die for/for Schleife war aber letztlich am k&uuml;rzesten.<br>

(4) Traumhaft... Dieses Konstrukt nutzt die Tatsache aus, da&szlig; ein
Vergleich (x=y) entweder 0 (false) oder (-1) true liefert. So kann
ich mit gr&ouml;&szlig;er/kleiner die UND Verkn&uuml;pfung herstellen. Fr&uuml;her stand 
dort ein (s&lt;&gt;x)and(i&lt;&gt;j)and right(t,p)=left(s,p)<br>
Entwicklungsdauer: verdammt lange, Nutzwert: 3 Bytes ;-)<br>

Der Aufwand kommt daher, weil ich keine leeren Strings miteinander
vergleichen darf (s&lt;&gt;x, x undefiniert, spart 1 Byte) bzw. weil ich 
nicht die selben Positionen miteinander vergleichen darf. (i&lt;&gt;j)<br>

(5) Falls ich zwei Elemente verschmelzen konnte, setze ich m=0
und erzwinge einen erneuten Durchlauf.<br>

(6) Konnte ich nichts ersetzen, gehts weiter mit allen (p-1) fachen
&Uuml;bereinstimmungen. Falls etwas ersetzt werden konnte, ist m hier 0
und die Schleife startet mit dem selben p erneut.<br>


Der Ansatz ist in dieser Form relativ sauber. Leider haben mich auf
den letzten Metern ein bischen die Ideen verlassen ;-)
</p>

<p>
<i>Kopf hoch - beim n&auml;chsten Turnier wirds wieder!</i>
</p>

<h3>Michele Marsching</h3>
<p>
<i>Die L&ouml;sungen werden zwar k&uuml;rzer je mehr wir uns der Spitze
n&auml;hern, die Erkl&auml;rungen aber nicht. Auch hier sind die wichtigsten
Schritte nummeriert. Michele hat auch eine sehenswerte
L&ouml;sung gefunden, die der des Siegers &auml;hnelt, aber doch unterschiedlich
ist. Jeder Golfer hat seinen pers&ouml;nlichen Stil. Seht selbst:</i>
</p>
<p>
Dann wollen wir mal
</p>

<pre style="background='silver';">
&lt;%SET a=Application
b=a("input")
FOR L=99TO 1STEP-1 #1
c=UBOUND(b)
FOR z=0TO c #2
FOR y=0TO c
e=b(y)
f=b(z)
IF LEFT(f,L)=RIGHT(e,L)THEN
b(z)=w:b(y)=e&amp;MID(f,L+1):a("output")=join(b,w)END IF #3
NEXT
NEXT
NEXT%&gt;
</pre>

<p>
Nachdem ich zuerst die &Uuml;bereinstimmung in einem zweidimensionalen Array
gespeichert hatte, kam mir irgendwann die Idee, wie bei Johann wohl
auch...<br>
<br>
Beispiel ALLEK KUEHE HETR TRINKEN<br>
#1 Ich vergleiche von allen Strings Teile der L&auml;nge L<br>
#2 Ich gehe 2x durch das Array durch<br>
#3 Finde ich eine &Uuml;bereinstimmung in den verglichenen Teilen (kueHE -
#HEtr),
merke ich mir das erste Fragment (f=b(z)), l&ouml;sche den Wert an der Stelle
im Array (b(z)=w) und f&uuml;ge das erste Fragment und den fehlenden Rest des
zweiten Fragmentes zusammen und speichere ihn dort, wo das zweite Fragment
im Array war. Das neue Array w&auml;re also ALLEK* *KUEHETR*TRINKEN</p>

<p>
Mit dem FOR L=-99TO-1 von Johann w&auml;re ich auf 197/196 (wenn 9 statt 99)
Bytes gekommen. Beim n&auml;chsten Mal f&auml;llt mir da auch wieder was vom
Auge,... ;)
</p>
<p>
P.S.: Nachdem ich mit Markus auf einer Stufe war, glaube ich, da&szlig; er das selbe
hatte wie ich, aber die Zeile 8 bei ihm noch IF e&lt;&gt;""AND z&lt;&gt;y AND
LEFT(b(z),L)=RIGHT(e,L)THEN
b(y)=e&amp;MID(b(z),L+1):b(z)=w:a("output")=b(y)END IF hei&szlig;t... fragt mich
nicht, wie ich darauf gekommen bin, das eine andere Art, sich den Wert zu
merken die Abfragen nicht mehr braucht ;)
</p>
<p>
P.S.2: Endlich mal Silber *smile*
</p>
<p>
<i>Bewundernswert. Und nun auf zum Sieger mit seinen unglaublichen 192 Schl&auml;gen.</i>
</p>

<h3>Johann Engbers</h3>
<p>
<i>Die bisherigen L&ouml;sungen waren ja alle mehr oder weniger 'gierig' - d.h.
sie suchten nach den gr&ouml;&szlig;ten &Uuml;berlappungen. Johann ging einen anderen Weg,
&auml;hnlich wie Michele und doch anders:</i>
</p>
<p>
Hallo Golfer, hier dann mein Code:
</p>

<pre style="background='silver';">
&lt;%set b=application
h=b("input")
p=ubound(h)
for c=-9to-1
for l=0to p
for i=0to p
if l&lt;&gt;i and right(h(l),-c)=left(h(i),-c)then
h(i)=h(l)&amp;mid(h(i),1-c):h(l)=l:b("output")=h(i)
next:next:next%&gt;
</pre>

<p>
Meine Schleifen funktionieren ein wenig anders, ich suche nicht die
gr&ouml;&szlig;te &Uuml;berlappung, sondern teste von 9 nach 1 runter (bi&szlig;chen
gepfuscht, 99 w&auml;re besser gewesen) ob es eine solche &Uuml;berlappung gibt.
Dann werden diese Elemente verschmolzen. for c=-9to-1  statt for c=9 to 1
step -1 l&lt;&gt;i brauche ich, damit kein Element mit sich selbst verglichen
wird. Ich habe zuerst das verschmolzene Element im Array auf "" gesetzt,
brauchte dann aber eine zus&auml;tzliche Abfrage. Daher habe ich zum l&ouml;schen
einfach in das i-te Arrayfeld die Zahl i geschrieben (h(l)=l), so st&ouml;ren
die gel&ouml;schten Werte nicht mehr. Da das Genom zum Schlu&szlig; ein Ganzes ist,
mu&szlig; es in dem Feld mit der letzten Verschmelzung stehen, daher
b("output")=h(i). Spart das Join.
</p>
<p>
<i>Bravo, die Handhabung der gel&ouml;schten Felder ist genial. Ein verdienter
erster Platz!</i>
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Bei ASP Golf lernt man immer wieder dazu. Selbst nach all den Turnieren die ich
schon als Schiedsrichter betreut habe finde ich doch jedesmal wieder Code der mich
staunen macht oder mir Tr&auml;nen in die Augen treibt. Was w&auml;re das Leben ohne
Golf...
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20021202.htm">3. Loch - Dr. Evils Qualit&auml;tskontrolle</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20021202.htm</span><br>
<a href="../artikel/20030324.htm">Minigolf - 99 Bottles of Beer</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20030324.htm</span><br>
<a href="../artikel/20020930.htm">Tee Off - Das erste ASP Golf Turnier</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020930.htm</span><br>
<a href="../artikel/20021104.htm">Tee Off! Die Zweite</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20021104.htm</span><br>
<a href="../artikel/20030115.htm">Tee Off! Zahlen, W&ouml;rter, Zahlw&ouml;rter</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20030115.htm</span><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Easpgerman%2Ecom%2Fgolf%2Farchiv%2Easp%3Faction%3Dleader%26id%3D11%23data">Leaderboard Loch 7</a><br>
<SPAN class="content">http://www.aspgerman.com/golf/archiv.asp?action=leader&id=11#data</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
