<HTML>
<HEAD>
<TITLE>Entwicklung eines Event-Managers mit ASP.NET 1.1</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Dieser Artikel gibt einen Überblick über die Architektur des EventManagers, der für die vom 04. - 05. Juni 2004 zum ersten Mal stattfindende .NET Community Conference mit ASP.NET 1.1 und C# entwickelt wurde.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Event,Community,.NET Community Conference,Konferenz,Schulung,Tagung,Informationsveranstaltung,Seminar,Track,Vortrag,MVP,Anmeldung">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Entwicklung eines Event-Managers mit ASP.NET 1.1</H1>
<p>
Geschrieben von: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a><br>
Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20040519"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
Die Zahl der Informations- und Fortbildungsveranstaltungen - inbesondere im IT-Sektor - nimmt zu. Die Besucher dieser Veranstaltungen 
erwarten heutzutage, da&szlig; Sie sich &uuml;ber eine Website komfortabel anmelden k&ouml;nnen und auch weitergehende Informationen zum Event 
erhalten. Dieser Artikel gibt einen &Uuml;berblick &uuml;ber die Architektur des EventManagers, der f&uuml;r die vom 
<a href="http://www.dotnetcommunityconference.com/abstract.aspx?ID=4" target="blank">04. - 05. Juni 2004</a>
zum ersten Mal stattfindende 
<a href="http://www.dotnetcommunityconference.com" target="blank">.NET Community Conference</a>
mit ASP.NET 1.1 und C# entwickelt wurde.
</p>

<h2>Zielsetzung</h2>
<p>
Wie bereits erw&auml;hnt, soll die Applikation den Interessenten die M&ouml;glichkeit bieten, sich sowohl auf einer 
<a href="http://www.dotnetcommunityconference.com/abstract.aspx?ID=4" target="_blank">&ouml;ffentlichen Website</a> 
&uuml;ber bevorstehende als auch &uuml;ber bereits vergangene Events zu informieren. 
</p>
<p>
Nach der <a href="http://www.dotnetcommunityconference.com/signup.aspx" target="_blank">Registrierung</a> 
kann der Besucher auf einer per 
<a href="http://www.dotnetcommunityconference.com/myevents/AttendeeLogin.aspx" target="_blank">Login</a>
gesch&uuml;tzten, privaten Seite (Bild) sein Profil (Bild), sein Pa&szlig;wort (Bild)  und seine Event-Anmeldungen (Bild)  verwalten.
</p>

<p>
<ul>
	<li>Private Seite<br><IMG SRC="/artikel/Bilder/200405/20040519_1.png" width="751" height="529" alt="" border="0">
	<li>Profil<br><IMG SRC="/artikel/Bilder/200405/20040519_2.png" width="751" height="529" alt="" border="0">
	<li>Pa&szlig;wortwartung<br><IMG SRC="/artikel/Bilder/200405/20040519_3.png" width="751" height="529" alt="" border="0">
	<li>Event-Anmeldungen<br><IMG SRC="/artikel/Bilder/200405/20040519_4.png" width="751" height="529" alt="" border="0">
</ul>
</p>

<p>
Verwaltet wird die Applikation rollenbasiert von einem Enterprise Administrator sowie beliebig 
vielen Event Administratoren und Event Managern.
</p>
<p>
Hiermit ergibt sich also folgendes Schema der Applikation:
</p>

<IMG SRC="/artikel/Bilder/200405/20040519_5.png" width="462" height="640" alt="" border="0">

<h2>Architektur der Applikation</h2>
<p>
Um eine flexible Anpassung der Applikation hinsichtlich beliebiger Frontends (Web, Windows, etc.) und Datenbanken 
(Access, SQL Server, etc.) zu erm&ouml;glichen, wird die Applikation mehrschichtig aufgebaut:
</p>

<IMG SRC="/artikel/Bilder/200405/20040519_6.png" width="553" height="647" alt="" border="0">

<p>
Wie man sieht ist die Applikation als typische 3-Schichten (Three Tier)-Applikation ausgef&uuml;hrt und in die Bereiche 
Pr&auml;sentationsschicht (Presentation Layer), Gesch&auml;ftslogik (Business Logic Layer) und Datenbankzugriffsschicht 
(Data Access Layer) unterteilt. 
</p>
<p>
Die Datenspeicherung erfolgt wie gefordert in der Datenbank.
</p>
<p>
 Die drei genannten Layer, die das Event-Management abbilden, kommunizieren auf allen Ebenen miteinander und werden durch 
 ein umfassendes Sicherheitskonzept gegen eine Vielzahl von Angriffen gesch&uuml;tzt. 
</p>

<h2>Data Access Layer</h2>
<p>
Die Aufgaben des Data Access Layers bzw. dessen Klassen und Methoden (Data Access Components, kurz DAC) bestehen darin, Daten 
aus der Datenbank zu lesen bzw. die Daten der Gesch&auml;ftsobjekte (Business Entities, kurz BE) aus dem Business Logic Layer in 
der Datenbank zu speichern. Hierbei implementieren die DAC's auch Gesch&auml;ftslogik, um datenbankbezogene Aufgaben zu erledigen.
</p>
<p>
Der Data Access Layer stellt Methoden bereit, um die folgenden Aufgaben, die er vom Business Logic Layer 
gestellt bekommt, zu erledigen:
</p>

<p>
<ul>
	<li>Erzeugen von neuen Eintr&auml;gen in der Datenbank (Create) anhand &uuml;bergebener Daten aus dem Business Logic Layer
	<li>Lesen von Applikationsdaten aus der Datenbank und Weitergabe an den Business Logic Layer (Read)
	<li>Aktualisieren von Applikationsdaten aufgrund von &Auml;nderungen an den Daten durch den Business Logic Layer (Update)
	<li>L&ouml;schen von Daten in der Datenbank (Delete)
</ul>
</p>

<p>
Diese vier Vorg&auml;nge werden h&auml;ufig mit dem Begriff "CRUD" abgek&uuml;rzt, abgeleitet von den Anfangsbuchstaben der englischen Begriffe.
</p>
<p>
Au&szlig;erdem implementiert der Data Access Layer, wie bereits erw&auml;hnt, auch Gesch&auml;ftslogik und zwar in der Art, da&szlig; er eine Methode 
bereitstellt, welche beispielsweise alle Anmeldungen zu einem Event auflistet.
</p>
<p>
Typischerweise implementiert jede DAC die Methoden f&uuml;r jeweils eine Datenbank und kapselt diese f&uuml;r bestimmte Tabellen. So 
w&auml;ren z.B. eine Klasse und deren Methoden f&uuml;r die Bearbeitung der Event-Tabelle zust&auml;ndig, eine andere Klasse f&uuml;r die 
Besucher- und Adress-Tabellen.
</p>
<p>
Zur Vereinfachung h&auml;ufig wiederkehrender Aufgaben wie das Lesen und Schreiben von Daten stellt Microsoft den 
<a href="http://msdn.microsoft.com/library../default.htm?url=/library/en-us/dnbda/html/daab-rm.asp" target="_blank">Data Access Application Block</a> (DAAB) 
bereit. Dieser bietet optimierte Methoden f&uuml;r den Zugriff auf SQL Server und Access-Datenbanken mittels gespeicherten Prozeduren 
bzw. parametrisierten Abfragen sowie SQL-Abfragen. Der DAAB liefert 
<a href="http://msdn.microsoft.com/library../default.htm?url=/library/en-us/cpref/html/frlrfSystemDataSqlClientSqlDataReaderClassTopic.asp" target="_blank">SqlDataReader</a>-, 
<a href="http://msdn.microsoft.com/library../default.htm?url=/library/en-us/cpref/html/frlrfsystemdatadatasetclasstopic.asp" target="_blank">DataSet</a>- und 
<a href="http://msdn.microsoft.com/library../default.htm?url=/library/en-us/cpref/html/frlrfsystemxmlxmlreaderclasstopic.asp" target="_blank">XmlReader</a>-Objekte 
als Abfrageergebnisse zur&uuml;ck. F&uuml;r die Zusammenarbeit mit 
<a href="http://msdn.microsoft.com/library/en-us/cpguide/html/cpconWorkingWithTypedDataSet.asp?frame=true" target="_blank">Typed DataSets</a>
liefert er ebenfalls passende Methoden.
</p>

<h2>Business Logic Layer</h2>
<p>
Jede DAC ist f&uuml;r ein bestimmtes Gesch&auml;ftsobjekt zust&auml;ndig. Gesch&auml;ftsobjekte repr&auml;sentieren z.B. Events, Besucher, Adressen usw. Folgende 
M&ouml;glichkeiten zur Abbildung der Gesch&auml;ftsobjekte existieren:
</p>

<p>
<ul>
	<li>XML-Strings oder XML-Dokumente
	<li>DataSets - das sind im Arbeitsspeicher erzeugte Tabellen. Die Daten k&ouml;nnen aus einer Datenbank-Tabelle oder 
		einem XML-Dokument stammen. DataSets sind in ADO.NET enthalten.
	<li>Typed DataSets - sie stellen eine Ableitung der o.g. DataSets dar, allerdings stellen sie im Gegensatz zu den 
		normalen DataSets typsichere Methoden, Eigenschaften und Ereignisse bereit.
	<li>Eigene Klassen - jede Klasse stellt ein eigenes Gesch&auml;ftsobjekt dar. Es werden Felder f&uuml;r die Speicherung der 
		Daten des Gesch&auml;ftsobjekts definiert, die &uuml;ber die Eigenschaften der Klasse bereitgestellt werden. Weiterhin 
		werden Methoden implementiert, um Gesch&auml;ftslogik abzubilden, z.B. das Anlegen eines neuen Events. Au&szlig;erdem 
		stellt die Klasse Methoden zur &Uuml;bergabe der Daten an den Data Access Layer bereit, um die CRUD-Funktionen f&uuml;r das 
		jeweilige Gesch&auml;ftsobjekt auszuf&uuml;hren.
</ul>
</p>

<p>
Bei dem hier vorgestellten EventManager arbeiten wir mit eigenen Klassen, um die Gesch&auml;ftsobjekte darzustellen.
</p>

<h2>Presentation Layer</h2>
<p>
Der Presentation Layer dient der Pr&auml;sentation der Gesch&auml;tslogik und deren Objekten, also der Benutzeroberfl&auml;che des EventManagers. 
</p>
<p>
Da der EventManager &uuml;ber eine Website verf&uuml;gbar sein soll, implementieren wir den Presentation Layer mit ASP.NET 1.1. 
</p>
<p>
Aufgrund der bisher gezeigten mehrschichtigen Architektur des EventManagers w&auml;re auch ohne &Auml;nderungen an Presentation und 
Data Access Layer ein Umstieg von ASP.NET auf WinForms m&ouml;glich.
</p>
<p>
F&uuml;r eine einfache Implementierung und eine leichte Anpassung der Seiten des EventManagers wird das Grundger&uuml;st der Website mit 
Master Pages realisiert. Hierbei handelt es sich um Seitenvorlagen, die das grundlegende HTML-Layout der Seite beinhalten. 
</p>
<p>
In diesen Vorlagen finden sich dann Platzhalter, &uuml;ber die dann zur Laufzeit ASP.NET UserControls geladen werden, welche die 
eigentlichen Funktionen wie die Besucherregistrierung oder die Anzeige der Event-Details implementieren:
</p>

<IMG SRC="/artikel/Bilder/200405/20040519_7.png" width="443" height="652" alt="" border="0">

<p>
Die Verwendung von Master Pages in Verbindung mit CSS erlaubt es, die Seite mit wenigen Anpassungen unabh&auml;ngig von Business Logic 
und Data Access Layer v&ouml;llig umzugestalten, wie Sie den folgenden Screenshots entnehmen k&ouml;nnen:
</p>

<p>
<ul>
	<li>Tracks der Veranstaltung<br>
		<IMG SRC="/artikel/Bilder/200405/20040519_8.png" width="765" height="642" alt="" border="0">
	<li>Besucherregistrierung<br>
		<IMG SRC="/artikel/Bilder/200405/20040519_9.png" width="774" height="642" alt="" border="0">
	<li>Besucher-Login<br>
		<IMG SRC="/artikel/Bilder/200405/20040519_10.png" width="765" height="642" alt="" border="0">
</ul>
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Damit sind wir bereits am Ende unserer kurzen Einf&uuml;hrung in die Entwicklung eines EventManagers mit ASP.NET. Wenn Sie sich nun 
zu Recht fragen, wie z.B. die Administration des EventManagers aussieht, die Daten zwischen den Layern ausgetauscht werden 
oder die Gesch&auml;ftsobjekte aussehen: Melden Sie noch heute zur 
<a href="http://www.dotnetcommunityconference.com/abstract.aspx?ID=4" target="_blank">.NET Community Conference vom 4. bis 5. Juni 2004 in Karlsruhe</a>
an und erfahren Sie weitere Details zum EventManager. Sie haben au&szlig;erdem die M&ouml;glichkeit, in der 
<a href="http://www.dotnetcommunityconference.com/SessionDetails.aspx?id=4&SessID=52" target="_blank">Podiumsdiskussion</a>
Fragen diesbez&uuml;glich sowie zu den Themen der anderen 
<a href="http://www.dotnetcommunityconference.com/tracksandsessions.aspx?ID=4" target="_blank">Sessions</a>
zu stellen.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Edotnetcommunityconference%2Ecom%2Fabstract%2Easpx%3FID%3D4">.NET Community Conference vom 4. bis 5. Juni 2004 in Karlsruhe</a><br>
<SPAN class="content">http://www.dotnetcommunityconference.com/abstract.aspx?ID=4</span><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Edotnetcommunityconference%2Ecom%2F">.NET Community Conferences</a><br>
<SPAN class="content">http://www.dotnetcommunityconference.com/</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
