<HTML>
<HEAD>
<TITLE>Einstieg in Visual Studio.NET - die erste Webanwendung mit Visual C#</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="21 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Dem Einstieg in die Microsoft Visual Studio.NET IDE (=Integrated Development Environment) sowie die Erstellung einer einfachen ASP.NET-Webapplikation widmet sich dieser Artikel.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,VS.NET,Einstieg,Einsteiger,Anfang,Anfänger,Beginn,Tutorial,101,Start,Getting Started,Visual Studio .NET,Lernen,Umsteigen,Hilfe">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<H1>Einstieg in Visual Studio.NET - die erste Webanwendung mit Visual C#</H1>
<p>
Geschrieben von: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a><br>
Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20031010"></SCRIPT>
</p>


<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><p>
F&uuml;r die Entwicklung von ASP.NET-Webanwendungen steht inzwischen eine Reihe von hochwertigen Entwicklungsumgebungen zur Verf&uuml;gung. 
Die wohl bekannteste und von Microsoft forcierte ist sicherlich Microsoft Visual Studio.NET. Dem Einstieg in ebendiese IDE 
(=Integrated Development Environment) sowie die Erstellung einer einfachen ASP.NET-Webapplikation widmet sich dieser Artikel.
</p>

<h2>Ein neues Projekt</h2>
<p>
Nach dem Start von Visual Studio.NET (kurz VS.NET) sollte sich die Anwendung wie folgt (oder &auml;hnlich pr&auml;sentieren):
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_1.png" width="527" height="419" alt="" border="0">

<p>
VS.NET unterscheidet zwischen Projekten und Dateien. Ein Projekt kann eine  z.B. ASP.NET-Webapplikation, eine WinForm-Anwendung 
oder ein WebService sein. Innerhalb dieser Projekte befinden sich die Dateien.
</p>
<p>
Um also unsere erste ASP.NET-Anwendung mit VS.NET zu erstellen, m&uuml;ssen wir ein neues Projekt vom Typ ASP.NET-Webanwendung 
anlegen. Hierzu klicken wir im Men&uuml; "Datei" auf den Men&uuml;punkt "Neu" und w&auml;hlen "Projekt" aus:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_2.png" width="485" height="362" alt="" border="0">

<p>
Alternativ k&ouml;nnen Sie auch einfach auf den Button "Neues Projekt" im ersten Screenshot klicken. In jedem Fall sollte sich dann 
aber der Dialog "Neues Projekt" &ouml;ffnen, in dem Sie bitte die gezeigten Einstellungen vornehmen:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_3.png" width="531" height="364" alt="" border="0">

<p>
Nach dem Klick auf den OK-Button, beginnt VS.NET mit der Erzeugung des neuen Projekts (Hinweis: es wird vorausgesetzt, da&szlig; 
Sie auf der lokalen Maschine den IIS installiert haben).
</p>

<h2>Gesagt - getan</h2>
<p>
Nach wenigen Augenblicken pr&auml;sentiert sich die VS.NET-IDE dann wie folgt:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_4.png" width="532" height="584" alt="" border="0">

<p>
VS.NET hat beim Erzeugen des Projektes "HelloWorld" bereits mehrere Aufgaben f&uuml;r uns erledigt:
</p>

<ul>
	<li>Anlegen eines neuen Projektes unter "Eigene Dateien/Visual Studio-Projekte/HelloWorld"
	<li>Anlegen der Verzeichnisse und Dateien (z.B. Web.Config, Global.asax usw.) unterhalb der Standard-Website 
		(normalerweise zu finden im Ordner C:\Inetpub\wwwroot\)
	<li>Erzeugen einer neuen Applikation mit dem Namen "HelloWorld" unterhalb der Standardwebsite am IIS
</ul>

<h2>&Uuml;berblick &uuml;ber die IDE</h2>
<p>
Bevor wir uns nun der eigentlichen Programmierung unserer ersten ASP.NET-Webanwendung mit VS.NET zuwenden, betrachten wir 
zun&auml;chst die wichtigsten Komponenten der VS.NET-Umgebung genauer:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_5.png" width="590" height="581" alt="" border="0">

<p>
Wie Sie der Darstellung entnehmen k&ouml;nnen, besteht die IDE aus vier Kernkomponenten, die zur Entwicklung einer Anwendung 
notwendig sind (zwei weitere werden wir im Verlauf kennenlernen):
</p>

<ul>
	<li>Toolbox: Hier sind alle wichtigen WebForm-, Datenzugriffs- und HTML-Objekte verankert. Diese k&ouml;nnen zur 
		Verwendung per Drag and Drop in den Designer gezogen werden. Die Toolbox kann auch durch eigene Objekte, z.B. 
		CodeSnippets oder Controls erweitert werden. Sollte die Toolbox nicht angezeigt werden, k&ouml;nnen Sie diese im Men&uuml; 
		unter "Ansicht / Toolbox" aktivieren. Um die Toolbox dauerhaft anzuzeigen, klicken Sie einfach auf die Pin-Nadel 
		in der Toolbox-Titelleiste. Dadurch wird diese fixiert (dies gilt nat&uuml;rlich auch f&uuml;r alle anderen Fenster in VS.NET).
	<li>Designer: Hierbei handelt es sich um einen WYSIWYG-Editor, der die aktuell bearbeitete Seite - soweit m&ouml;glich - bereits 
		fertig darstellt, so wie sie im Browser (genauer: im Internet Explorer) erscheinen wird. S&auml;mtliche Objekte lassen sich 
		komfortabel mit der Maus an die gew&uuml;nschte Position schieben und editieren.
	<li>Projektmappen-Explorer: Hier sind alle Dateien des aktuell ge&ouml;ffneten Projekts gelistet. &Uuml;ber dieses Fenster lassen 
		sich neue Dateien (gleich welcher Art) hinzuf&uuml;gen und die Projekteigenschaften bearbeiten.
	<li>Eigenschaften-Fenster: Hier k&ouml;nnen Sie die Eigenschaften des im Designer gew&auml;hlten Objektes ver&auml;ndern.
</ul>

<h2>Die erste ASP.NET-Seite in VS.NET</h2>
<p>
Da wir unser Werkzeug nun in den Grundz&uuml;gen kennen, k&ouml;nnen wir mit der Erstellung unserer ersten ASP.NET-Seite in VS.NET beginnen. 
VS.NET hat beim Erzeugen unseres Projektes "HelloWorld" bereits eine leere aspx-Datei, die WebForm1.aspx, angelegt. Bitte benennen 
Sie dieses Datei nun, wie im Screenshot zu sehen, im Projektmappen-Explorer in HelloWorld.aspx um:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_6.png" width="409" height="313" alt="" border="0">

<p>
Nach dem Umbenennen der Datei k&ouml;nnen Sie diese durch einen Doppelklick im Projektmappen-Explorer im Designer &ouml;ffnen.
</p>
<p>
Die Anwendung, die wir erstellen m&ouml;chten, soll folgendes tun: Der Benutzer kann in einem Textfeld seinen Namen angeben und auf 
einen Button klicken. Nach dem Klick erscheint eine Meldung, die den Benutzer auf der Seite pers&ouml;nlich begr&uuml;&szlig;t. Wird kein Name 
angegeben, soll die Seite eine Meldung ausgeben, da&szlig; eine Eingabe unbedingt notwendig ist.
</p>
<p>
F&uuml;r unsere Applikation ben&ouml;tigen wir folgende Objekte:
</p>

<ul>
	<li>einen Label "LblHeadline" f&uuml;r die &Uuml;berschrift
	<li>einen Label "LblUserName" f&uuml;r die Beschriftung der Textbox
	<li>eine TextBox "TbxUserName" f&uuml;r die Eingabe des Benutzernamens
	<li>einen RequiredFieldValidator "RfvUserName" zur Validierung der Textbox
	<li>einen Label "LblMessage" zur Ausgabe der Begr&uuml;&szlig;ungsmeldung
	<li>einen Button "BtnSubmit" zum Absenden und Weiterverarbeiten der Eingabe
</ul>

<p>
Die ben&ouml;tigten Objekte ziehen Sie bitte aus der Toolbox auf den Designer:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_7.png" width="468" height="251" alt="" border="0">

<p>
Danach sollte Ihre HelloWorld.aspx im Designer etwa so aussehen:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_8.png" width="482" height="319" alt="" border="0">

<p>
Nun m&uuml;ssen Sie im Eigenschaften-Fenster die Eigenschaften der neuen Objekte entsprechend anpassen. Exemplarisch sei hier der 
Label "LblHeadline" dargestellt:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_9.png" width="579" height="672" alt="" border="0">

<p>
Um die Eigenschaften des jeweiligen Objektes zu &auml;ndern, klicken Sie das Objekt im Designer einmal an und wechseln dann in 
das Eigenschaften-Fenster.
</p>
<p>
Die Eigenschaften der anderen Objekte sind wie folgt zu &auml;ndern:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_10.png" width="580" height="372" alt="" border="0">

<p>
Somit haben wir den grundlegenden Aufbau unserer HelloWorld.aspx bereits erledigt. Was jetzt noch fehlt, ist die Logik, also der 
C#-Code, der unsere Seite zum Leben erweckt. 
</p>
<p>
Da die Seite auf die Eingaben in der Textbox nach dem Klicken auf den Submit-Button reagieren soll, m&uuml;ssen wir auch dort mit der 
Abarbeitung unserer Befehle beginnen. Hierzu nutzen wir das Event "OnClick" des Submit-Buttons. 
</p>
<p>
Um das Event und den grundlegenden Code f&uuml;r eine Funktion nach dem Klick auf den Button in VS.NET zu generieren, gen&uuml;gt ein einfacher 
Doppelklick auf den Button "BtnSubmit" im VS.NET-Designer. 
</p>
<p>
Durch den Doppelklick &ouml;ffnet VS.NET automatisch die CodeBehind-Datei HelloWorld.aspx.cs, die zur HelloWorld.aspx-Datei geh&ouml;rt. In der 
CodeBehind-Datei befindet sich der eigentliche C#-Code f&uuml;r die zugeh&ouml;rige aspx-Datei:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_11.png" width="589" height="565" alt="" border="0">

<p>
Im letzten Code-Abschnitt befindet sich die bereits erw&auml;hnte Funktion BtnSubmit_Click, welche beim Klick auf den 
Submit-Button abgearbeitet wird.
</p>
<p>
Bitte &auml;ndern Sie die Funktion BtnSubmit_Click nun wie folgt:
</p>

<pre style="background='silver';">
private void BtnSubmit_Click(object sender, System.EventArgs e)
{
	LblMessage.Text="Hallo " + TbxUserName.Text + "!";
}
</pre>

<p>
Hierdurch weisen wir dem Label LblMessage den Inhalt unserer TextBox TbxUserName zu und stellen ihn dar.
</p>
<p>
Um den bisherigen Stand unserer Web-Applikation zu testen, speichern Sie bitte alle Dateien im aktuellen Projekt. Danach klicken 
Sie bitte im Men&uuml; "Erstellen" auf "HelloWorld erstellen":
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_12.png" width="266" height="169" alt="" border="0">

<p>
Das Ausgabefenster, das sich nun &ouml;ffnet, sollte folgende Meldung anzeigen:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_13.png" width="500" height="191" alt="" border="0">

<p>
Im Ausgabefenster werden Meldungen zu Fehlern, die w&auml;hrend des Kompilierens auftreten, angezeigt, um die Fehlersuche im 
Code zu erleichtern.
</p>
<p>
Nach dem Kompilieren (=Erstellen) wechseln Sie bitte wieder zur HelloWorld.aspx und klicken mit der rechten Maustaste in die Seite. 
Hierdurch &ouml;ffnet sich das Kontextmen&uuml; zur HelloWord.aspx, wo Sie dann "In Browser anzeigen" ausw&auml;hlen:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_14.png" width="537" height="367" alt="" border="0">

<p>
VS.NET &ouml;ffnet nun ein weiteres Fenster, in welchem unsere HelloWorld.aspx in einem Internet Explorer-Fenster dargestellt wird - 
scheuen Sie sich nicht, Ihren Namen in die TextBox einzugeben und den Submit-Button zu bet&auml;tigen:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_15.png" width="573" height="208" alt="" border="0">

<p>
Somit funktioniert der erste Teil unserer L&ouml;sung bereits - mit nur einer von Hand getippten Zeile C#-Code!
</p>
<p>
Was jedoch noch fehlt, ist die gew&uuml;nschte Validierung der Eingabe. Das k&ouml;nnen Sie auch leicht verifizieren, indem Sie einfach 
nichts in die TextBox eingeben und den Submit-Button bet&auml;tigen. Die Ausgabe zeigt nur "Hallo !" und von einer Fehlermeldung 
hinsichtlich der fehlenden Eingabe ist weit und breit nichts zu sehen.
</p>
<p>
Der Grund hierf&uuml;r ist, da&szlig; der RequiredFieldValidator zwar bereits funktioniert, wir ihm aber noch keine Fehlermeldung zugewiesen 
haben, die er ausgeben soll, wenn keine Eingabe in unserer TextBox erfolgte. Um dem RequiredFieldValidator die Fehlermeldung 
zuzuweisen,  wechseln Sie bitte wieder zur Designer-Ansicht der HelloWorld.aspx und rufen die Eigenschaften des 
RequiredFieldValidators auf.
</p>
<p>
Dort finden Sie die Eigenschaft "ErrorMessage", welche Sie nun wie folgt definieren:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_16.png" width="307" height="457" alt="" border="0">

<p>
Danach speichern Sie das Projekt erneut und lassen es nochmals Erstellen (Men&uuml; "Erstellen" - "HelloWorld erstellen"). Nun wechseln 
Sie in die noch ge&ouml;ffnete Browserdarstellung der HelloWorld.aspx und lassen die Seite neu laden. Wenn Sie nun auf den 
Submit-Button klicken, ohne etwas in die TextBox zu tippen, reagiert der Validator prompt mit der von uns zugewiesenen 
Fehlermeldung:
</p>

<IMG SRC="/artikel/Bilder/200310/20031010_17.png" width="436" height="207" alt="" border="0">

<p>
Damit erledigt unsere Applikation jetzt alle zu Beginn gestellten Anforderungen - unsere erste ASP.NET-Applikation mit 
Visual Studio.NET ist fertig!
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Wie Sie heute sehen konnten, erleichtert VisualStudio.NET die Entwicklungsarbeit mit dem .NET-Framework ungemein - es soll aber 
auch nicht verschwiegen werden, da&szlig; diese Erleichterung durchaus Ihren Preis hat, der sich nur bezahlt macht, wenn man sich 
intensiv mit der Entwicklung von .NET-Applikationen befasst.
</p>

<p><strong>This printed page brought to you by <a href="http://www.alphasierrapapa.com/">AlphaSierraPapa</a></strong></p><h2>Verwandte Artikel</h2>
<p>
<a href="../artikel/20000713.htm">A Brief History of C#</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000713.htm</span><br>
<a href="../artikel/20001114.htm">ASP.NET User Controls im Einsatz</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001114.htm</span><br>
<a href="../artikel/20000911.htm">Einf&uuml;hrung in ASP.NET Validation Controls (Teil 1)</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000911.htm</span><br>
<a href="../artikel/20000913.htm">Einf&uuml;hrung in ASP.NET Validation Controls (Teil 2)</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000913.htm</span><br>
<a href="../artikel/20000808.htm">Einf&uuml;hrung in ASP.NET Web Forms</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000808.htm</span><br>
<a href="../artikel/20001012.htm">Einf&uuml;hrung: C#-Klassen in ASP.NET</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20001012.htm</span><br>
<a href="../artikel/20000918.htm">Emails mit ASP.NET versenden</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20000918.htm</span><br>
<a href="../artikel/20020705.htm">Formularbasierte Authentifizierung in f&uuml;nf Minuten</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20020705.htm</span><br>
<a href="../artikel/20011008.htm">Output Caching 101</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20011008.htm</span><br>
<a href="../artikel/20011009.htm">Page Fragment Caching 101</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20011009.htm</span><br>
<a href="../artikel/20040303.htm">Vergleich von DataGrid, DataList und Repeater-Control - was verwende ich wann?</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20040303.htm</span><br>
<a href="../artikel/20010802.htm">Web.Config 101</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20010802.htm</span><br>
<a href="../artikel/20041025.htm">XHTML Strict 1.0 mit ASP.NET 1.1</a><br>
<SPAN class="content">http:/www.aspheute.com/artikel/20041025.htm</span><br>

</p>

&nbsp;<P>
<center>

</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
