<HTML>
<HEAD>
<TITLE>C#</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="31 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="">
<meta http-equiv="Keywords" name="Keywords" content="">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="Csharp.htm">C# (28)</a><br>
<a href="Datenbank.htm">Datenbank (44)</a><br>
<a href="Dokumentation.htm">Dokumentation (4)</a><br>
<a href="IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="Komponenten.htm">Komponenten (29)</a><br>
<a href="Optimierung.htm">Optimierung (10)</a><br>
<a href="Server.htm">Server (21)</a><br>
<a href="Sicherheit.htm">Sicherheit (34)</a><br>
<a href="Tee%20Off.htm">Tee Off (6)</a><br>
<a href="VBdotNET.htm">VB.NET (6)</a><br>
<a href="WAP.htm">WAP (8)</a><br>
<a href="Web%20Services.htm">Web Services (11)</a><br>
<a href="XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>


<H1>Kategorie: C#</H1>
<table cellspacing=0 border=0 cellpadding=0><tr valign="top"><td width="80" class="spacer">&nbsp;</td><td class="spacer">&nbsp;</td><td background="../images/layout/aspheuteside.gif" class="spacer"><img src="../images/layout/blind.gif" width=20 height=1></td></tr>
<tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.9.2003</td><td class="news"><a href="../artikel/20030910.htm" class="newsitem">Plagiat oder nicht?</a><br />
Ob das Aussehen einer Website, die Funktionalit&auml;t eines Programmes, &uuml;berall steht Sourcecode dahinter - von HTML bis C#. Stellen Sie sich vor, es kommt Ihnen zuf&auml;llig ein Sourcecode unter, der Sie ganz stark an Ihren eigenen aus einem Projekt erinnert... so ist es uns, dem SharpDevelop Team, passiert. Die Frage die sich nun stellt, wie weist man nach da&szlig; geklaut wurde?<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.9.2002</td><td class="news"><a href="../artikel/20020906.htm" class="newsitem">On-the-fly Erstellung von vCard's</a><br />
Die virtuellen Businesskarten - die vCards - werden vielen von uns schon einmal untergekommen sein. Entweder als Attachment bei einer Email, oder als Download von einer Website. Einigen wird es dabei schon in den Sinn gekommen sein,
f&uuml;r das eigene Communityportal solche vCards dynamisch f&uuml;r die Mitglieder zu generieren. Dieser Artikel zeigt, wie's geht.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.5.2002</td><td class="news"><a href="../artikel/20020507.htm" class="newsitem">Deutsche Personalausweisnummern verifizieren</a><br />
Im Internet findet man immer wieder interessante Ans&auml;tze, die Identit&auml;t bzw. das Alter der Surfer zu bestimmen. Einer davon ist die Personalausweisnummer vom Surfer eintippen zu lassen, da diese neben allgemeinen Angaben auch das Alter beinhaltet. Mit Hilfe von in der Personalausweisnummer eingebauten Pr&uuml;fziffern kann man kontrollieren, ob die Eingaben korrekt sind.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.4.2002</td><td class="news"><a href="../artikel/20020417.htm" class="newsitem">Sortieren mit dem IComparer Interface</a><br />
In vielen F&auml;llen sind die Elemente in einer Collection nicht so angeordnet, wie man sie gerne h&auml;tte. Oft m&ouml;chte man auch zur Laufzeit eine Umsortierung erzwingen, zB die Elemente aufsteigend statt absteigend sortieren. Anhand der <i>Sort</i> Methode der <i>ArrayList</i> Klasse zeige ich, da&szlig; dies nicht weiter schwierig ist.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.4.2002</td><td class="news"><a href="../artikel/20020409.htm" class="newsitem">Dateien umbenennen</a><br />
Auf den ersten Blick denkt man sich, da&szlig; das so schwer nicht sein kann. Allerdings wenn man dann nicht wie erwartet eine <i>File.Rename</i> Methode findet, wird die Suche nach der L&ouml;sung f&uuml;r Nicht-Alte-Hasen der Windows Programmierung mehr oder weniger interessant.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;18.3.2002</td><td class="news"><a href="../artikel/20020318.htm" class="newsitem">Das using Schl&uuml;sselwort</a><br />
Wer mit C# arbeitet, dem ist das using Schl&uuml;sselwort sp&auml;testens seit dem obligatorischen Hello World Programm bekannt - als Statement zum Import von Namespaces. Da&szlig; using noch einiges mehr zu bieten hat, zeigt dieser 
Artikel, indem er die using Directive und das using Statement n&auml;her beleuchtet.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.2.2002</td><td class="news"><a href="../artikel/20020226.htm" class="newsitem">Ein Touch-Utility in C#</a><br />
Das Touch Utility war immer eines meiner Lieblingstools, weil man mit ihm das Datum auf einer Anzahl von Dateien vereinheitlichen kann - zB in einem Downloadarchiv oder bevor man eine Applikation ausliefert. Heute werden wir ein einfaches Touch Utility in C# schreiben, das jeder leicht an seine Pr&auml;ferenzen anpassen kann.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.2.2002</td><td class="news"><a href="../artikel/20020207.htm" class="newsitem">Unions in C#</a><br />
Wer aus der C/C++ Welt kommt, kennt die Unions und ihr Funktionsprinzip bereits: diese erlauben es, an einer Speicheradresse unterschiedliche Datentypen zu speichern. Mit erstaunlich geringem Aufwand lassen sich Unions auch in C# nachbilden, und zwar mit Hilfe der Attribute <i>StructLayout</i> und <i>FieldOffset</i>.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.1.2002</td><td class="news"><a href="../artikel/20020125.htm" class="newsitem">Variable Parameterlisten in Funktionen</a><br />
In den meisten aller F&auml;lle wei&szlig; man im vorhinein, wieviele Parameter an eine Funktion &uuml;bergeben werden sollen. Was aber, wenn bestimmte Parameter optional sein sollen, oder die Funktion ihre Arbeit an 1 bis n gleichartigen Parametern durchf&uuml;hren soll? In diesem Fall stellt uns C# das <i>params</i> Schl&uuml;sselwort zur Verf&uuml;gung.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.1.2002</td><td class="news"><a href="../artikel/20020124.htm" class="newsitem">Arrays mit Index und Schl&uuml;ssel</a><br />
Arrays sind ein tolle Erfindung - man greift per Index bequem auf die Elemente zu. Will man nicht per Index auf ein Element zugreifen sondern per Schl&uuml;ssel, dann verwendet man die Hashtable Klasse. Doch was wenn man sowohl per Index als auch Schl&uuml;ssel auf Elemente zugreifen will? Auch dann wird man von .NET
nicht alleine gelassen, denn es gibt die <i>SortedList</i> Klasse, eine Mischung aus Array und Hashtable.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;13.9.2001</td><td class="news"><a href="../artikel/20010913.htm" class="newsitem">Wetterbericht per SMS versenden</a><br />
Den gescrapten Content einer Website kann man vielseitig weiterverwerten. Wenn es sich bei der Website  um eine Wetterprognoseseite handelt kann man z.B, abgelegt in einer Datenbank, eine statistische Auswertung erstellen. Oder wie in diesem Artikel gezeigt, per SMS (Short Message Service) Nachricht die Informationen zum Handy eines Segelkollegen schicken. Diese Aufgabe wird mittels C# und dem .NET Framework gel&ouml;st.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;12.9.2001</td><td class="news"><a href="../artikel/20010912.htm" class="newsitem">SMS versenden in .NET</a><br />
Ein &auml;u&szlig;erst beliebtes Handyfeature ist heutzutage die SMS, oder in der Langform das Short Message System. Es gibt viele Websites am Netz, von wo aus man seine SMS gratis abschicken kann - meist Werbung mitinkludiert. Heute m&ouml;chte ich vorstellen, wie man SMS selbst versenden kann, und zwar mit Hilfe verschiedener Framework Klassen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;11.9.2001</td><td class="news"><a href="../artikel/20010911.htm" class="newsitem">Webseiten automatisiert scrapen, Teil 2</a><br />
Im letzten Artikel haben wir die Webseite "as is" in die Datenbank geschrieben, heute parsen wir den Content einer Wetterberichtsseite auf, d.h. wir befreien den gescrapten Content der Webseite von den Html Tags und schreiben die Informationen sortiert nach Themengebieten wieder in eine SQL Datenbank. Die in C# geschriebene Konsolenanwendung l&auml;&szlig;t sich dann wiederum als Scheduled Task automatisch nach einer vordefinierten Zeit ausf&uuml;hren.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.9.2001</td><td class="news"><a href="../artikel/20010910.htm" class="newsitem">Webseiten automatisiert scrapen</a><br />
Viele Webseiten bieten einen aktuellen Wetterbericht an. Um diesen f&uuml;r eigene Zwecke verwerten zu k&ouml;nnen, mu&szlig; man die Webseite scrapen, aufparsen, und dann in das eigene Layout einbinden (rechtliche Probleme einmal dahingestellt). Allerdings ist es nicht klug, auf jeder eigenen Seite f&uuml;r jeden User neu zu scrapen - es reicht, dies automatisiert alle x Minuten oder Stunden zu machen, und den gescrapten Content in eine Datenbank zu schreiben.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.7.2001</td><td class="news"><a href="../artikel/20010702.htm" class="newsitem">Asynchrone Programmierung mit Message Queues</a><br />
Ein Problem sowohl f&uuml;r Web Sites als auch "normale" Anwendungen sind externe "Komponenten", die entweder &uuml;ber eine langsame Verbindung angesprochen werden m&uuml;ssen, oder (sehr) lange zur Abarbeitung brauchen. Ist man nicht gezwungen auf das Resultat zu warten, kann man die Performance seiner Applikation enorm steigern: mit Message Queueing.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.6.2001</td><td class="news"><a href="../artikel/20010619.htm" class="newsitem">Transaktionen in C# Business Tier Komponenten</a><br />
Im Laufe der Zeit hat man sich ja sozusagen die COM+ Applikationen (aka MTS Packages) angew&ouml;hnt, und zwar einerseits als Object Broker, und andererseits als Provider von Transaktionen &uuml;ber Komponentengrenzen
hinweg. Heute werde ich zeigen, da&szlig; das erworbene Wissen auch in .NET verwendbar ist - und die Anwendung sogar deutlich leichter geworden ist!<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;15.2.2001</td><td class="news"><a href="../artikel/20010215.htm" class="newsitem">Enums lesbar machen</a><br />
Der heutige Artikel widmet sich einem Thema aus C#, das gerade bei der Entwicklung gr&ouml;&szlig;erer Projekte interessant werden k&ouml;nnte - dem Konvertieren von Enum Werten in "lesbare" Strings. Da das Ganze jetzt sehr abstrakt klingt, hier ein Beispiel..<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;8.2.2001</td><td class="news"><a href="../artikel/20010208.htm" class="newsitem">Web Projekte mit SharpDevelop erstellen</a><br />
Dieser Artikel zeigt Ihnen, da&szlig; kleinere Web Projekte nicht nur mit Jumbo Programmen, die PC-Resourcen wie ein V8 Motor Benzin verbrauchen, zu bew&auml;ltigen sind. Ich habe f&uuml;r die L&ouml;sung der heutigen Aufgabe - eine C# Komponente und die dazugeh&ouml;rige ASP.NET Seite - das Open-Source Tool SharpDevelop verwendet.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.1.2001</td><td class="news"><a href="../artikel/20010123.htm" class="newsitem">Eine Eurokonvertierungskomponente in C# erstellen</a><br />
Die Einf&uuml;hrung des "angreifbaren" Eurogeldes r&uuml;ckt immer n&auml;her, und die doppelte Preisauszeichnung ist mittlerweile auch schon &uuml;berall zu sehen. Letztes Jahr haben wir uns bereits mit diesem Thema besch&auml;ftigt, allerdings haben wir damals eine bereits existierende Komponente verwendet. Heute werden wir diese Komponente mit C# nachprogrammieren - und zwar weil eine native .NET Komponente viel performanter ist als wenn man die existierende COM Komponente mit Interop in ASP.NET einbindet.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.10.2000</td><td class="news"><a href="../artikel/20001019.htm" class="newsitem">Sichere Konvertierungen von Referenztypen</a><br />
Ein Thema, das sich immer wieder als problematisch f&uuml;r Einsteiger herausstellt, ist das Konvertieren ("Casten") von Referenztypen (aka Objekten). Unter C++ konnte man damit sehr viel Unheil anstellen, was einem zum Gl&uuml;ck mit C# nicht passieren kann. Trotz oder gerade wegen der Typsicherheit der Sprache sollte man sich mit den verschiedenen Techniken vertraut machen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.8.2000</td><td class="news"><a href="../artikel/20000803.htm" class="newsitem">Die String Klasse in C#</a><br />
Diesmal besch&auml;ftigen wir uns mit dem Funktionsumfang der String Klasse in C#. Ausgehend von einfachen Beispielen werde ich M&ouml;glichkeiten wie das Splitten von Strings, Finden von Zeichen und Zeichenketten, das Trimmen von Strings und vieles mehr besprechen.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;31.7.2000</td><td class="news"><a href="../artikel/20000731.htm" class="newsitem">Verwendung von Arrays in C#</a><br />
Heute m&ouml;chte ich Ihnen die Verwendung von Arrays (engl. f&uuml;r Feld) in C# pr&auml;sentieren. Dabei pr&auml;sentiere ich Arrays deren Gr&ouml;&szlig;e zur Compilezeit bestimmt ist, als auch solche, die zur Laufzeit mit variabler Gr&ouml;&szlig;e erzeugt werden k&ouml;nnen.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.7.2000</td><td class="news"><a href="../artikel/20000726.htm" class="newsitem">Datentypen in C#</a><br />
In diesem Artikel m&ouml;chte ich Ihnen die Datentypen von C# (sprich "C sharp") erkl&auml;ren. Dies ist zugegebenerma&szlig;en eines der trocken Kapitel aus der C#-Programmierung...<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.7.2000</td><td class="news"><a href="../artikel/20000724.htm" class="newsitem">Exception Handling in C#</a><br />
Ich nehme an, da&szlig; jeder VBScript Programmierer schon mindestens einmal die sehr eingeschr&auml;nkten M&ouml;glichkeiten der Fehlerbehandlung in das Land des Pfeffers gewunschen hat - ein einfaches On Error Resume Next ist nun wirklich nicht gerade das, was man unter zeitgem&auml;&szlig;er Fehlerbehandlung
verstehen sollte.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;20.7.2000</td><td class="news"><a href="../artikel/20000720.htm" class="newsitem">Das foreach Statement</a><br />
F&uuml;r VBScript Programmierer ist das foreach Statement ein alter Bekannter, unter einen anderen Namen: For...Each. In diesem Artikel betrachten wir die Unterschiede (VBScript vs C#), vor allem bei der Abarbeitung der ServerVariables und QueryString Collections.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.7.2000</td><td class="news"><a href="../artikel/20000717.htm" class="newsitem">Schleifenbefehle in C#</a><br />
Im heutigen Artikel befassen wir uns mit den Schleifenbefehlen von C#: for, while und do. Wie im letzten C# Artikel  werde ich die Unterschiede zu VBScript herausarbeiten.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;14.7.2000</td><td class="news"><a href="../artikel/20000714.htm" class="newsitem">Kontrollstatements in C#</a><br />
In diesem Artikel m&ouml;chte ich die beiden C# Kontrollstatements if und switch vorstellen, und zwar mit besonderem Fokus darauf, was man als VBScript Programmierer beachten mu&szlig;, um nicht in Fallen zu tappen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;13.7.2000</td><td class="news"><a href="../artikel/20000713.htm" class="newsitem">A Brief History of C#</a><br />
Ein wichtiger Bestandteil des Microsoft .NET Frameworks ist die Programmiersprache C# (sprich "C Sharp"). Diese Programmiersprache wurde von Grund auf f&uuml;r die Common Language Runtime designed, und kommt von der Windows Anwendungsentwicklung bis hin zur ASP.NET Programmierung zum Einsatz.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr></TABLE>

&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="C#"><input type="hidden" name="pageurl" value="http://www.aspheute.com/kategorien/Csharp.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
