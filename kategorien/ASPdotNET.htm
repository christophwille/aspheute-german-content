<HTML>
<HEAD>
<TITLE>ASP.NET</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="31 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="">
<meta http-equiv="Keywords" name="Keywords" content="">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="Csharp.htm">C# (28)</a><br>
<a href="Datenbank.htm">Datenbank (44)</a><br>
<a href="Dokumentation.htm">Dokumentation (4)</a><br>
<a href="IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="Komponenten.htm">Komponenten (29)</a><br>
<a href="Optimierung.htm">Optimierung (10)</a><br>
<a href="Server.htm">Server (21)</a><br>
<a href="Sicherheit.htm">Sicherheit (34)</a><br>
<a href="Tee%20Off.htm">Tee Off (6)</a><br>
<a href="VBdotNET.htm">VB.NET (6)</a><br>
<a href="WAP.htm">WAP (8)</a><br>
<a href="Web%20Services.htm">Web Services (11)</a><br>
<a href="XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>


<H1>Kategorie: ASP.NET</H1>
<p>
Artikel rund um ASP.NET Web Forms - von Controls, User Controls, Validation Controls, Tips &amp; Tricks und vielem mehr.
</p><table cellspacing=0 border=0 cellpadding=0><tr valign="top"><td width="80" class="spacer">&nbsp;</td><td class="spacer">&nbsp;</td><td background="../images/layout/aspheuteside.gif" class="spacer"><img src="../images/layout/blind.gif" width=20 height=1></td></tr>
<tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.10.2004</td><td class="news"><a href="../artikel/20041025.htm" class="newsitem">XHTML Strict 1.0 mit ASP.NET 1.1</a><br />
Da das Thema XHTML (endlich) immer popul&auml;rer wird, habe ich die Website 
<a href="http://www.waltergmbh.de" target="_blank">http://www.waltergmbh.de</a> nach ASP.NET 1.1 und XHTML 1.0 Strict portiert. Wie die Umsetzung von XHTML 1.0 Strict mit ASP.NET 1.1 und Visual Studio.NET 2003 funktioniert, werde ich in diesem Artikel beschreiben.<br><SPAN class="content">Autor: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.5.2004</td><td class="news"><a href="../artikel/20040519.htm" class="newsitem">Entwicklung eines Event-Managers mit ASP.NET 1.1</a><br />
Die Zahl der Informations- und Fortbildungsveranstaltungen - inbesondere im IT-Sektor - nimmt zu. Die Besucher dieser Veranstaltungen erwarten heutzutage, daß Sie sich über eine Website komfortabel anmelden können und auch weitergehende Informationen zum Event erhalten. Dieser Artikel gibt einen Überblick über die Architektur des EventManagers, der für die vom 04. - 05. Juni 2004 zum ersten Mal stattfindende .NET Community Conference mit ASP.NET 1.1 und C# entwickelt wurde.<br><SPAN class="content">Autor: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.3.2004</td><td class="news"><a href="../artikel/20040303.htm" class="newsitem">Vergleich von DataGrid, DataList und Repeater-Control - was verwende ich wann?</a><br />
Wie bereits im Artikel Das ASP.NET DataGrid selbst erweitern beschrieben, handelt es sich beim DataGrid um ein sehr flexibles Webcontrol zur tabellarischen Darstellung von Daten. Doch das DataGrid ist nicht das einzige Control, das das .NET-Framework zur Darstellung von Daten bereithält. Zwei weitere Vertreter dieser Gattung stellen das DataList- und das Repeater- Control dar. Die Unterschiede - aber auch Gemeinsamkeiten - zwischen diesen drei Controltypen und die jeweils sinnvollen Einsatzbereiche zeigt dieser Artikel auf.<br><SPAN class="content">Autor: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.10.2003</td><td class="news"><a href="../artikel/20031010.htm" class="newsitem">Einstieg in Visual Studio.NET - die erste Webanwendung mit Visual C#</a><br />
F&uuml;r die Entwicklung von ASP.NET-Webanwendungen steht inzwischen eine Reihe von hochwertigen Entwicklungsumgebungen zur Verf&uuml;gung. 
Die wohl bekannteste und von Microsoft forcierte ist sicherlich Microsoft Visual Studio.NET. Dem Einstieg in ebendiese IDE (=Integrated Development Environment) sowie die Erstellung einer einfachen ASP.NET-Webapplikation widmet sich dieser Artikel.<br><SPAN class="content">Autor: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.9.2003</td><td class="news"><a href="../artikel/20030909.htm" class="newsitem">Das ASP.NET DataGrid selbst erweitern</a><br />
Das als Standard im .NET-Framework enthaltene DataGrid-Steuerelement ist bereits ein m&auml;chtiges Objekt zur Darstellung und Bearbeitung von Daten in tabellarischer Form. M&ouml;chte man das DataGrid allerdings in ein fixes Design implementieren, st&ouml;rt unter Umst&auml;nden das etwas "sprunghafte Verhalten" des DataGrids, d.h. die Zeilenzahl und damit die H&ouml;he des DataGrids variiert mit der Zahl der anzuzeigenden Datens&auml;tze.<br><SPAN class="content">Autor: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.11.2002</td><td class="news"><a href="../artikel/20021105.htm" class="newsitem">Online File Management System mit ASP.NET und C# - Teil 2</a><br />
Es gibt eine komfortable M&ouml;glichkeit, seine Daten, Dateien und Verzeichnisse online zu verwalten: ein Online File Management System (OFMS). Im ersten Teil der Artikelserie haben wir uns damit besch&auml;ftigt, Dateien und Verzeichnisse online browsebar zu machen. Heute implementieren wir die Funktionen f&uuml;r Upload und Download, sowie das Editieren von Textdateien.<br><SPAN class="content">Autor: <a href="../autoren/rudolfball.htm">Rudolf Ball</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;31.10.2002</td><td class="news"><a href="../artikel/20021031.htm" class="newsitem">Online File Management System mit ASP.NET und C# - Teil 1</a><br />
Websites werden im Laufe der Zeit ver&auml;ndert, und wenn man nicht gerade ein CMS (Content Management System) einsetzt, dann bedeutet das in den meisten F&auml;llen da&szlig; &Auml;nderungen durch Dateiupload mit FTP auf die Website kommen. Es gibt aber noch eine andere, komfortablere M&ouml;glichkeit, seine Daten, Dateien und Verzeichnisse online zu verwalten: ein Online File Management 
System (im weiteren nur mehr OFMS).<br><SPAN class="content">Autor: <a href="../autoren/rudolfball.htm">Rudolf Ball</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.8.2002</td><td class="news"><a href="../artikel/20020801.htm" class="newsitem">MS IE WebControls 101</a><br />
Die MS Internet Explorer WebControls sind eine kleine Erg&auml;nzung der bestehenden "Feature-rich" ASP.NET Server Controls. Separat zum Download angeboten, ersparen diese Server Controls einiges an Schreibarbeit um komplexe ASP.NET Seiten erstellen zu k&ouml;nnen. Dieser Artikel geleitet Sie von der Installation bis zu den wichtigsten Details dieser Server Controls.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.7.2002</td><td class="news"><a href="../artikel/20020705.htm" class="newsitem">Formularbasierte Authentifizierung in f&uuml;nf Minuten</a><br />
In Anlehnung an diverse Buchserien werde ich Ihnen heute zeigen, wie schnell man mit ASP.NET eine Website f&uuml;r registrierte User erstellen kann. Da mir nach den f&uuml;nf Minuten noch Zeit &uuml;brig bleibt, gebe ich Ihnen noch eine fix und fertige L&ouml;sung f&uuml;r ein technisch sauberes und vor allem sicheres Loginformular mit auf den Weg.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;18.6.2002</td><td class="news"><a href="../artikel/20020618.htm" class="newsitem">Das ASP.NET Web Matrix Projekt</a><br />
Nach einer l&auml;ngeren Testphase (und nach einigen Ger&uuml;chten) ist es nun so weit - die ASP.NET Web Matrix ist endlich da! Hinter dem Namen ASP.NET Web Matrix verbirgt sich ein freies, leicht zu erlernendes Entwicklungstool f&uuml;r ASP.NET Applikationen, das selbst mit Hilfe von .NET, C# und Windows Forms implementiert wurde. Web Forms und Web Services bequem entwickeln ohne Visual Studio .NET kaufen zu m&uuml;ssen ist damit Realit&auml;t.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.3.2002</td><td class="news"><a href="../artikel/20020321.htm" class="newsitem">Flash Movies einbetten einfach gemacht</a><br />
Wer hat das nicht schon selbst erlebt: man bettet ein Flash Movie in eine Webseite ein, und macht sp&auml;ter eine kleine &Auml;nderung und vergisst, die &Auml;nderung sowohl im OBJECT als auch im EMBED Tag einzutragen. W&auml;re es nicht bequemer, die Eigenschaften f&uuml;r ein Flash Movie nur einmal zu setzen, und den clientseitigen Code automatisch erzeugen zu lassen? Die L&ouml;sung dazu ist eine serverseitige WebControl.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.3.2002</td><td class="news"><a href="../artikel/20020304.htm" class="newsitem">Unerw&uuml;nschte Referer sperren</a><br />
Vielen von uns ist es nur recht, wenn jemand zu unseren Sites beziehungsweise zu den Sites unserer Kunden linkt - es bringt ja Traffic. Andererseits gibt es aber Leute, die glauben f&uuml;r einen Link zu ihrer Site Geld kassieren zu k&ouml;nnen - mit dem Argument, da&szlig; man seine Site durch den Link zu ihrer
Site ja aufwertet. Nur wenn der Inhalt ihrer Site ach so wertvoll ist, dann ist es in ihrer Verantwortung den Inhalt vor unerw&uuml;nschten Referern zu sperren - und nicht nachtr&auml;glich von jederman zu kassieren (versuchen).<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.2.2002</td><td class="news"><a href="../artikel/20020225.htm" class="newsitem">Thumbnailgenerierung in .NET</a><br />
Produktkataloge und Online-Bildergalerien haben (meist) eines gemeinsam: bevor man zum eigentlichen Detailbild gelangt, wird einem zuerst ein Vorschaubild, ein Thumbnail, pr&auml;sentiert. Solange die Bilder offline generiert werden, kann man auch die Thumbnails offline mitgenerieren - was aber, wenn die Bilder am Server gewartet/erstellt werden, und man die Thumbnails dynamisch on the fly generieren soll?<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;22.11.2001</td><td class="news"><a href="../artikel/20011122.htm" class="newsitem">Einstellungssache - Applikationsdaten in web.config</a><br />
In der XML-basierten web.config Datei lassen sich auf einfache und strukturierte Weise Informationen f&uuml;r Web Applikationen oder Web Services speichern. Dieser Artikel beschreibt zwei M&ouml;glichkeiten, wie man f&uuml;r einen Web Service diverse Einstellungen speichern kann, und auch wie man  das Standardset der ASP.NET Configuration Settings mit eigenen Tags erweitern kann.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.11.2001</td><td class="news"><a href="../artikel/20011121.htm" class="newsitem">Active Directory Zugriff per .NET</a><br />
Active Directory ist das zentrale Element einer Windows 2000 Domain Infrastruktur. Es gibt viele Zugriffsmethoden (ADSI oder LDAP, um zwei sehr bekannte zu w&auml;hlen), die mehr oder minder komplex sind. Mit dem .NET Framework ist Microsoft angetreten, es leichter zu machen. Heute werden wir uns das anhand des Zugriffs als auch der Suche nach Elementen ansehen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.10.2001</td><td class="news"><a href="../artikel/20011009.htm" class="newsitem">Page Fragment Caching 101</a><br />
Eine dynamische Seite zu cachen ist bei vielen gleichzeitigen Userzugriffen ganz praktisch und spart vor allem Web Server Resourcen. Bei komplexeren dynamischen Seiten kann es aber vorkommen, da&szlig; der dynamische Content unterschiedliche "Verfallsdaten" haben kann. Mit ASP.NET haben Sie nun die M&ouml;glichkeit einzelne Regionen einer Seite mit Hilfe von ASP.NET User Controls die Content Expiration individuell an den dynamisch generierten Content anzupassen.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;8.10.2001</td><td class="news"><a href="../artikel/20011008.htm" class="newsitem">Output Caching 101</a><br />
An sich ist das Cachen von Web Seiten ja nichts Neues. Caching ist dann sinnvoll, wenn Daten mit (zeit)aufwendigen Tasks generiert werden m&uuml;ssen, und eigentlich f&uuml;r mehrere User &uuml;ber einen l&auml;ngeren Zeitraum unver&auml;ndert bleiben. Mit ASP.NET haben Sie nun neue M&ouml;glichkeiten Caching gezielt und einfach in Ihren Web Seiten zu implementieren.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.8.2001</td><td class="news"><a href="../artikel/20010802.htm" class="newsitem">Web.Config 101</a><br />
Die web.config Datei ist eine auf XML basierende, hierarchisch aufgebaute Textdatei die eine Vielzahl von Einstellungsm&ouml;glichkeiten f&uuml;r Ihre ASP.NET Applikationen erlaubt. Angefangen von Applikationseinstellungen, &uuml;ber DSN bis hin zu Optionen f&uuml;r Web Services. Der hierachische Aufbau erlaubt eine &uuml;bersichtliche Gliederung und somit wird die Anpassung der web.config zum Kinderspiel. Da&szlig; dies nicht nur ein Marketingschlagwort ist, soll dieser 
Einf&uuml;hrungsartikel zeigen.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;20.2.2001</td><td class="news"><a href="../artikel/20010220.htm" class="newsitem">Applikationen aus ASP.NET ausf&uuml;hren</a><br />
Irgendwo gibt es immer eine kleine Kommandozeilenapplikation, die etwas kann, was keine Komponente kann. Und dann taucht die Frage auf, wie man dieses Programm aus ASP.NET heraus starten, und den Output dann weiterverwenden kann.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;16.2.2001</td><td class="news"><a href="../artikel/20010216.htm" class="newsitem">XML NodeType Enumeration</a><br />
Der heutige Artikel befa&szlig;t sich mit der XMLNodeType Enumeration. Sie erfahren, was sich hinter diesem Namen verbirgt, und wie man programmatisch den Typ eines XML Nodes mittels ASP.NET auslesen kann.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.11.2000</td><td class="news"><a href="../artikel/20001130.htm" class="newsitem">Bildinformationen selbst ermitteln</a><br />
Ein h&auml;ufiges Problem beim Upload von Bilddateien ist, da&szlig; die Gr&ouml;&szlig;e (Breite, H&ouml;he) nicht bekannt ist, und man sie selbst ermitteln mu&szlig;. Unter ASP kann man sich mit der Gratiskomponente
ImageSize von ServerObjects behelfen, die allerdings auf wenige (wichtige) Formate beschr&auml;nkt ist.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;14.11.2000</td><td class="news"><a href="../artikel/20001114.htm" class="newsitem">ASP.NET User Controls im Einsatz</a><br />
User Controls (vormals Pagelets) sind ja ganz praktisch - man schreibt sich kleine Code Snippets die man immer wieder in seinen ASP.NET Web Projekten ben&ouml;tigt. Wenn sie dann zum Einsatz kommen sollen - einfach in dem ASP.NET File registrieren und aufrufen. Da&szlig; man aber auch mehr als ein simples Email-Standard-Formular mit den ASP.NET User Controls erstellen kann, soll dieser Artikel zeigen.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;12.10.2000</td><td class="news"><a href="../artikel/20001012.htm" class="newsitem">Einf&uuml;hrung: C#-Klassen in ASP.NET</a><br />
Will man Interaktionen mit dem Webserver, wie Formulare auswerten oder Datenbank-Records auslesen, in eine Webseite integrieren, so gen&uuml;gt reines HTML nicht mehr. F&uuml;r einen ASP Programmierer ist dies nichts neues,
denn es gibt schon seit geraumer Zeit die M&ouml;glichkeite server-side Skripts mit ASP zu schreiben. Die f&uuml;r ASP am h&auml;ufigsten verwendeten Sprachen sind VBScript und JScript. Mit dem Erscheinen der .NET Platform und ASP.NET vollzieht sich allerdings ein Quantensprung in der Programmierbarkeit von Webseiten. In ASP.NET k&ouml;nnen Sie komplexe Anwendungen einfach implementieren,
und mit C# (C Sharp) haben sie eine vollst&auml;ndige, objektorientierte Programmiersprache zur Verf&uuml;gung.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.10.2000</td><td class="news"><a href="../artikel/20001009.htm" class="newsitem">Das Versenden von Emails selbst programmieren</a><br />
Emailkomponenten gibt es (beinahe) soviele wie Sand am Meer, und viele davon sind sogar gratis. Verwendet hat sie bestimmt schon (beinahe) jeder, sei es jetzt AspMail, CDONTS, SA-SmtpMail oder eine der vielen anderen. Etwas, das aber bestimmt (beinahe) keiner bis jetzt gemacht hat, ist sich eine Emailkomponente selbst zu programmieren.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.10.2000</td><td class="news"><a href="../artikel/20001006.htm" class="newsitem">Tracing in ASP.NET</a><br />
Wer hat nicht schon einmal zu Debuggingzwecken das Response.Write Statement verwendet, um sich SQL Strings, Servervariablen, Variablenwerte und Rechenergebnisse auszugeben? Meistens hat man sich dadurch das Layout (kurzfristig) zerst&ouml;rt, und man mu&szlig;te die Statements sp&auml;ter wieder l&ouml;schen oder auskommentieren. Mit der Tracing Funktionalit&auml;t von ASP.NET kann man Debugmeldungen ausgeben oder die Zeit eines Scripts timen - und das, ohne zwischen Test- und Releaseversion einer ASP.NET Seite Unterschiede machen zu m&uuml;ssen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.9.2000</td><td class="news"><a href="../artikel/20000929.htm" class="newsitem">Dateien lesen in ASP.NET</a><br />
Im Artikel "Directory Browsing a la .NET" haben wir uns bereits das erste Mal mit dem System.IO Namespace vertraut gemacht. Heute werden wir uns mit den Inhalten der Dateien besch&auml;ftigen, und zwar wie man Dateien ausliest. Und das sowohl f&uuml;r Textdateien als auch Bin&auml;rdateien.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.9.2000</td><td class="news"><a href="../artikel/20000926.htm" class="newsitem">Collections einmal anders: Stacks und Queues</a><br />
Unter ASP wurden wir mit Collections ziemlich kurz gehalten - es gab nur das Scripting.Dictionary. Die Zeiten haben sich allerdings ge&auml;ndert, und ASP.NET bietet uns Implementationen f&uuml;r first in, first out Collections als auch first in, last out Collections: Queues (FIFO) und Stacks.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.9.2000</td><td class="news"><a href="../artikel/20000925.htm" class="newsitem">Services &uuml;ber das Web managen</a><br />
Im heutigen Artikel besch&auml;ftigen wir uns mit den Grundlagen des Arbeitens mit Windows Services - etwas, das definitiv wert ist, administriert zu werden. Dazu verwenden wir wieder einmal ASP.NET und das .NET Framework SDK. Apropos: ausnahmsweise g&auml;be es auch f&uuml;r ASP einen Weg, um an einer
eigenen Komponente vorbeizukommen: WMI, Windows Management Instrumentation.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;22.9.2000</td><td class="news"><a href="../artikel/20000922.htm" class="newsitem">Eventbehandlung bei ASP.NET WebForms</a><br />
In diesem Artikel erlernen Sie das Grundr&uuml;stzeug zur Eventbehandlung in ASP.NET. Beginnend mit dem einfachsten Fall des Page_Load Events einer ASP.NET Seite, &uuml;ber die sehr n&uuml;tzliche IsPostBack Eigenschaft, bis zur Triggerung von Events bei ASP.NET WebForms.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;18.9.2000</td><td class="news"><a href="../artikel/20000918.htm" class="newsitem">Emails mit ASP.NET versenden</a><br />
Etwas, das sich heutzutage auf jeder Website findet, ist ein Email-Anfrageformular. Das wird sich wahrscheinlich auch nicht so schnell &auml;ndern, deswegen werde ich heute vorstellen, wie man Emails in ASP.NET verschickt: von ganz einfach bis hin zu HTML Mails und Attachments.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;13.9.2000</td><td class="news"><a href="../artikel/20000913.htm" class="newsitem">Einf&uuml;hrung in ASP.NET Validation Controls (Teil 2)</a><br />
Im 2. Teil der Artikelserie ASP.NET Validation Controls m&ouml;chte ich einige sehr interessante Aspekte aufgreifen. Zun&auml;chst besprechen wir die M&ouml;glichkeiten der Mehrfach-Validierung und die Verwendung der ValidationSummary Control bzw. der Page IsValid Eigenschaft.
Dieser Artikel besch&auml;ftigt sich auch mit der Wiederverwertbarkeit von
ASP.NET Code und die Integration von ASP.NET in vorhandene Webseiten.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;11.9.2000</td><td class="news"><a href="../artikel/20000911.htm" class="newsitem">Einf&uuml;hrung in ASP.NET Validation Controls (Teil 1)</a><br />
Es gibt heutzutage kaum mehr Webseiten, die auf Pr&uuml;fung der Benutzereingaben verzichten k&ouml;nnen. Beginnend bei den einfachsten Szenarien, wie die &Uuml;berpr&uuml;fung einer e-Mail Adresse bei einem
Kontaktformular, oder Datums&uuml;berpr&uuml;fung bei Kreditkarten in einem Web Shop  - alles das ist m&ouml;glich mit den ASP.NET Validation Controls.
Dieser erste Teil der Artikelserie gibt Ihnen eine Einf&uuml;hrung in die Validation Controls in ASP.NET.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.8.2000</td><td class="news"><a href="../artikel/20000828.htm" class="newsitem">Verwenden von COM Komponenten in ASP.NET</a><br />
Im heutigen Artikel besch&auml;ftige ich mich mit einem Thema, das sehr viele ASP.NET Umsteiger interessieren wird: wie kann ich meine gekauften oder selbst erstellten COM Komponenten in der ASP.NET Umgebung einsetzen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.8.2000</td><td class="news"><a href="../artikel/20000825.htm" class="newsitem">WHOIS Abfragen a la .NET</a><br />
Des &ouml;fteren m&ouml;chte man wissen, wem eine Domain geh&ouml;rt. Um an diese Informationen zu kommen, geht man zur entsprechenden Registry (DENIC, Network Solutions, etc), und macht dort eine sogenannte WHOIS Abfrage (Lookup). Der Haken an der Sache ist halt der, da&szlig; man wissen mu&szlig;, welche Registry f&uuml;r welche TLD's (Top Level Domain) zust&auml;ndig ist.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.8.2000</td><td class="news"><a href="../artikel/20000824.htm" class="newsitem">Scrapen von Webseiten</a><br />
In Webanwendungen ist es mittlerweile immer &ouml;fter n&ouml;tig, w&auml;hrend der Abarbeitung einer Seite auf Informationen von anderen Sites zuzugreifen: zum Beispiel f&uuml;r Kreditkartenautorisierung, aktuelle Wetterwerte abholen (und in das eigene Seitendesign einbauen), und vieles mehr.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.8.2000</td><td class="news"><a href="../artikel/20000823.htm" class="newsitem">Die Hashtable Klasse</a><br />
Neben Arrays f&uuml;r Elementzugriff via Index konnte man in VBScript mit Hilfe der Dictionary Komponente den Elementzugriff mittels Schl&uuml;ssels (Key) bewerkstelligen. Mit ASP.NET und dem .NET Framework kommen etliche neue Collection Klassen. Unter anderem mit dabei ist die Hashtable Klasse, die einige neue (hilfreiche) Funktionen mitbringt.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;16.8.2000</td><td class="news"><a href="../artikel/20000816.htm" class="newsitem">Die Kalender-Komponente in ASP.NET</a><br />
Momentan trifft man Kalender auf Webseiten eher selten an, vielleicht weil sie in HTML oder ASP sehr aufwendig zu implementieren waren und sind. Das &auml;ndert sich nun mit der Calendar Komponente von ASP.NET. Mit ein paar Handgriffen zaubern Sie einen Kalender der nicht nur h&uuml;bsch ausschaut, sondern auch funktionell ist - das ist Rapid Development!<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;11.8.2000</td><td class="news"><a href="../artikel/20000811.htm" class="newsitem">Ausgabe der Event Log Eintr&auml;ge a la ASP.NET</a><br />
Das Event Log unter Windows 2000 ist so ziemlich die wichtigste Informationsquelle
f&uuml;r einen Administrator - weil dort s&auml;mtliche vorgefallenen Ereignisse vom Erfolg bis zum katastrophalen Mi&szlig;erfolg vermerkt sind. Und da es so wichtig, was liegt n&auml;her als diese Informationen &uuml;ber das Web anzeigbar zu machen?<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.8.2000</td><td class="news"><a href="../artikel/20000809.htm" class="newsitem">Performance Monitoring a la .NET</a><br />
Im heutigen Artikel werde ich Ihnen zeigen, um wieviel einfacher es in ASP.NET unter Zuhilfenahme des .NET Frameworks ist, Performance Counter auszulesen und auszuwerten. Man kann sogar Teile des NT Performance Monitors nachbauen, ohne wirklich viel Zeit daf&uuml;r aufwenden zu m&uuml;ssen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;8.8.2000</td><td class="news"><a href="../artikel/20000808.htm" class="newsitem">Einf&uuml;hrung in ASP.NET Web Forms</a><br />
Wenn Sie mit ASP und Formularen gearbeitet haben, dann h&auml;tten Sie sicher gerne ein einheitliches serverseitiges Controlmodell zur Verf&uuml;gung gehabt, das Ihnen das Arbeiten mit Werbformularen wie mit Visual Basic Formularen erlaubt. Mit ASP.NET haben Sie genau diese Funktionalit&auml;t - jedes Element eines Formulars ist auch am Server in ASP.NET als echtes Objekt (Control) ansprechbar.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.8.2000</td><td class="news"><a href="../artikel/20000804.htm" class="newsitem">Directory Browsing a la .NET</a><br />
Mit den .NET Framework Klassen im System.IO Namespace erf&uuml;llen sich alle W&uuml;nsche, die man an das FileSystemObject Objekt so gehabt h&auml;tte. In diesem ersten Artikel &uuml;ber Dateibearbeitung besch&auml;ftige ich mich mit dem Task des Auflisten von Dateien und Ordnern.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.8.2000</td><td class="news"><a href="../artikel/20000802.htm" class="newsitem">Dateiupload mit ASP.NET</a><br />
Etwas das unter ASP ohne Fremdkomponente nicht vern&uuml;nftig m&ouml;glich war ist das Uploaden von Dateien auf einen Webserver, obwohl die Verwendungsm&ouml;glichkeiten dieses Features vielf&auml;ltigst sind. ASP.NET bietet diese Funktionalit&auml;t mit einer HTML Control names HtmlInputFile, die dem Programmierer ein leistungsf&auml;higes aber einfaches Programmieren erm&ouml;glicht.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.7.2000</td><td class="news"><a href="../artikel/20000728.htm" class="newsitem">On-the-fly Generierung von Graphiken</a><br />
Etwas, das f&uuml;r ASP Programmierer ohne Unterst&uuml;tzung einer Komponente nicht machbar ist, ist das dynamische Erstellen von Graphiken - und sei es nur ein einfacher graphischer Counter. Dem ist unter ASP.NET gl&uuml;cklicherweise nicht mehr so - mit einfachsten Bordmitteln kann man dynamisch Graphiken erstellen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;12.7.2000</td><td class="news"><a href="../artikel/20000712.htm" class="newsitem">Was ist neu in ASP.NET</a><br />
Willkommen zu einem Kurzbericht von der High-Tech Front - was gibt es Neues in ASP.NET? In diesem Artikel erfahren Sie in komprimierter Form, was Sie von ASP.NET erwarten k&ouml;nnen.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr></TABLE>

&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="ASP.NET"><input type="hidden" name="pageurl" value="http://www.aspheute.com/kategorien/ASPdotNET.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
