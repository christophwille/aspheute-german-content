<HTML>
<HEAD>
<TITLE>Web Services</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="31 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="">
<meta http-equiv="Keywords" name="Keywords" content="">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="Csharp.htm">C# (28)</a><br>
<a href="Datenbank.htm">Datenbank (44)</a><br>
<a href="Dokumentation.htm">Dokumentation (4)</a><br>
<a href="IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="Komponenten.htm">Komponenten (29)</a><br>
<a href="Optimierung.htm">Optimierung (10)</a><br>
<a href="Server.htm">Server (21)</a><br>
<a href="Sicherheit.htm">Sicherheit (34)</a><br>
<a href="Tee%20Off.htm">Tee Off (6)</a><br>
<a href="VBdotNET.htm">VB.NET (6)</a><br>
<a href="WAP.htm">WAP (8)</a><br>
<a href="Web%20Services.htm">Web Services (11)</a><br>
<a href="XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>


<H1>Kategorie: Web Services</H1>
<table cellspacing=0 border=0 cellpadding=0><tr valign="top"><td width="80" class="spacer">&nbsp;</td><td class="spacer">&nbsp;</td><td background="../images/layout/aspheuteside.gif" class="spacer"><img src="../images/layout/blind.gif" width=20 height=1></td></tr>
<tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.5.2003</td><td class="news"><a href="../artikel/20030502.htm" class="newsitem">Authentifizierung in Web Services - WS-Security, Benutzername / Passwort</a><br />
Der WS-Security Standard umfasst das Signieren von SOAP Nachrichten, das Verschl&uuml;sseln von SOAP Nachrichten, sowie das Anh&auml;ngen von Security Credentials an SOAP Nachrichten. Diese Security Credentials werden f&uuml;r die Authentifizierung verwendet, und k&ouml;nnen Benutzername / Passwort, ein X.509 Zertifikat oder Bin&auml;rtoken sein. Wir besch&auml;ftigen uns heute mit ersterem, und werden dies mit Hilfe der Web Services Enhancements (WSE) 1.0 unter .NET implementieren.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.5.2003</td><td class="news"><a href="../artikel/20030501.htm" class="newsitem">Authentifizierung in Web Services - SOAP Header</a><br />
Im letzten Artikel zum Thema Authentifizierung in Web Services haben wir uns mit protokollabh&auml;ngiger Authentifizierung besch&auml;ftigt. Obwohl Windows Integrated eine gute Intranet-L&ouml;sung ist, so ist sie nicht Plattform-&uuml;bergreifend, man ist an Windows Clients gebunden. Man kann diese Einschr&auml;nkung umgehen, indem man zus&auml;tzliche SOAP Header in den SOAP Nachrichten mitschickt.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.4.2003</td><td class="news"><a href="../artikel/20030429.htm" class="newsitem">Authentifizierung in Web Services - Windows Integrated</a><br />
Standardm&auml;&szlig;ig sind Web Services die man programmiert f&uuml;r jedermann zug&auml;nglich, das hei&szlig;t, unauthentifizierte anonyme Benutzer k&ouml;nnen darauf zugreifen. Manches Mal ist das gew&uuml;nscht, in vielen anderen F&auml;llen (zb Kreditkarten-Abbuchungsservice) allerdings nicht. In dieser
Artikelserie werden wir verschiedene Authentifizierungsmethoden beleuchten, und wir beginnen heute mit der Windows Integrierten Authentifizierung.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.11.2002</td><td class="news"><a href="../artikel/20021107.htm" class="newsitem">Index Server Abfragen per Web Service</a><br />
Wenn Google seinen Suchkatalog per Web Service anbietet, warum sollte man dann nicht seine lokale Sitesuche per Web Service den Programmierern &ouml;ffnen? Heute werden wir einen solchen Suchservice basierend auf dem Index Server, der ja
Teil von Windows 2000 ist, implementieren. Und damit man die N&uuml;tzlichkeit eines solchen Services sieht, erstellen wir ihn f&uuml;r AspHeute.com, und geben auch noch einen Windows-Client mit dazu.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.10.2002</td><td class="news"><a href="../artikel/20021029.htm" class="newsitem">Amazon.com Web Services 2.0</a><br />
Die Landschaft der verf&uuml;gbaren Web Services wird langsam bunter - neben den Google Web APIs hat auch ein weiterer "Gro&szlig;er" des Internets Web Services f&uuml;r uns Programmierer im Angebot - Amazon.com. Im heutigen
Artikel werden wir uns mit der Suche nach B&uuml;chern besch&auml;ftigen, der gezeigte Code ist leicht auf andere Angebote Amazons umlegbar.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;15.4.2002</td><td class="news"><a href="../artikel/20020415.htm" class="newsitem">Programmieren mit den Google Web APIs Beta 2</a><br />
Langsam aber sicher tauchen die ersten interessanten Web Services am Internet auf. Einer davon sind die Google Web APIs, mit denen man auf Such-, Cache- und Spellingdienste dieser sehr beliebten Suchmaschine zugreifen kann. Heute sehen wir uns, wie man die APIs in seine .NET Anwendungen einbauen kann.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.7.2001</td><td class="news"><a href="../artikel/20010703.htm" class="newsitem">Web Services einfach konsumieren</a><br />
Web Services sind dazu da um konsumiert zu werden! Die Erstellung eines Web Services mit klassischen Entwicklungstools wie Visual Basic 6 und Active Server Pages ist ja Dank des Microsoft SOAP Toolkits relativ einfach. Nach der Erstellung des Web Service soll der Client aber auch die Dienste benutzen, d.h. konsumieren k&ouml;nnen. Dieser Artikel zeigt Ihnen anhand eines einfachen Beispiels, wie das mit Hilfe des SOAP Toolkits geht.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.6.2001</td><td class="news"><a href="../artikel/20010629.htm" class="newsitem">Web Services mit dem SOAP Toolkit erstellen</a><br />
Web Services sind keine Exklusivveranstaltung von ASP.NET. Man kann auch mit "klassischen" Entwicklungstools wie Visual Basic 6 und Active Server Pages einen &uuml;ber SOAP (Simple Object Access Protocol) kommunizierenden Web Service 
erstellen. Zur Erleichterung der Entwicklung stellt Microsoft das SOAP Toolkit gratis zur Verf&uuml;gung. Dieser Artikel stellt Ihnen dieses anhand eines einfachen Web Services vor.<br><SPAN class="content">Autor: <a href="../autoren/christianholm.htm">Christian Holm</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;27.6.2001</td><td class="news"><a href="../artikel/20010627.htm" class="newsitem">Session State in ASP.NET Web Services</a><br />
Wenn man Web Services in ASP.NET programmiert, dann bekommt man ein bequemes Feature frei Haus geliefert - man kann Session State verwenden, und zwar v&ouml;llig gleich zu normalen ASP.NET Seiten. Nur ein einziges Attribut mu&szlig; gesetzt werden, und schon kann man zB ein einfaches Loginsystem
f&uuml;r Web Services basteln.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;22.6.2001</td><td class="news"><a href="../artikel/20010622.htm" class="newsitem">Web Services in Anwendungen konsumieren</a><br />
Im Artikel "Web Services 101 in ASP.NET" habe ich gezeigt, wie einfach es ist, einen Web Service zu programmieren. Heute begeben wir uns auf die andere Seite der Front, n&auml;mlich auf die Kundenseite: wir wollen lernen, wie man einen Web Service anspricht und seine Funktionen aufruft - ihn "konsumiert".<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.6.2001</td><td class="news"><a href="../artikel/20010621.htm" class="newsitem">Web Services 101 in ASP.NET</a><br />
Das Simple Object Access Protocol (SOAP) ist als Protokoll f&uuml;r Web Services schon seit langer Zeit in aller Munde, allerdings fehlte bis jetzt unter IIS eine einfache Entwicklungsplattform, um Web Services zu programmieren. Diese haben
wir nun mit ASP.NET in der Hand, und ich werde Ihnen heute zeigen, wie leicht man Web Services in C# als auch VB.NET entwickeln kann.<br><SPAN class="content">Autor: <a href="../autoren/christophwille.htm">Christoph Wille</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr></TABLE>

&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Web Services"><input type="hidden" name="pageurl" value="http://www.aspheute.com/kategorien/Web Services.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
