<HTML>
<HEAD>
<TITLE>Online File Management System mit ASP.NET und C# - Teil 2</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Im ersten Teil der Artikelserie haben wir uns damit besch&auml;ftigt, Dateien und Verzeichnisse online browsebar zu machen.Heute implementieren wir die Funktionen f&uuml;r Upload und Download, sowie das Editieren von Textdateien.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,OFMS,Upload,File,Management,Artikelserie,Editieren,Bearbeiten,Dateien,Download,Content,Disposition">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Online File Management System mit ASP.NET und C# - Teil 2</H1>
<p>
Geschrieben von: <a href="../autoren/rudolfball.htm">Rudolf Ball</a><br>
Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20021105"></SCRIPT>
</p>
<p>
Es gibt eine komfortable M&ouml;glichkeit, seine Daten, Dateien und Verzeichnisse online zu verwalten: ein Online File Management 
System (OFMS). Im ersten Teil der Artikelserie haben wir uns damit besch&auml;ftigt, Dateien und Verzeichnisse online browsebar zu machen.
Heute implementieren wir die Funktionen f&uuml;r Upload und Download (Sektion "Bestandsver&auml;nderungen"), sowie das Editieren von Textdateien -
mehr dazu in der Sektion "Facelifting".
</p>

<h2>Bestandsver&auml;nderungen</h2>
<p>
Als n&auml;chsten Schritt wollen wir den Dateidownload als auch den Upload implementieren. Der Dateidownload ist einfach, wir ben&ouml;tigen 
dazu nur eine weitere Spalte in unserer <i>DateienUndVerzeichnisse</i> Tabelle, in welche wir das Symbol 
</p>

<IMG SRC="Bilder/200211/20021105_1.png" width="16" height="16" alt="" border="0">

<p>
einf&uuml;gen. Der extra ben&ouml;tigte Code in der Funktion <i>TabelleDateienUndVerzeichnisseFuellen</i> sieht folgenderma&szlig;en aus:
</p>

<pre style="background='silver';">
...
ZelleDownload = new TableCell();
LinkDownload = new HyperLink();
...
LinkDownload.Text = "&lt;img src=\"./Bilder/Download.gif\" border=\"0\" height=\"16\" width=\"16\"" + 
                           "Alt=\"Datei herunterladen\"&gt;";
LinkDownload.NavigateUrl = "Download.aspx?Dateiname=" + Ort;
ZelleDownload.Controls.Add(LinkDownload);
...
Zeile.Cells.Add(ZelleDownload);
...
</pre>

<p>
Wie man sieht linken wir auf einen neuen WebForm namens <b>Download.aspx</b>. Diese WebForm besitzt kein User Interface sondern besteht 
nur aus einem PageLoad Event, welches ich im Folgenden besprechen m&ouml;chte.
</p>

<pre style="background='silver';">
string Dateiname = Server.MapPath(Request.Params["Dateiname"]);
System.IO.FileInfo Datei = new System.IO.FileInfo(Dateiname);
Response.Clear();
Response.AddHeader("Content-Disposition","attachment; filename=" + Datei.Name);
Response.AddHeader("Content-Length",Datei.Length.ToString());
Response.ContentType = "application/octet-stream";
Response.WriteFile(Datei.FullName);
Response.End();
</pre>

<p>
Die Variable <i>Dateiname</i> wird mit dem Wert des Parameters Dateiname des Querystrings gef&uuml;llt. Ein FileInfo namens <i>Datei</i> beschreibt 
diese. Mit dem Aufruf Response.Clear l&ouml;schen wir den Puffer (falls bereits etwas geschrieben sein sollte). Um einen "Speichern 
unter" Dialog erzeugen zu k&ouml;nnen m&uuml;ssen wir einen zus&auml;tzlichen Header einf&uuml;gen, und diesem Header weisen wir den gew&uuml;nschten 
Dateinamen zu. Als n&auml;chsten Schritt weisen wir dem Header Content-Length die Dateigr&ouml;&szlig;e zu, denn damit ist gew&auml;hrleistet, da&szlig; 
der Benutzer eine Fortschrittsanzeige angezeigt bekommen. Mit dem ContentType "application/octet-stream" definieren wir, da&szlig; 
es sich um einen Stream handelt, welcher vom Client nur heruntergeladen werden kann (und eben nicht ge&ouml;ffnet). Anschlie&szlig;end 
senden wir den Stream zum Client. Response.End beendet die Ausf&uuml;hrung dieser Seite. 
</p>
<p>
Somit wird durch einen Klick auf das Download-Image zur Downloadseite gelinkt (<b>Download.aspx</b>) und der Dateinname im Querystring 
&uuml;bergeben. Die Datei wird als Stream zum Client gesendet. Ganz anders sieht der Vorgang jedoch beim Upload aus.
</p>
<p>
F&uuml;r den Upload haben wir auf die Hauptseite (<b>OFMS.aspx</b>) ein HTML Input Control gesetzt, welches wir jedoch mit dem runat=server 
Attribut vesehen haben, um auf die Daten zugreifen zu k&ouml;nnen. Der eingef&uuml;gte HTML Code sieht wie folgt aus.
</p>

<pre style="background='silver';">
&lt;tr bgColor="khaki"&gt;
   &lt;td width="100"&gt;&lt;font face="Verdana" color="black" size="1"&gt;&lt;b&gt;Datei Upload &lt;/b&gt;&lt;/font&gt;
   &lt;/td&gt;
   &lt;td width="200"&gt;
      &lt;input id="DateiUpload" runat="server" type="file" name="DateiUpload" width="100%"&gt;
   &lt;/td&gt;
   &lt;td width="500"&gt;
      &lt;asp:Button Runat="server" ID="Upload" Text="Upload"&gt;&lt;/asp:Button&gt;
   &lt;/td&gt;
&lt;/tr&gt;
</pre>

<p>
Wie wir sehen, haben wir ein Inputfeld <i>DateiUpload</i> vom Typ "file" eingef&uuml;gt. Automatisch wird hier eine Textbox und ein "Browse" 
Button angezeigt, welcher bei Klick einen Dialog zur Dateiauswahl &ouml;ffnet. Weiters ben&ouml;tigen wir einen Button "Upload", welcher 
die zuvor selektierte Datei endg&uuml;ltig in unser Web bef&ouml;rdert. Der Click-Event des Buttons Upload sieht wie folgt aus.
</p>

<pre style="background='silver';">
private void DateiUpload_Click(object sender, System.EventArgs e)
{
   string aktuellesVerzeichnis = Request.Params["Verzeichnis"];
   if (aktuellesVerzeichnis == null || aktuellesVerzeichnis.Length == 0)
   {
      aktuellesVerzeichnis = Request.ApplicationPath.ToString();
   }
   if (DateiUpload.PostedFile != null &amp;&amp; DateiUpload.PostedFile.FileName.Length &gt; 0)
   {
      string Zielverzeichnis = Server.MapPath(aktuellesVerzeichnis);
      try
      {
         string Dateiname = Path.GetFileName(DateiUpload.PostedFile.FileName);
         DateiUpload.PostedFile.SaveAs(Path.Combine(Zielverzeichnis,Dateiname));
         Response.Redirect("OFMS.aspx?Verzeichnis=" + aktuellesVerzeichnis);
      }
      catch(Exception ex)
      {
         StatusMessage.Text = ex.Message;
         StatusMessage.Visible = true;
      }
   }
}
</pre>

<p>
Interessant ist hier, da&szlig; wir auf die selektierte Datei durch DateiUpload.PostedFile zugreifen k&ouml;nnen. Somit k&ouml;nnen wir die 
Datei mit DateiUpload.PostedFile.Save einfach in unserem Zielverzeichnis speichern. Anschlie&szlig;end f&uuml;hrt uns ein Response.Redirect 
wieder auf die Hauptseite <b>OFMS.aspx</b> zur&uuml;ck, nat&uuml;rlich ins richtige Verzeichnis. Somit sehen wir, da&szlig; weder der Up- noch der 
Download von Dateien mit ASP.NET ein Problem darstellt. Im Browser sieht das Ganze dann so aus.
</p>

<IMG SRC="Bilder/200211/20021105_2.png" width="852" height="555" alt="" border="0">

<p>
Beim Klick auf "Browse" &ouml;ffnet sich der Dialog "Datei &ouml;ffnen ...". Anschlie&szlig;end steht der Dateipfad in der Textbox. Erst durch den 
Klick auf den "Upload"-Button wird die Datei hochgeladen.
</p>

<h2>Facelifting</h2>
<p>
Was hilft es uns, die Dateien online aufzulisten, wenn wir sie weder einsehen noch bearbeiten k&ouml;nnen. Aus diesem Grund m&ouml;chten 
wir mit unserem OFMS dem Benutzer diese M&ouml;glichkeit einr&auml;umen. Wir ben&ouml;tigen hierf&uuml;r zwei Komponenten. Einerseits eine WebForm 
zum Editieren (Editor.aspx) und andererseits einen Edit-Button 
</p>

<IMG SRC="Bilder/200211/20021105_4.png" width="16" height="16" alt="" border="0">

<p>
mit Link auf die Editorseite von unserer Hauptseite aus. Der Code f&uuml;r den Link ist einfach und unterscheidet sich nur 
geringf&uuml;gig von dem des Download-Buttons.
</p>

<pre style="background='silver';">
LinkEdit.Text = "&lt;img src=\"./Bilder/Editor.gif\" border=\"0\" height=\"16\" _
		width=\"16\" Alt=\"Datei editieren\"&gt;";
LinkEdit.NavigateUrl = "Editor.aspx?Dateiname=" + Ort;
ZelleEdit.Controls.Add(LinkEdit);
</pre>

<p>
Dem zuvor erzeugten Hyperlink <i>LinkEdit</i> wird als Text ein Image-Tag hinzugef&uuml;gt (Editor.gif). Als Ziel (NavigateUrl) wird die 
Editor.aspx Seite angegeben, jedoch mit dem Pfad der zu editierenden Datei (<i>Ort</i>) als Parameter. Anschlie&szlig;end wird der 
Hyperlink der Zelle <i>ZelleEdit</i> hinzugef&uuml;gt. Dies war der einfache Teil. 
</p>
<p>
Auf die Editor.aspx Seite gelinkt wird sogleich das PageLoad-Event ausgef&uuml;hrt. Dieses Event sieht wie folgt aus:
</p>

<pre style="background='silver';">
private void Page_Load(object sender, System.EventArgs e)
{
if (!Page.IsPostBack)
{
   string Dateipfad = Request.Params["Dateiname"];
   if (Dateipfad != null)
   {
      if (Request.Params["erzeugen"] == null || Request.Params["erzeugen"] == "false")
      {
         try
         {
           StreamReader sr = new StreamReader(File.Open(Server.MapPath(Dateipfad),FileMode.Open));
           DateiInhalt.Text = sr.ReadToEnd();
           sr.Close();
         }
         catch (Exception ex)
         {
           StatusMessage.Text = ex.Message;
           StatusMessage.Visible = true;
         }
      }
   DateiSpeichernUnter.Text = Dateipfad;
   }
}
}
</pre>

<p>
Der Variable <i>Dateipfad</i> wird der Dateiname, welcher durch den Querystring &uuml;bergeben wurde, zugewiesen. Weiters wird der Parameter 
"erzeugen" abgefragt, denn sollte dieser &uuml;bersprungen werden wollen wir eine neue Datei erzeugen und ben&ouml;tigen nicht das 
Hochladen und Anzeigen einer anderen. Anschlie&szlig;end &ouml;ffnen wir einen neuen StreamReader, welchem wir als Eingabeparameter die 
offenen Datei &uuml;bergeben. Der auf der Editor.aspx - Seite definierten Textbox <i>DateiInhalt</i> weisen wir den StreamReader zu, welcher 
sie f&uuml;llt. Somit zeigen wir den Inhalt (=Text) der Datei in der Textbox an. Zu guter letzt wird in die Textbox 
<i>DateiSpeichernUnter</i> der Dateipfad eingetragen, was ein Speichern bei Ver&auml;nderung auch unter einem anderen Name erlaubt. 
</p>
<p>
Schlu&szlig;endlich m&ouml;chten wir noch die Datei nach eventuellen &Auml;nderungen speichern. Das Click-Event hierf&uuml;r sieht folgenderma&szlig;en aus:
</p>

<pre style="background='silver';">
private void DateiSpeichern_Click(object sender, System.EventArgs e)
{
   try
   {
      string DateiPfad = DateiSpeichernUnter.Text;
      if (!DateiPfad.StartsWith("/"))
      {
         DateiPfad = "/" + DateiPfad;
      }
      StreamWriter DateiStreamWriter = File.CreateText(Server.MapPath(DateiPfad));
      DateiStreamWriter.Write(DateiInhalt.Text);
      DateiStreamWriter.Close();
      StatusMessage.Text = "Datei wurde erfolgreich gespeichert!";
   }
   catch (Exception ex)
   {
      StatusMessage.Text = ex.Message;
   }
   StatusMessage.Visible = true;
}
</pre>

<p>
Hierf&uuml;r pr&uuml;fen wir den noch virtuellen Dateipfad auf syntaktische G&uuml;ltigkeit und mappen ihn, damit wir ihn physisch erhalten. 
Anschlie&szlig;end erzeugen wir einen StreamWriter, in welchen wir den Inhalt unserer Textbox <i>DateiInhalt</i> schreiben. Nachdem wir 
den StreamWriter geschlossen haben geben wir noch eine Erfolgsmeldung aus. In diesem Codebeispiel sehen wir sehr sch&ouml;n, da&szlig; 
das Speichern von Dateien aus dem Webbrowser heraus keinerlei Problem darstellt. Der folgende Screenshot zeigt, wie die Datei 
web.config im OFMS-Editor dargestellt wird.
</p>

<IMG SRC="Bilder/200211/20021105_3.png" width="855" height="617" alt="" border="0">

<h2>Schlu&szlig;bemerkung</h2>
<p>
Ein Online File Management System zu entwickeln hat mir sehr viel Spa&szlig; bereitet. Dieses n&uuml;tzliche Tool ist jedoch noch nicht 
reif, eine ganze Reihe von Zusatzfunktionen sind m&ouml;glich und w&auml;ren w&uuml;nschenswert. Ich denke da nur an die M&ouml;glichkeit von 
Kopier-, Ausschneid- und Move-Funktionen, das Erstellen von Verzeichnissen (dem der Dateien sehr &auml;hnlich), die Kontrollabfragen 
bei L&ouml;schen ("Wollen Sie wirklich ...") etc. 
</p>
<p>
Und auf einen wichtigen Punkt haben wir &uuml;berhaupt keine R&uuml;cksicht genommen, und zwar auf Datensicherheit. Es w&auml;re ein zu gro&szlig;es 
Risiko, diese Funktionalit&auml;t ohne Zugriffssicherung ins Web zu stellen. Aus diesem Grund w&auml;re eine Form der Authentifizierung 
denkbar und notwendig. Ansonsten ist die Entwicklung solch eines Systems mit ASP.NET und dem .NET Framework recht einfach, da 
alle notwendigen Funktionen vorhanden und leicht verst&auml;ndlich verwendbar sind.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20021105.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20000929.htm">Dateien lesen in ASP.NET</a><br>
<a href="20020409.htm">Dateien umbenennen</a><br>
<a href="20000804.htm">Directory Browsing a la .NET</a><br>
<a href="20020226.htm">Ein Touch-Utility in C#</a><br>
<a href="20021031.htm">Online File Management System mit ASP.NET und C# - Teil 1</a><br>
<a href="20010507.htm">Web-basiertes Dateimanagement mit dem ASP FileMan</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Faspalliance%2Ecom%2Faldotnet%2Fexamples%2Fcd%2Easpx">Are you sure you want to delete that?</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Faspnet%2E4guysfromrolla%2Ecom%2Farticles%2F081402%2D1%2Easpx">Dynamic Controls in ASP.NET</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Ecsharphelp%2Ecom%2Farchives%2Farchive147%2Ehtml">TextReader and TextWriter In C#</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20021105" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Online File Management System mit ASP.NET und C# - Teil 2"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20021105.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Rudolf Ball"><input type="hidden" name="AuthorEmail" value="rball@edu.uni-klu.ac.at"><input type="hidden" name="Artikel" value="20021105"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20021105.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
