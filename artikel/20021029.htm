<HTML>
<HEAD>
<TITLE>Amazon.com Web Services 2.0</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Die Landschaft der verf&uuml;gbaren Web Services wird langsam bunter - neben den Google Web APIs hat auch ein weiterer Gro&szlig;er des Internets Web Services f&uuml;r uns Programmierer im Angebot - Amazon.com.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Amazon.com,Web Service,ASW 2.0,Programmierung,Client,Suche,Shopping Cart,Amazon.com Web Services 2.0,.NET,Proxy,Klasse,WebRequest,WebResponse">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Amazon.com Web Services 2.0</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20021029"></SCRIPT>
</p>
<p>
Die Landschaft der verf&uuml;gbaren Web Services wird langsam bunter - neben den <a href="20020415.htm">Google Web APIs</a>
hat auch ein weiterer "Gro&szlig;er" des Internets Web Services f&uuml;r uns Programmierer im Angebot - Amazon.com. Im heutigen
Artikel werden wir uns mit der Suche nach B&uuml;chern besch&auml;ftigen, der gezeigte Code ist leicht auf andere Angebote Amazons
umlegbar.
</p>
<p>
Generell unterst&uuml;tzen die Amazon.com Web Services zwei gro&szlig;e Bereiche: das Anzeigen von Produkten, sowie das Verwalten von
Shopping Carts. Bevor man die Services verwenden kann, mu&szlig; man sich unter <a href="http://www.amazon.com/webservices" target="_blank">http://www.amazon.com/webservices</a>
registrieren, und sollte auch das entsprechende Developer Kit downloaden:
</p>

<IMG SRC="Bilder/200210/20021029_2.png" width="884" height="760" alt="" border="0">

<p>
Im Developer Kit mit dabei ist die leider etwas schwachbr&uuml;stige Dokumentation. Viele Dinge mu&szlig; man sich mit Hilfe des VS.NET
Class Browsers beziehungsweise der Java Samples zusammensuchen - es steht zu hoffen, da&szlig; in Zukunft diese Schwachstellen
beseitigt werden.
</p>

<h2>Erstellen der Proxyklassen</h2>
<p>
Obwohl Visual Studio.NET das Erstellen von Web Service Proxies hervorragend beherrscht, ist es von Zeit zu Zeit nicht schlecht,
mit den Tools des .NET SDK's zu &uuml;ben - denn die Kommandozeilenclients des SDK's k&ouml;nnen oft mehr als die Wizards des VS.NET.
Hier ist die Befehlszeile zur Generierung eines C# Proxy's:
</p>

<pre style="background='silver';">
wsdl /language:C# /namespace:Amazon.WebServices /protocol:SOAP /out:amazonws.cs 
     http://soap.amazon.com/schemas2/AmazonWebServices.wsdl
</pre>

<p>
Damit erhalten wir den Proxy in die Datei <b>amazonws.cs</b> generiert, und diese Datei k&ouml;nnen wir ab sofort in alle unsere
Projekte einbinden.
</p>

<h2>Eine Applikation zur Buchsuche</h2>
<p>
Zur Demonstration wie die Amazon.com Web Services funktionieren, erstellen wir uns eine Applikation mit der man nach B&uuml;chern
suchen kann, und zwar mittels Schl&uuml;sselwort. Die gefundenen Resultate sollen in einer ListView ausgegeben werden:
</p>

<IMG SRC="Bilder/200210/20021029_3.png" width="818" height="616" alt="" border="0">

<p>
Die ListView besitzt drei Spalten - der Grund hierf&uuml;r ist, da&szlig; wir bei unserer Suchanfrage nur vier Werte immer erhalten werden:
</p>

<ul>
	<li>URL
	<li>ASIN
	<li>ProductName
	<li>Catalog 
</ul>

<p>
Falls verf&uuml;gbar, bekommen wir auch folgende Werte geliefert:
</p>

<ul>
	<li>Artists
	<li>Authors
	<li>ReleaseDate
	<li>Manufacturer
	<li>ImageUrlSmall
	<li>ImageUrlMedium
	<li>ImageUrlLarge
	<li>ListPrice
	<li>OurPrice
	<li>UsedPrice
</ul>

<p>
Daher habe ich mich f&uuml;r diese kleine Applikation auf die sichere Seite begeben, und stelle nur das dar, was mir auch immer
sicher vom Web Service zur Verf&uuml;gung gestellt wird. Die einzigen optionalen Daten die die Applikation verwendet ist
<i>ImageUrlMedium</i>, um den Cover des Buches nachzuladen, so er verf&uuml;gbar ist (wird in der PictureBox unterhalb der ListView
dargestellt).
</p>
<p>
Beginnen wir aber mit dem Code, der hinter dem Suchen-Button liegt:
</p>

<pre style="background='silver';">
    private void btnSearch_Click(object sender, System.EventArgs e)
    {
      AmazonSearchService searchService = new AmazonSearchService();

      KeywordRequest keywordReq = new KeywordRequest();
      keywordReq.devtag = txtToken.Text;      // Token
      keywordReq.keyword = txtKeyword.Text;   // Suchbegriff
      keywordReq.type = "lite";               // Suchart
      keywordReq.sort = "+salesrank";         // Art der Sortierung
      keywordReq.mode = "books";              // Suchbereich
      keywordReq.tag = "alphasierrapapa";     // Amazon Associate ID

      ProductInfo pi = searchService.KeywordSearchRequest(keywordReq);

      lvFoundItems.BeginUpdate();
      lvFoundItems.Items.Clear();
	  
      // Anzahl der Records - kann man mit der KeywordRequest.page Eigenschaft
      // zum Pagen durch die Resultate verwenden
      labelTotalRecords.Text = "Total records: " + pi.TotalResults.ToString();

      for (int i=0;i &lt; pi.Details.Length; i++)
      {
        ListViewItem lvi = new ListViewItem();
        lvi.Text = pi.Details[i].Url;
        lvi.SubItems.Add(pi.Details[i].Asin);
        lvi.SubItems.Add(pi.Details[i].ProductName);
        lvi.SubItems.Add(pi.Details[i].ImageUrlMedium);
        lvFoundItems.Items.Add(lvi);
      }

      lvFoundItems.EndUpdate();
    }
</pre>

<p>
Alle Suchanfragen werden via <i>AmazonSearchService</i> abgewickelt, die Variation dabei ist die Methode (hier
<i>KeywordSearchRequest</i>) sowie das zugeh&ouml;rige Suchrequest-Objekt (in diesem Beispiel <i>KeywordRequest</i>).
Die Datenfelder sind in allen F&auml;llen einfache Strings, die Resultate werden im <i>ProductInfo.Details</i> Array
geliefert.
</p>
<p>
Wie man sieht, ist die Suche und das Darstellen der Resultate kein Problem. Um der ganzen Applikation etwas mehr
"Coolness" zu verleihen, wollen wir noch das Bild des Covers darstellen, wie im folgenden Screenshot gezeigt:
</p>

<IMG SRC="Bilder/200210/20021029_1.png" width="535" height="442" alt="" border="0">

<p>
Dazu m&uuml;ssen wir das <i>ItemActivate</i> Event behandeln. In diesem laden wir mit Hilfe der <i>WebRequest</i> und
<i>WebResponse</i> Klassen das Bild vom Internet, und stellen es dann in der <i>PictureBox</i> dar - dank Streams
im .NET Framework kein gro&szlig;es Problem wie der folgende Sourcecode zeigt:
</p>

<pre style="background='silver';">
    private void lvFoundItems_ItemActivate(object sender, System.EventArgs e)
    {
      if (lvFoundItems.SelectedItems.Count == 0) return;
      ListViewItem lvi = lvFoundItems.SelectedItems[0];
      string strImageUrl = lvi.SubItems[3].Text;
      if ("" == strImageUrl) return;

      WebRequest wrq = WebRequest.Create(strImageUrl);
      WebResponse wrp = wrq.GetResponse();

      Bitmap bmp = new Bitmap(wrp.GetResponseStream());
      picbox.Image = bmp;
      picbox.Refresh();
    }
</pre>

<p>
Bei einer Webapplikation kann man direkt ein Image-Tag bauen, wodurch das Bild dann vom Client nachgeladen wird. Aber selbst
programmiert macht es doch mehr Spa&szlig;, oder?
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Die Amazon.com Web Services sind ein weiterer Web Service den man sinnvoll in seine eigene Web oder Windows Anwendung einbauen
kann - angefangen von einer einfachen Buchsuche wie heute vorgestellt, bis hin zu komplexen Anwendungen, zB der automatisierte
Einkauf von B&uuml;chern &uuml;ber eine Intranet-Verwaltungsapplikation.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20021029.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20020415.htm">Programmieren mit den Google Web APIs Beta 2</a><br>
<a href="20000824.htm">Scrapen von Webseiten</a><br>
<a href="20010703.htm">Web Services einfach konsumieren</a><br>
<a href="20010622.htm">Web Services in Anwendungen konsumieren</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Eamazon%2Ecom%2Fwebservices">Amazon.com Web Services</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20021029" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Amazon.com Web Services 2.0"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20021029.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christoph Wille"><input type="hidden" name="AuthorEmail" value="christophw@alphasierrapapa.com"><input type="hidden" name="Artikel" value="20021029"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20021029.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
