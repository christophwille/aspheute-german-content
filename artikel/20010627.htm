<HTML>
<HEAD>
<TITLE>Session State in ASP.NET Web Services</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Wenn man Web Services in ASP.NET programmiert, dann bekommt man ein bequemes Feature frei Haus geliefert - man kann Session State verwenden, und zwar v&ouml;llig gleich zu normalen ASP.NET Seiten.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Web Services,ASP.NET,SOAP,httpget,httppost,EnableSession,WebMethod,Session,Session State,Session Cookie,.NET,Samples">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Session State in ASP.NET Web Services</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010627"></SCRIPT>
</p>
<p>
Wenn man Web Services in ASP.NET programmiert, dann bekommt man ein bequemes Feature frei Haus
geliefert - man kann Session State verwenden, und zwar v&ouml;llig gleich zu normalen ASP.NET Seiten.
Nur ein einziges Attribut mu&szlig; gesetzt werden, und schon kann man zB ein einfaches Loginsystem
f&uuml;r Web Services basteln.
</p>
<p>
Bevor wir beginnen, m&ouml;chte ich die "dunkle Seite" des Session State in ASP.NET Web Services beleuchten:
wie &uuml;blich bedient sich der Session State entsprechender Cookies, die allerdings nicht alle Clients 
annehmen. F&uuml;r eine leicht zu kontrollierende L&ouml;sung (=Intranet) ist dies kein Problem - soll der Web
Service allerdings einer breiten Masse via dem Internet zug&auml;nglich gemacht werden, sollte man auf Session
State verzichten - und sei es nur, um noch ein letztes Quentchen an Performance herauszuquetschen.
</p>
<p>
Um den heute vorgestellten Code ausf&uuml;hren zu k&ouml;nnen, mu&szlig; ASP.NET am Server installiert sein. F&uuml;r das
Erstellen von Assemblies ben&ouml;tigt man das vollst&auml;ndige .NET SDK (nicht notwendigerweise am Server,
allerdings auf der Maschine, auf der die Assembly kompiliert werden soll).
</p>

<h2>So funktioniert's</h2>
<p>
In der Einleitung habe ich davon gesprochen, da&szlig; wir nur ein einziges Attribut ben&ouml;tigen. Stimmt.
Man mu&szlig; nur <i>EnableSession</i> beim sowieso erforderlichen <i>WebMethod</i> Attribut hinzuf&uuml;gen,
und schon kann man auf Session State vertrauen:
</p>

<pre style="background='silver';">
[ WebMethod(EnableSession=true) ]
</pre>

<p>
Ich habe das nat&uuml;rlich gleich in ein einfaches, wenig anspruchvolles Beispiel gepackt: <b>SimpleStateful.asmx</b>.
Dieser Web Service hat zwei Methoden, <i>MethodA</i> und <i>MethodB</i>. Wenn man <i>MethodA</i> mit
einem String aufruft, wird dieser in einer Sessionvariable abgelegt, und kann durch Aufruf der Methode
<i>MethodB</i> wieder ausgelesen werden:
</p>

<pre style="background='silver';">
&lt;%@ WebService Language="C#" Class="SimpleState" %&gt;
using System;
using System.Web.Services;

public class SimpleState : WebService
{
	[ WebMethod(EnableSession=true) ]
	public void MethodA(string strValue) 
	{ 
		Session["SessionStateTest"] = strValue;
	}

	[ WebMethod(EnableSession=true) ]
	public string MethodB()
	{
		object objState = Session["SessionStateTest"];
		if (null != objState) return (string)objState;
		return "";
	}
}
</pre>

<p>
Die Verwendung von Session State unter ASP.NET funktioniert etwas anders als bisher gewohnt. Existiert
eine Variable n&auml;mlich nicht, bekommt man eine <i>null</i> Referenz zur&uuml;ckgeliefert - und diese umzucasten
und zu konvertieren w&auml;re nicht klug (au&szlig;er man liebt Exceptions). Deshalb der Check gegen <i>null</i> in der Funktion <i>MethodB</i>.
</p>
<p>
Da&szlig; das Arbeiten mit Session State funktioniert kann man im Browser versuchen - mittels der von ASP.NET 
vorgenerierten Seiten. Ich gehe aber sofort dazu &uuml;ber, mir einen Proxy zum Aufrufen des Web Services zu
generieren.
</p>

<h2>Den Proxy erstellen</h2>
<p>
Der Proxy wird wieder mit Hilfe des <b>wsdl.exe</b> Utility's erzeugt. Ich habe mir dazu die Batchdatei
<b>CreateProxy.bat</b> angelegt:
</p>

<pre style="background='silver';">
Wsdl /language:cs  /protocol:httpget /namespace:SimpleStateProxy 
     /out:SimpleStateProxy.cs http://192.168.1.203/SessionStateServices/SimpleStateful.asmx
</pre>

<p>
Im Vergleich zum Artikel <a href="20010622.htm">Web Services in Anwendungen konsumieren</a> habe ich hier das Protokoll ver&auml;ndert:
von <b>soap</b> auf <b>httpget</b>. Sinn und Zweck der &Uuml;bung ist eindeutig klarzustellen, da&szlig; wir hier
keinen "korrekten" SOAP Web Service vor uns haben, sondern einen ASP.NET Web Service.
</p>
<p>
&Uuml;brigens g&auml;be es auch <b>httppost</b> als Protokoll. Die Extraerw&auml;hnung verdient es wegen der im Internet
sehr h&auml;ufig anzutreffenden Proxy Server: GET Requests k&ouml;nnen gecacht werden, POST hingegen nicht. Wer also
die leidigen Caching Probleme ausschalten will, sollte sich f&uuml;r <b>httppost</b> entscheiden.
</p>

<p>
Die Proxyklasse h&auml;tten wir, sie mu&szlig; nur noch kompiliert werden (<b>Compile.bat</b>):
</p>

<pre style="background='silver';">
csc.exe /target:library SimpleStateProxy.cs
</pre>

<p>
F&uuml;r die Verwendung in ASP.NET Seiten mu&szlig; die erzeugte Assembly in das <b>bin</b> Verzeichnis der
Applikation kopiert werden, f&uuml;r Windows Applikation in das Verzeichnis des Programms.
</p>

<h2>Verwenden des Services</h2>
<p>
Im heutigen Download findet sich zwar auch ein Kommandozeilenbeispiel, allerdings gehe ich im Artikel
nur die ASP.NET L&ouml;sung durch, die in <b>CallService.aspx</b> implementiert ist. Ich habe ein Web
Form erstellt, das nur eine Schaltfl&auml;che beeinhaltet. Wenn man auf diese klickt, wird ein Event ausgel&ouml;st,
und der Web Service aufgerufen:
</p>

<pre style="background='silver';">
&lt;% @Import Namespace="SimpleStateProxy" %&gt;
&lt;% @Import Namespace="System.Net" %&gt;
&lt;script language="C#" runat="server"&gt;
void btnPress_Click(Object Sender, EventArgs E)
{
  SimpleState myStateService = new SimpleState();
  CookieContainer cc = new CookieContainer();
  myStateService.CookieContainer = cc;
		
  myStateService.MethodA("This is the World @" + DateTime.Now.ToString());
  lblOutput.Text = myStateService.MethodB();
}
&lt;/script&gt;

&lt;html&gt;
&lt;body&gt;

&lt;form runat="server"&gt;
&lt;asp:Button id="btnPress" text="Test Service" 
	onClick="btnPress_Click" runat="server" /&gt;
&lt;p&gt;&lt;asp:Label id="lblOutput" text="" runat="server" /&gt;&lt;/p&gt;
&lt;/form&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
Das Ergebnis sieht dann im Browser so aus:
</p>

<IMG SRC="Bilder/200106/20010627_1.png" width="523" height="225" alt="" border="0">

<p>
Allerdings w&uuml;rde die ganze Sache ohne den folgenden zwei Zeilen keinesfalls funktionieren:
</p>

<pre style="background='silver';">
  CookieContainer cc = new CookieContainer();
  myStateService.CookieContainer = cc;
</pre>

<p>
Um Web Services mit Session State verwenden zu k&ouml;nnen, mu&szlig; man einen <i>CookieContainer</i>
instanzieren, und der <i>CookieContainer</i> Eigenschaft der Web Service Klasse zuweisen. Nur
so kommt man in den Genu&szlig; von Session State. Sonst differiert der Aufruf der Web Service
Funktionen nicht von einem, der keinen Session State verwendet.
</p>

<h2>Anwendungsfall: Authentifizierung</h2>
<p>
In der Einleitung erw&auml;hnt, hier kommt es - eine Authentifizierung f&uuml;r Web Services. Besonders praktisch dann,
wenn man nur bestimmten Benutzern die Verwendung des Web Services gestatten will - und nicht auf
andere Authentifizierungsmethoden (zB Windows Authentication) ausweichen m&ouml;chte.
</p>
<p>
Die Datei <b>LoginSample.asmx</b> zeigt, wie es ablaufen mu&szlig;. Diese Datei ist nur ein "Skelett", in das
Datenbankcode f&uuml;r die Benutzerkonten, sowie die eigentliche Funktionalit&auml;t des Web Services eingef&uuml;gt
werden mu&szlig;. Die Infrastruktur aber ist vorhanden und getestet:
</p>

<pre style="background='silver';">
&lt;%@ WebService Language="C#" Class="LoginSample" %&gt;
using System;
using System.Web.Services;

public class LoginSample : WebService
{
  [ WebMethod(EnableSession=true) ]
  public bool Login(string Username, string Password) 
  { 
    // replace with database code to your liking
    if ("user" == Username &amp;&amp; "pwd" == Password)
    {
      Session["LoggedIn"] = true;
      return true;
    }
    else
    {
      Session["LoggedIn"] = false;
    }
    return false;
  }

  [ WebMethod(EnableSession=true) ]
  public bool IsUserLoggedIn()
  {
    object loggedIn = Session["LoggedIn"];
    if (null != loggedIn) return (bool)loggedIn;
    return false;
  }
}
</pre>

<p>
Wer den oben gezeigten Code &uuml;brigens nicht jedes Mal eintippen oder kopieren will - er ist als C#
und VB.NET Template in <a href="http://www.icsharpcode.net/opensource/sd/" target="_blank">SharpDevelop</a> mit dabei:
</p>

<IMG SRC="Bilder/200106/20010627_2.png" width="602" height="597" alt="" border="0">

<h2>Schlu&szlig;bemerkung</h2>
<p>
Session State kann in Intranetanwendungen sehr wohl praktikabel sein, da man ja out-of-process Session
Stores verwenden kann. F&uuml;r den Web Service, den man Kunden aus aller Welt und auf allen Plattformen 
anbieten m&ouml;chte, sollte man aber zu anderen Methoden greifen, um Logins (oder State generell) zu managen.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010627.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20010208.htm">Web Projekte mit SharpDevelop erstellen</a><br>
<a href="20010621.htm">Web Services 101 in ASP.NET</a><br>
<a href="20010622.htm">Web Services in Anwendungen konsumieren</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Edotnetgerman%2Ecom%2F">DotNetGerman Diskussionslisten</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Eicsharpcode%2Enet%2Fopensource%2Fsd%2F">SharpDevelop</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010627" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Session State in ASP.NET Web Services"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010627.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christoph Wille"><input type="hidden" name="AuthorEmail" value="christophw@alphasierrapapa.com"><input type="hidden" name="Artikel" value="20010627"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010627.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
