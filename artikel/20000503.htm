<HTML>
<HEAD>
<TITLE>Einfache String Operationen</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Operationen mit Textvariablen, die Strings enthalten, gibt es viele. Wenn man die Wichtigsten kennt, so kann man sich das Leben als ASP-Programmierer ganz 
erheblich erleichtern.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,UCase,LCase,Mid,Left,Right,Instr,InstrRev,Ampersand,vbCrLf,vbTab,Trim,LTrim,RTrim,String,Zeichenkette,ASP,VBScript,Active Server Pages,Len">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Einfache String Operationen</H1>
<p>
Geschrieben von: <a href="../autoren/christiankoller.htm">Christian Koller</a><br>
Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20000503"></SCRIPT>
</p>
<p>
Operationen mit Textvariablen, die Strings (engl. f&uuml;r Zeichenketten) enthalten, gibt es viele.
Wenn man die Wichtigsten kennt, so kann man sich das Leben als ASP-Programmierer ganz 
erheblich erleichtern.
Hat man zum Beispiel einen physikalischen Pfad zu einer Datei, 
wie <I>C:\Inetpub\wwwroot\images\logo.jpg</I>, so kann man den Pfad zum Verzeichnis, 
in dem die Datei liegt, durch String-Operationen mit den VBScript Funktion <I>InstrRev</I> 
und <I>Left</I> leicht herausfinden.
Auch f&uuml;r die Validierung von HTML-Formularen leisten String-Funktionen hervorragende Dienste.
</p>

<P>In VBScript kann ein String theoretisch bis zu 2 Millionen Zeichen lang sein.</P>

<H3>Anf&uuml;hrungszeichen in Strings</H3>

<P>Ein String wird in VBScript durch Anf&uuml;hrungszeichen begrenzt:</P>

<pre style="background='silver';">
strErgebnis = "Dies ist ein Text"

<U>Ergebnis</U>: Dies ist ein Text</pre>

<P>Um einen String zum Browser zu schreiben, benutzt man in ASP den Befehl
<I>Response.Write</I>:</P>

<pre style="background='silver';">
Response.Write "Dies ist ein Text&lt;BR&gt;in zwei Zeilen."
Response.Write "Weiterer Text..."

<U>Ergebnis im Browser</U>:
Dies ist ein Text
in zwei Zeilen.Weiterer Text...</pre>

<P>Ein <I>Response.Write</I> allein bewirkt keine Zeilenschaltung, sondern schreibt 
einfach den Text als HTML-Code zum Browser. Will man nun HTML Tags zum Browser schicken,
so f&uuml;gt man diese einfach in den String ein:</P>

<pre style="background='silver';">
Response.Write "Dies ist &lt;B&gt;&lt;I&gt;formatierter Text&lt;/I&gt;&lt;/B&gt;.&lt;BR&gt;"

<U>Ergebnis im Browser</U>:
Dies ist ein <B><I>formatierter Text</I></B>.</pre>

<P>Will man in einem String ein Anf&uuml;hrungzeichen benutzen, so muss
man das Anf&uuml;hrungszeichen im String verdoppeln, damit in der
Textvariable ein Anf&uuml;hrungzeichen gespeichert wird:</P>

<pre style="background='silver';">
Response.Write "Dies sind sogenannte ""Anf&uuml;hrungzeichen""!&lt;BR&gt;"
strRed = "Eine &lt;FONT COLOR=""Red""&gt;rote Schrift&lt;/FONT&gt;!"
Response.Write strRed

<U>Ergebnis im Browser</U>:
Dies sind sogenannte "Anf&uuml;hrungzeichen"!
Eine <FONT COLOR="Red">rote Schrift</FONT>!</pre>

<P>Wenn ein Anf&uuml;hrungzeichen an das Ende oder den Anfang einer Zeichenkette
gestellt wird, so ergeben sich dadurch 3 Anf&uuml;hrungzeichen nebeneinander:</P>

<pre style="background='silver';">
strAnfZeich = "Anf&uuml;hrungzeichen"
strErgebnis = "Und schon wieder """ & strAnfZeich & """..."

<U>Ergebnis</U>: Und schon wieder "Anf&uuml;hrungzeichen"...</pre>

<H3>Text Operatoren</H3>

<UL>
	<LI><I><B>&amp;</B></I></LI> : Verkn&uuml;pfungs-Operator, der zwei Strings zusammenf&uuml;gt
	<LI><I><B>+</B></I></LI> : Der <I>+</I> Operator kann benutzt werden, um zwei Strings zu verbinden, 
	allerdings sollte man aus Sicherheitsgr&uuml;nden daf&uuml;r immer den <I>&amp;</I> Operator verwenden.
	Wenn einer der Operanden kein String ist, so bewirkt der <I>+</I> Operator eine numerische Addition.
</UL>

<P>Der Verkn&uuml;pfungsoperator (<I>&amp;</I>) wird wie folgt benutzt:</P>

<pre style="background='silver';">
strErgebnis = strA &amp; strB
strErgebnis = "Ein Text," &amp; " und noch ein Text"</pre>

<P>Um nun in einem String auf einfache Weise eine Zeilenschaltung oder eine
Tabulatorschaltung einzuf&uuml;gen, benutzt man sogenannte String-Konstanten.</P>

<H3>Wichtige String-Konstanten in VBScript</H3>

<UL>
	<LI><I><B>vbCrLf</B></I></LI> : Zeilenschaltung, Chr(13) &amp; Chr(10)
	<LI><I><B>vbCr</B></I></LI> : Zum Anfang der Zeile, Chr(13)
	<LI><I><B>vbLf</B></I></LI> : Zeilenvorschub, Chr(10)
	<LI><I><B>vbTab</B></I></LI> : Hoizontale Tabulatorschaltung, Chr(9)
	<LI><I><B>vbNewLine</B></I></LI> : Platformspezifische Zeilenschaltung, entweder <I>vbLf </I>oder <I>vbCrLf</I>
</UL>

<P>Um Beispielsweise einen String mit 2 Zeilenschaltungen zu erzeugen, kann man einen 
VBScript Befehl wie folgt benutzen:</P>

<pre style="background='silver';">
strErgebnis = "Eine Zeile" &amp; vbCrLf &amp; "zweite Zeile" &amp; _
	vbCrLf &amp; "letzte Zeile"

<U>Ergebnis</U>: 
Eine Zeile
zweite Zeile
letzte Zeile</pre>

<P><U>Anmerkung</U>: Wie Sie sicherlich wissen, benutzt man den &lt;BR&gt; Tag in HTML um 
eine Zeilenschaltung im Browser zu erreichen. 
Wenn Sie einen String an den Browser schicken, der ein <I>vbCrLf</I> enth&auml;lt, 
so bewirkt dies nur eine Zeilenschaltung im Sourcecode, aber nicht im dargestellten Text.</P>

<H2>Einfache String Funktionen</H2>

<H3><I>Trim</I>, <I>LTrim</I> und <I>RTrim</I></H3>

<P>Um in einem String alle Leerzeichen am Anfang oder am Ende des Strings zu entfernen
benutzt man die VBScript Funktionen <I>Trim</I>, <I>LTrim</I> und <I>RTrim</I>.
Dies ist zum Beispiel n&uuml;tzlich um Ergebnisse aus HTML-Formularen zu formatieren,
da ein User aus Versehen Leerzeichen vor oder nach einer Eingabe eingetippt haben k&ouml;nnte.</P>

<P>Wenn man einen String in einer Datenbank speichert, so wird man f&uuml;r 
gew&ouml;hnlich auch alle Leerzeichen rechts und links des eigentlichen Wertes entfernen.</P>

<P>Die Funktion <I>Trim</I> entfernt die Leerzeichen links und rechts des eigentlichen Wertes:</P>

<pre style="background='silver';">
strText = "   Ein Text    "
Response.Write "*" & Trim(strText) & "*"

<U>Ergebnis im Browser</U>: *Ein Text*</pre>

<P>Hingegen entfernen die Funktionen <I>LTrim</I> und <I>RTrim</I> nur die Leerzeichen links 
(<I>LTrim</I>) beziehungsweise rechts (<I>RTrim</I>) der eigentlichen Zeichenkette:</P>

<pre style="background='silver';">
strText = "   Ein Text    "
Response.Write "LTrim: *" & LTrim(strText) & "*&lt;BR&gt;"
Response.Write "RTrim: *" & RTrim(strText) & "*"

<U>Ergebnis im Browser</U>:
LTrim: *Ein Text    *
RTrim: *   Ein Text*</pre>

<H3><I>Len</I> Funktion</H3>

<P>Wenn man wissen m&ouml;chte, wie viele Zeichen in einem String vorhanden sind, so benutzt man 
die VBScript Funktion <I>Len</I>.</P>

<pre style="background='silver';">
strText = "Eine lange Zeichenkette"
Response.Write "Anzahl Zeichen in strText = " & Len(strText)

<U>Ergebnis im Browser</U>:
Anzahl Zeichen in strText = 23</pre>

<P><U>Anmerkung</U>: Ein <I>vbCrLf</I> z&auml;hlt als zwei Zeichen, da es ja aus 
<I>Chr(10)</I> und <I>Chr(13)</I> besteht.</P>

<H3><I>Left</I>, <I>Right</I> und <I>Mid</I></H3>

<P>Wenn man nur einen Teil einer Zeichenkette ben&ouml;tigt, so benutzt man die
Funktionen <I>Left</I>, <I>Right</I> und <I>Mid</I>, um den gew&uuml;nschten Teil der 
Zeichenkette zu erhalten.</P>

<P>Die Funktion <I>Left</I> liefert den linken Teil einer Zeichenkette, ihr Syntax ist wie folgt:</P>

<pre style="background='silver';">
<U>Syntax</U>:
<I>String</I> = <B>Left</B>(<I>String</I>,<I>L&auml;nge</I>)

<U>Beispiel</U>:
strLinks = Left("Dies ist ein Text!", 6)
Response.Write strLinks

<U>Ergebnis</U>: 
Dies i</pre>

<P>Im Unterschied zu <I>Left</I> gibt die Funktion <I>Right</I> den rechten Teil einer
Zeichenkette zur&uuml;ck:</P>

<pre style="background='silver';">
<U>Syntax</U>:
<I>String</I> = <B>Right</B>(<I>String</I>,<I>L&auml;nge</I>)

<U>Beispiel</U>:
strRechts = Right("Dies ist ein Text!", 7)
Response.Write strRechts

<U>Ergebnis</U>: 
n Text!</pre>

<P>Die Funktion <I>Mid</I> dient dazu, um eine Zeichenkette zu bekommen,
die mit einer bestimmten L&auml;nge an einer definierten Stelle des Strings liegt.</P>

<pre style="background='silver';">
<U>Syntax</U>:
<I>String</I> = <B>Mid</B>(<I>String</I>,<I>Start</I>,<I>L&auml;nge</I>)
oder
<I>String</I> = <B>Mid</B>(<I>String</I>,<I>Start</I>)

<U>Beispiel</U>:
strText = "Ein Beispieltext"
Response.Write Mid(strText, 5) &amp; "&lt;BR&gt;"
Response.Write Mid(strText, 5, 3)

<U>Ergebnis</U>: 
Beispiel
Bei</pre>

<P>Die Funktion <I>Mid</I> liefert als eine Zeichenkette einer definierten L&auml;nge, 
die an der Startposition des Strings liegt. Wenn man keine L&auml;nge angibt, so
wird der gesamte String ab der Startposition bis zum Ende von der <I>Mid</I> Funktion 
zur&uuml;ckgegeben.</P>

<H3><I>UCase</I> und <I>LCase</I></H3>

<P>Die Funktionen <I>UCase</I> und <I>LCase</I> stehen f&uuml;r engl. "Uppercase" und "Lowercase", 
also f&uuml;r Gro&szlig;schreibung und Kleinschreibung. <I>UCase</I> verwandelt einen String in 
lauter Gro&szlig;buchstaben, w&auml;hrend <I>LCase</I> lauter Kleinbuchstaben zur&uuml;ck liefert:</P>

<pre style="background='silver';">
strText = "Ein Beispieltext"
Response.Write UCase(strText) &amp; "&lt;BR&gt;"
Response.Write LCase(strText)

<U>Ergebnis</U>: 
EIN BEISPIELTEXT
ein beispieltext</pre>

<P>Die Funktionen <I>LCase</I> und <I>UCase</I> werden unter anderem daf&uuml;r benutzt,
um einen String mit einem anderen vergleichen zu k&ouml;nen ohne auf
Gro&szlig;- oder Kleinschreibung R&uuml;cksicht zu nehmen. Dies kann
einiges an Programmierarbeit sparen helfen, wie das folgende Beispiel zeigt:</P>

<pre style="background='silver';">
<U>Urspr&uuml;nglicher Vergleich</U>:
If strRet = "Ja" Or strRet = "ja" Or strRet = "JA" Then
	Response.Write "Sie haben sich f&uuml;r ""JA"" entschieden!"
ElseIf strRet = "Nein" Or strRet = "nein" Or strRet = "NEIN" Then
	Response.Write "Sie haben sich f&uuml;r ""NEIN"" entschieden!"
Else
	Response.Write "Sie haben sich nicht entschieden!"
End If

<U>Vergleich mit UCase modifiziert</U>:
If UCase(strRet) = "JA" Then
	Response.Write "Sie haben sich f&uuml;r ""JA"" entschieden!"
ElseIf UCase(strRet) = "NEIN" Then
	Response.Write "Sie haben sich f&uuml;r ""NEIN"" entschieden!"
Else
	Response.Write "Sie haben sich nicht entschieden!"
End If</pre>

<H3><I>InStr</I> und <I>InStrRev</I></H3>

<P>Die Funktionen <I>InStr</I> und <I>InStrRev</I> dienen dazu,
um die Position einer Zeichenkette in einer anderen Zeichenkette ausfindig zu machen.
Wenn man zum Beispiel wissen m&ouml;chte, an welcher Position das erste mal das Wort
"<I>klein</I>" im String "<I>Ein kleines Beispiel</I>" auftaucht, so benutzt man die 
Funktion <I>InStr</I>:</P>

<pre style="background='silver';">
<U>Syntax</U>:
<I>Postition_ab_Startposition</I> = <B>InStr</B>(<I>Start</I>, <I>String1</I>, <I>String2</I>)
<I>Postition</I> = <B>InStr</B>(<I>String1</I>, <I>String2</I>)

<U>Beispiel</U>:
strText = "Ein kleines Beispiel"
intPos = InStr(strText,"klein")
Response.Write "Das Wort ""klein"" ist an Position "
Response.Write intPos &amp; " des Strings """ &amp; strText &amp; """."

<U>Ergebnis</U>: 
Das Wort "klein" ist an Position 5 des Strings "Ein kleines Beispiel".</pre>

<P>Wenn die Function <I>InStr</I> den gesuchten String nicht in der Zeichenkette findet, 
so ist ihr Ergebnis der Wert <I>0</I>.</p>

<P><I>InStrRev</I> gibt die Position des letzen Strings in einem anderen String zur&uuml;ck.</P>

<pre style="background='silver';">
<U>Syntax</U>:
<I>Postition_ab_Startposition</I> = <B>InStrRev</B>(<I>String1</I>, <I>String2</I>, <I>Start</I>)
<I>Postition</I> = <B>InStrRev</B>(<I>String1</I>, <I>String2</I>)

<U>Beispiel</U>:
strText = "Ein kleines Beispiel"
intPosRev = InStrRev(strText,"ein")
Response.Write "Das Wort ""ein"" ist an Position "
Response.Write intPosRev &amp; " des Strings """ &amp; strText &amp; """."

<U>Ergebnis</U>: 
Das Wort "ein" ist an Position 7 des Strings "Ein kleines Beispiel".</pre>

<H3>Anwendungsbeispiel</H3>

<P>Zum Schluss dieses Artikels m&ouml;chte ich auf das Beispiel zur&uuml;ck kommen,
das ich am Anfang erw&auml;hnt habe.</P>

<P>Um den Pfad zum Verzeichnis, in dem die Datei <I>C:\Inetpub\wwwroot\images\logo.jpg</I> liegt,
herauszufinden, kann man die Funktion <I>InstrRev</I> und <I>Left</I> benutzen:</P>

<pre style="background='silver';">
strDateiPfad = "C:\Inetpub\wwwroot\images\logo.jpg"
intPos = InStrRev(strDateiPfad,"\")
strOrdner = Left(strDateiPfad, intPos)
strDatei = Mid(strDateiPfad, intPos+1)
Response.Write "Ordner = " &amp; strOrdner &amp; "&lt;BR&gt;" &amp; vbCrLf
Response.Write "Dateiname = " &amp; strDatei &amp; "&lt;BR&gt;" &amp; vbCrLf

<U>Ergebnis</U>:
Ordner = C:\Inetpub\wwwroot\images\
Dateiname = logo.jpg</pre>

<h2>Schlu&szlig;bemerkung</h2>

<P>
Dieser Artikel hat Ihnen hoffentlich einen &Uuml;berblick &uuml;ber die grunds&auml;tzliche Arbeit mit Strings verschafft.
Komplexere String-Operationen und Funktionen werden in weiteren Artikeln vorgestellt und mit Beispielen diskutiert.
</P>
<h2>Download des Codes</h2>
<p><a href="../Code/20000503.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20001003.htm">Einf&uuml;hrung in Stringoperationen</a><br>
<a href="20010209.htm">Erstellung eines Newstickers in ASP - Teil 2</a><br>
<a href="20010404.htm">Sonderzeichen f&uuml;r Forms decodieren</a><br>
<a href="20011112.htm">Strukturierter Aufbau in der ASP-Programmierung</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20000503" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Einfache String Operationen"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20000503.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christian Koller"><input type="hidden" name="AuthorEmail" value="christiank@aspexpert.com"><input type="hidden" name="Artikel" value="20000503"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20000503.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
