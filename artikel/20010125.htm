<HTML>
<HEAD>
<TITLE>Remote Scripting (I)</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="In diesem Artikel zeigt der Autor wie man serverseitige ASP-Funktionen innerhalb einer ausgelagerten ASP Seite vom Client aus ausf&uuml;hren, und die R&uuml;ckgabewerte ohne erneutes Laden der Seite clientseitig per JavaScript benutzen kann.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Remote Scripting,JavaScript,Jscript,Java,rsproxy.class,rs.asp,RSDispatch,exposed methods,Remote,VBScript,Callback">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Remote Scripting (I)</H1>
<p>
Geschrieben von: <a href="../autoren/christianstrauch.htm">Christian Strauch</a><br>
Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010125"></SCRIPT>
</p>
<p>
&quot;ASP ist eine Technologie, die es dem Webseitenentwickler erlaubt, seine Werke so aktiv wie m&ouml;glich 
bei h&ouml;chstm&ouml;glicher Skalierbarkeit und Performance zu halten.&quot;
</p>

<p>
Das ist eine von vielen m&ouml;glichen Definitionen f&uuml;r Active Server Pages, die ein Freund derselben kurz
mit dem Kopf nickend akzeptieren k&ouml;nnte, soferne er sich intensiver mit dem Kontext als mit diesem 
Satz besch&auml;ftigt. Steht die Aussage - so wie hier - alleine, kann sie einem erfahrenen Entwickler 
schon Bauchschmerzen bereiten. Der angesprochene erfahrene Entwickler wei&szlig; um die Probleme, die 
schon - auf unterer Schicht - das HTTP-Protokoll mit sich bringt und mit denen sich, als logische 
Konsequenz, jeder Webserver und mit ihm der Entwickler besch&auml;ftigen mu&szlig;.
</p>

<p>
Eines der Hauptprobleme entsteht bei der &Uuml;bermittlung von Client-seitig eingegebenen oder ausgel&ouml;sten 
Daten an den Server, bzw. an die ASP Seite, die dort liegt. Umgekehrt tritt eine Variante des 
Problems auf, sobald auf dem Server neue Daten entstehen, w&auml;hrend der Benutzer sich die &quot;alten&quot; 
Daten einer ASP Seite oder gar eine statisch generierte HTML-Seite ansieht.
</p>

<h2>Die L&uuml;cke zwischen Client und Server</h2>
<p>
Auf einer Webseite soll in einem Textfeld angezeigt werden, wie viele andere Benutzer sich gerade auf der aktuellen Seite befinden.
</p>
<p>
&Uuml;ber ASP gibt es folgende M&ouml;glichkeit, an die Problemstellung heranzugehen (1.asp):
</p>

<pre style="background='silver';">
&lt;%@ LANGUAGE=VBScript %&gt;
&lt;% Option Explicit %&gt;
&lt;% 
Application(&quot;AnzahlNutzerAufSeite&quot;) = Application(&quot;AnzahlNutzerAufSeite&quot;) + 1 
%&gt;
&lt;html&gt;
&lt;body&gt;
&lt;input type=&quot;text&quot; value=&quot;&lt;% = Application(&quot;AnzahlNutzerAufSeite&quot;) %&gt;&quot;&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
Nat&uuml;rlich kann das keine L&ouml;sung sein: Der Z&auml;hler f&uuml;r die Anzahl der Benutzer auf der Seite 
wird nur erh&ouml;ht, aber nicht verringert. 
</p>

<p>
Was aber viel interessanter ist - w&auml;hrend sich ein Benutzer auf der Seite befindet, kann der 
Z&auml;hler selbstverst&auml;ndlich nicht aktualisiert werden - er wird nur beim Aufbauen der Seite 
eingetragen. Letzteres ist nicht ohne Performance-problematische und als provisorisch 
einzustufende Umwege l&ouml;sbar, da das HTTP-Protokoll nur daf&uuml;r vorgesehen ist, simple Inhalte 
vom Client anfordern zu lassen oder zum Client zu &uuml;bermitteln. Ist der &Uuml;bermittlungsvorgang des 
Seitenquelltextes abgeschlossen, wird die HTTP-Verbindung beendet und l&auml;&szlig;t keine weiteren 
Informationen zu der angeforderten Seite mehr zu.
</p>

<p>
Genau diese L&uuml;cke wird durch eine interessante Microsoft-Technologie &uuml;berbr&uuml;ckt: Remote Scripting.
</p>


<h2>Pseudo-States</h2>
<p>
Ich hatte gerade eben angesprochen, da&szlig; HTTP-Verbindungen nach der Anforderung und dem Erhalt 
von Informationen sofort beendet werden. Da mit dieser Tatsache der momentane &quot;Zustand&quot; des 
Benutzers auf der Seite nicht &uuml;bermittelt werden kann, wird das HTTP-Protokoll &quot;stateless&quot; genannt.
Mit Remote Scripting ist es m&ouml;glich, einen sogenannten &quot;Pseudo-State&quot; einzuf&uuml;hren, indem zwar 
die HTTP-Verbindung nicht offen bleibt, Daten aber trotzdem vom Client zum Server und zur&uuml;ck 
&uuml;bermittelt werden k&ouml;nnen, ohne eine neue Seite anzeigen zu m&uuml;ssen.
</p>

<p>
Mit Remote Scripting ist es m&ouml;glich, serverseitige ASP-Funktionen innerhalb einer ausgelagerten 
ASP Seite vom Client aus auszuf&uuml;hren, und die R&uuml;ckgabewerte ohne erneutes Laden der Seite 
clientseitig per JavaScript zu benutzen. Remote Scripting verwendet daf&uuml;r drei Komponenten, die 
als drei verschiedene Dateien vorliegen: 
</p>


<ul>
	<li>RS.ASP
	<li>RS.HTM
	<li>rsproxy.class
</ul>


<p>
Das Herzst&uuml;ck der Remote Scripting-Technologie ist das Java-Applet <i>rsproxy.class</i>. 
Dieses Java-Applet mu&szlig; weder vom Anwender noch vom Programmierer direkt angesprochen werden, 
denn sowohl den Code zur Benutzung als auch zur Instanzierung des Applets liefert die Datei 
<i>RS.HTM</i>. Sie wird Client-seitig durch das src-Attribut des HTML-script-Tags eingebunden.
</p>

<p><IMG SRC="Bilder/200101/20010125.png" width="440" height="104" alt="" border="0"></p>

<p>
In der RS.ASP, an der keine weiteren Ver&auml;nderungen vorgenommen werden m&uuml;ssen, befinden sich 
die n&ouml;tigen Funktionen, die direkte Prozeduraufrufe in der selbst erstellten ASP erm&ouml;glichen. 
Dabei werden Prozedurname, Parameter, etc. &uuml;ber die Request.QueryString-Collection &uuml;bergeben 
und dort ausgelesen. Ein kleiner Hinweis: alle Funktionen in RS.ASP sind in JScript programmiert.
</p>

<p>
Um auf die erw&uuml;nschte Funktionsbibliothek zugreifen zu k&ouml;nnen, m&uuml;ssen daher alle zur Verf&uuml;gung 
gestellten Funktionen &quot;exposed&quot; werden. Der Entwickler mu&szlig; eine sogenannte &quot;public description&quot;
erstellen. Im Code sieht das so aus (2.ASP):
</p>

<pre style="background='silver';">
&lt;%@ LANGUAGE=VBScript %&gt;
&lt;% Option Explicit %&gt;
&lt;!--#INCLUDE FILE=&quot;_ScriptLibrary/RS.ASP&quot;--&gt;

&lt;SCRIPT LANGUAGE=Jscript RUNAT=SERVER>
RSDispatch();

function MeineServerMethoden() 
{
    this.MeineFunktion = return MyFunction();
    // oder f&uuml;r VBScript-Funktionen:
    this.MeineVBFunktion = Function(&quot;return MyVBFunction&quot;);
}
var public_description = new MeineServerMethoden();

function MyFunction() 
{
    return &quot;Der R&uuml;ckgabewert meiner Jscript-Funktion&quot;;
}
&lt;/SCRIPT&gt;

&lt;%
    Function MyVBFunction()
        MyVBFunction = &quot;Der R&uuml;ckgabewert meiner &quot; &amp; _
                    &quot;VBScript-Funktion&quot;;
    End Function
%&gt;
</pre>

<p>
Der Aufruf von <i>RSDispatch()</i> initialisiert hierbei die &Uuml;bergabe der aufzurufenden Methode und aller 
Parameter.
</p>

<p>
Das Verfahren der <i>exposed methods</i> ist hier durch die Instanzierung der selbstgeschriebenen Funktion 
MeineServerMethoden() als Objekt ersichtlich. Dadurch k&ouml;nnen die dem Client zur Verf&uuml;gung gestellten 
Funktionen &uuml;ber JScript angesprochen werden.
</p>

<p>
Es stellt sich die Frage, warum Microsoft hierbei auf JScript und nicht auf VBScript zur&uuml;ckgreift. 
Eine der m&ouml;glichen Antworten ist sicherlich, dass es in VBScript keine M&ouml;glichkeit gibt, einen 
String als Anweisung auszuwerten. Wird der oben skizzierten ASP nun als QueryString der 
Methodenname der aufzurufenden Funktion &uuml;bergeben, so geschieht das als String - die aufgerufene 
ASP mu&szlig; diesen String so konvertieren, dass er einer exponierten Methode zugeordnet werden kann.
Bei einer begrenzten Anzahl an zur Verf&uuml;gung gestellten Methoden wird das &uuml;blicherweise mit 
einer Select Case-Anweisung gel&ouml;st, was hier wegen dem Anspruch an Allgemeing&uuml;ltigkeit der 
RS.ASP nicht m&ouml;glich ist. JScript stellt hier die Funktion eval() zur Verf&uuml;gung, die die 
beschriebene Konvertierung vornimmt. Sie erzeugt einen Verweis zu der durch den String 
dargestellten Funktion. Die eval()-Funktion in VBScript wertet hingegen nur mathematische 
Ausdr&uuml;cke aus.
</p>

<p>
Einer der Hauptgr&uuml;nde ist aber sicherlich, da&szlig; zum Zeitpunkt des Erscheinens von Remote 
Scripting in VBScript noch keine Erstellung von Klassen m&ouml;glich war, was mittlerweile aber 
behoben ist.
</p>

<p>
Mit der obigen ASP Seite haben wir den Server vorbereitet, Remote Scripting-Aufrufe zu empfangen. 
Wir wollen die Server-Funktionen allerdings clientseitig per JavaScript aufrufen - es ist also 
noch etwas Arbeit am Client erforderlich.
</p>

<p>
Die folgende HTML-Datei skizziert den Aufbau eines beispielhaften Remote Scripting-Callers (3.HTM).
</p>

<pre style="background='silver';">
&lt;html&gt;
   &lt;head&gt;
        &lt;script
               language=JavaScript
               src=_ScriptLibrary/RS.HTM&gt;
        &lt;/script&gt;
        &lt;script
             language=JavaScript&gt;
             RSEnableRemoteScripting(&quot;_ScriptLibrary&quot;);
        &lt;/script&gt;
   &lt;/head&gt;

    &lt;body&gt;
        &lt;p&gt;Das hier kam vom Server:&lt;/p&gt;
        &lt;script
            language=JavaScript&gt;
            document.open();
            var RSObject =
                RSExecute('4.ASP','MeineFunktion');
            document.write(RSObject.return_value);
            document.close();
        &lt;/script&gt;
	
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
Wie hieraus ersichtlich wird, ist es mit diesem Konstrukt schon m&ouml;glich, Werte auf dem Server 
zu erzeugen und ohne erneutes Laden der Seite im Browser darzustellen. Ohne weitere 
Schwierigkeiten kann jetzt ein Pseudo-State eingef&uuml;hrt werden.
</p>

<p>
Als Beispiel wollen wir die Verweildauer eines Benutzers auf einer Seite in das Session-Objekt 
schreiben. Auf dem Server ist das relativ unspektakul&auml;r (4.ASP):
</p>

<pre style="background='silver';">
&lt;%@ LANGUAGE=VBScript %&gt;
&lt;!--#INCLUDE FILE=_ScriptLibrary/RS.ASP--
&lt;SCRIPT LANGUAGE=Jscript RUNAT=SERVER&gt;
RSDispatch();
function MyServerMethods() 
{
    this.setUserOnTime =
       Function(
       &quot;return SetUserOnTime();&quot;);
}
var public_description = new MyServerMethods();
&lt;/SCRIPT&gt;
&lt;%
    Function SetUserOnTime()
    Session(&quot;UserOnTime&quot;) = Session(&quot;UserOnTime&quot;) + 1
    End Function
%&gt;
</pre>

<p>
Hier wird die VBScript-Funktion SetUserOnTime exponiert. 
Der eigentliche Vorgang des Aktualisierens der Verweildauer geschieht im VBScript-Bereich.
</p>

<p>
Beim Client ist ein kleiner Kniff notwendig, um den User nicht mit Wartezeiten zu 
bel&auml;stigen (5.HTM).
</p>

<pre style="background='silver';">
&lt;html&gt;
    &lt;head&gt;
        &lt;script
            language=JavaScript
            src=_ScriptLibrary/RS.HTM&gt;
        &lt;/script&gt;
        &lt;script language=JavaScript&gt;
            RSEnableRemoteScripting();

            window.setTimeout(1000,&quot;SetUserOnTime();&quot;);

            function SetUserOnTime()
            {
                RSExecute(
                    &quot;OnTime.ASP&quot;,
                    &quot;SetUserOnTime&quot;,
                    SetUserOnTimeCallBack();
                );
            }
            function SetUserOnTimeCallBack() 
            {
              // nichts tun..
            }
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt;Bitte warten Sie hier ein bi&szlig;chen...&lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
Wir rufen hier mit Hilfe eines JavaScript-Intervalls die Funktion SetUserOnTime() (dieses Mal 
clientseitig) einmal pro Sekunde auf. Dabei fragen wir jetzt allerdings keine R&uuml;ckgabewerte ab 
- nicht nur deswegen, weil unsere serverseitige Methode keine R&uuml;ckgabewerte hat, sondern vor 
allem deswegen, weil wir mit der Funktion SetUserOnTimeCallBack() eine sogenannte 
CallBack-Funktion definiert haben. 
</p>

<p>
Das Processing beim Client wartet also nicht, bis unsere Server-Methode ausgef&uuml;hrt wurde, 
sondern schickt den Request zum Server und ruft erst nach Vervollst&auml;ndigung des Prozesses eine 
andere Client-Funktion auf. Das ist in diesem Falle ein Workaround - Remote Scripting erkennt 
einen Aufruf, bei dem eine CallBack-Funktion definiert wurde, als asynchronen Remote 
Scripting-Call an und l&auml;sst damit den Client w&auml;hrend der Ausf&uuml;hrung andere Dinge tun.
</p>

<p>
Beim User sieht das Ganze nach einer recht statischen Seite aus - vor allem weil es hier m&ouml;glich 
ist, Standard-HTML-Format zu verwenden. Man braucht durch die simplen JavaScript-Calls 
keinerlei serverseitige Technologie (au&szlig;er eben die ASP, in der die Server-Methoden exponiert sind).
</p>

<p>
Wir rufen hier mit Hilfe eines JavaScript-Intervalls die Funktion SetUserOnTime() (dieses Mal 
clientseitig) einmal pro Sekunde auf. Dabei fragen wir jetzt allerdings keine R&uuml;ckgabewerte ab 
- nicht nur deswegen, weil unsere serverseitige Methode keine R&uuml;ckgabewerte hat, sondern vor 
allem deswegen, weil wir mit der Funktion SetUserOnTimeCallBack() eine sogenannte CallBack-Funktion 
definiert haben. 
</p>

<p>
Das Processing beim Client wartet also nicht, bis unsere Server-Methode ausgef&uuml;hrt wurde, 
sondern schickt den Request zum Server und ruft erst nach Vervollst&auml;ndigung des Prozesses eine 
andere Client-Funktion auf. Das ist in diesem Falle ein Workaround - Remote Scripting erkennt 
einen Aufruf, bei dem eine CallBack-Funktion definiert wurde, als asynchronen Remote 
Scripting-Call an und l&auml;sst damit den Client w&auml;hrend der Ausf&uuml;hrung andere Dinge tun.
</p>

<p>
Beim User sieht das Ganze nach einer recht statischen Seite aus - vor allem weil es hier m&ouml;glich 
ist, Standard-HTML-Format zu verwenden. Man braucht durch die simplen JavaScript-Calls keinerlei 
serverseitige Technologie (au&szlig;er eben die ASP, in der die Server-Methoden exponiert sind).
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Durch die Einf&uuml;hrung von States in Webanwendungen, die eigentlich per Definitionem stateless 
sind, ist es nun m&ouml;glich, typische Web-Problematiken, die in GUI-Anwendungen ohne weiteres 
l&ouml;sbar sind, auf elegante Art und Weise zu umgehen.
</p>

<p>
Lernen Sie in nachfolgenden Artikeln zu diesem Thema, wie Sie eine VB-Applikation mit 
Formularen und Steuerelementen via Remote Scripting ins Web portieren. Lernen Sie die Grenzen 
und Probleme der Remote Scripting-Technologie kennen und schaffen Sie durch das so erlernte 
Wissen Workarounds zu diesem Thema.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010125.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20010628.htm">Onlinestatus des Users &uuml;ber RemoteScripting ermitteln</a><br>
<a href="20010606.htm">RemoteScripting - Einf&uuml;hrung, Tips und Tricks</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fmsdn%2Emicrosoft%2Ecom%2Fscripting%2Fremotescripting%2Fdefault%2Ehtm">MSDN - Remote Scripting</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010125" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Remote Scripting (I)"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010125.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christian Strauch"><input type="hidden" name="AuthorEmail" value="christian@strauch.com"><input type="hidden" name="Artikel" value="20010125"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010125.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
