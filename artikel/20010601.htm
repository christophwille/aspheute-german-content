<HTML>
<HEAD>
<TITLE>Sicherheitsaspekte bei der Gestaltung von ASP Sites ohne Cookies</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Jeder, der sich mit der Erstellung komplexer ASP-Anwendungen besch&auml;ftigt, hat sich die Frage beantworten m&uuml;ssen, ob er denn nun Cookies einsetzt oder nicht.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Sicherheit,Aspekte der Sicherheit,Cookies,Cookiesicherheit,Querystring,URL,Sessionmanagement">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Sicherheitsaspekte bei der Gestaltung von ASP Sites ohne Cookies</H1>
<p>
Geschrieben von: <a href="../autoren/renedrescher-hackel.htm">Rene Drescher-Hackel</a><br>
Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010601"></SCRIPT>
</p>
<p>
Jeder, der sich mit der Erstellung komplexer ASP-Anwendungen besch&auml;ftigt, hat sich die Frage beantworten m&uuml;ssen, 
ob er denn nun Cookies einsetzt oder nicht. Denn h&auml;ufig besteht das Problem, wie sich die ASP-Anwendung 
z.B. den Anmeldestatus eines Besuchers der  Website merkt. Eine L&ouml;sung sind die Session-Variablen. Doch da 
w&auml;ren wir wieder beim (tempor&auml;ren) Cookie. 
</p>

<p>
Umgehen lie&szlig;e sich das Problem, wenn es eine M&ouml;glichkeit g&auml;be, den Besucher des Webangebotes an einem 
eindeutigen Kennzeichen zu identifizieren - und dieses Kennzeichen auch nicht zwischen den Seiten verloren geht.
Warum weit streifen, wenn das gute so nahe liegt: in der URL wird ein bestimmter - von der ASP-Anwendung 
festgelegter - Parameter von Seite zu Seite &uuml;bergeben.
</p>

<h2>Parameterwahl</h2>

<p>
Doch was eignet sich als (eindeutiger) Parameterwert?
</p>
<ul>
<li>Da w&auml;re die Zeit.</li>
</ul>


<p>
Dies ist nicht ganz unproblematisch, da innerhalb einer Sekunde mehr als ein Benutzer das Angebot zeitgleich aufrufen k&ouml;nnten.
</p>
<ul>
<li>Das Datum</li>
</ul>

<p>
Scheidet noch viel eher aus als die Zeit - aus offensichtlichen Gr&uuml;nden.
</p>
<ul>
<li>Eine Zufallszahl</li>
</ul>

<p>
Diese k&ouml;nnte sich wiederholen, beziehungsweise es k&ouml;nnte der Grenzwert irgendwann erreicht sein.
<li>Die IP des Benutzers</li>
</p>

<p>
Nicht ganz unkritisch, wenn man bedenkt, da&szlig; viele Surfer &uuml;ber Provider ins Netz gehen, die ihrerseits 
wiederum Proxies einsetzen. So k&ouml;nnte eine IP sich am Tag wiederholen, ohne da&szlig; es derselbe Benutzer ist.
</p>

<p>
F&uuml;r sich alleine ist keiner dieser Parameter geeignet, einen Benutzer eindeutig zu identifizieren. 
Hingegen eine Kombination aller hier vorgestellten Parameter ergibt jedoch eine derart lange Zeichenfolge, 
die wohl durchaus einmalig sein d&uuml;rfte.
</p>

<p>
Zur Sicherheit sollte man aber auch hier noch eine Duplikatspr&uuml;fung vornehmen, was ich auch empfehle. 
Es k&ouml;nnte ja sein, da&szlig; zur exakt selben Zeit ein Benutzer &uuml;ber den exakt gleichen Proxy eines 
Providers Seiten anfordert - und wir durch dummen Zufall die gleiche Zufallszahl generieren.
</p>

<p>
Wie erstellen wir nun diese ID, die dann in der URL von Seite zu Seite mit gegeben werden soll? Hier das 
entsprechende Code-Beispiel:
</p>

<pre style="background='silver';">
&lt;%
    RANDOMIZE(TIME())
    ' 1. Parameter - eine Zufallszahl bis 999.999.999
    z = Int(999999999 * RND + 1)
    ' 2. Parameter - eine Zahl aus der aktuellen Zeit erstellt
    t = Replace(TIME(),":","")
    ' 3. Parameter - eine Zahl aus dem aktuellen Datum erstellt
    d = Replace(DATE(),".","")
    ' 4. Parameter - eine Zahl aus der IP des Besuchers erstellt
    ip = Replace(Request.ServerVariables("REMOTE_ADDR"),".","")
    ' ID erzeugen
    tempID = z &amp; t &amp; d &amp; ip
%&gt;
</pre>

<p>
Der Zufallsgenerator wird &uuml;ber den Zeitwert (TIME()), immer wieder neu angesto&szlig;en. Aus den Werten der 
Zeit, des Datums und der IP des Benutzers wird mit der Replace-Anweisung die Punktierung entfernt.
</p>

<p>
Anschlie&szlig;end  werden alle Werte aneinander gef&uuml;gt 
</p>

<pre style="background='silver';">
&lt;%
tempID = z &amp; t &amp; d &amp; ip
%&gt;
</pre>

<p>
W&uuml;rde man statt des &amp; ein + verwenden, so w&uuml;rden alle Zahlenwerte zusammenaddiert werden, was das 
Risiko wieder mit sich br&auml;chte, da&szlig; die daraus resultierende Zahl nicht in jedem Fall eindeutig w&auml;re. 
Unter Verwendung der oben angesprochenen Fehlerpr&uuml;fung, w&auml;re dies aber machbar.
Eine solche <i>tempID</i> k&ouml;nnte dann folgenderma&szlig;en aussehen:
</p>

<pre style="background='silver';">
641262233163400200501192168120254
</pre>

<h2>Parameterwert speichern</h2>

<p>
Die ID h&auml;tten wir. Nun ist die Frage, wo wir diese abspeichern. Sessionvariablen kommen klarerweise nicht 
in Frage, somit bleibt uns nur eine Datenbank. 
</p>

<p>
F&uuml;r den heutigen Artikel verwende ich eine Access 2000 Datenbank, in der ich eine Tabelle namens 
<i>tblCount</i> erstellt habe.
</p>

<IMG SRC="Bilder/200106/20010601_1.png" width="538" height="177" alt="" border="0">

<p>
Um in der <i>INSERT</i>-Anweisung etwas Schreibarbeit zu sparen, habe ich f&uuml;r das Datum und die Zeit in den 
Eigenschaften einen Standardwert vorgegeben.
</p>

<IMG SRC="Bilder/200106/20010601_2.png" width="360" height="208" alt="" border="0">
<IMG SRC="Bilder/200106/20010601_3.png" width="360" height="208" alt="" border="0">

<p>
Nun kann man die generierte  ID auch schon eintragen:
</p>

<pre style="background='silver';">
&lt;%
    sql = "INSERT INTO tblCount(sessionid) VALUES(" &amp; tempID &amp; ");"
    call dbconnect()
    Conn.Execute(sql)
    call dbclose()
%&gt;
</pre>

<p>
Das Erstellen der Datenbankverbindung habe ich hier aus Gr&uuml;nden der besseren Handhabung in zwei Unterroutinen "verpackt".
</p>

<pre style="background='silver';">
&lt;%
Private Sub dbconnect()
' Datenbankverbindung aufbauen (mit Fehlerpr&uuml;fung)
    If IsObject("Conn") = FALSE Then	' Object erstellen
        Set Conn = Server.CreateObject("ADODB.Connection")
    Dim strConnStr	' Verbindungsinformation zur Datenbank(Connectin-String)
        strConnStr = "Provider=Microsoft.Jet.OLEDB.4.0;" &amp;_
                "Data Source=" &amp; Server.MapPath("db/aspproject.mdb")
        Conn.Open strConnStr
    End If
End Sub

Private Sub dbclose()
' Datenbankverbindung schlie&szlig;en und Instanzen zerst&ouml;ren (mit Fehlerpr&uuml;fung)
    If Conn.State = 1 Then	' Connection schlie&szlig;en
        Conn.Close 
        ' und Instanz zerst&ouml;ren
        Set Conn = Nothing
    End If
End Sub  
%&gt;
</pre>

<p>
Ist alles ordnungsgem&auml;&szlig; eingetragen, erh&auml;lt man folgenden Eintrag in der Datenbank.
</p>

<IMG SRC="Bilder/200106/20010601_4.png" width="555" height="151" alt="" border="0">

<p>
Gut, wir haben die ID generiert und gespeichert. Nun sollten wir anfangen, diese auch zu verwenden.
Unter Verwendung ist zu verstehen, da&szlig; die eben erzeugte ID auch allen Links "mitgegeben" wird.
</p>

<p>
Die &Uuml;bergabe bei allen Links erfolgt dann nach folgendem Muster:
</p>

<pre style="background='silver';">
&lt;a href="seite.asp?ID=&lt;%=ID%&gt;"&gt;Link&lt;/a&gt;
</pre>

<p>
Wie das ganze geschieht, m&ouml;chte ich an einem kleinen Beispiel - einer User-Anmeldung - 
verdeutlichen. Hierzu habe ich die Datei <b>anmeldung.asp</b>, die das Anmeldeformular enth&auml;lt und bei 
erfolgter Anmeldung den Anmeldestatus anzeigt, sowie die Datei <b>cookiefree.asp</b>, in der die Logik 
integriert ist. Damit die Funktionalit&auml;t der <b>cookiefree.asp</b> auch der <b>anmeldung.asp</b> zur 
Verf&uuml;gung steht, wird diese in die anmeldung.asp per <i>#INCLUDE</i>-Anweisung eingeschlossen.
</p>

<pre style="background='silver';">
&lt;!--#include file = "cookiefree.asp"--&gt;
</pre>

<p>
Innerhalb der cookiefree.asp wird als erstes immer gepr&uuml;ft, ob &uuml;ber den URL eine ID mitgegeben wurde.
Der entsprechende Code dazu sieht dann folgenderma&szlig;en aus:
<p>

<pre style="background='silver';">
&lt;%
' SeitenQuerEinstieg pr&uuml;fen
ID = Request.QueryString("ID")

If ID="" Then	' es wurde keine ID in der URL &uuml;bergeben -&gt; neue ID erzeugen
    ' ID erzeugen durch Function-Aufruf
        ID = ID_erzeugen()
        Response.Redirect "anmeldung.asp?ID=" &amp; ID
End If
%&gt;
</pre>

<p>
Zuerst wird die ID aus dem QueryString abgefragt. Ist keine &uuml;bergeben worden, dann wird diese erzeugt - 
wie oben beschrieben - und dann mit <i>Response.Redirect</i> an die <b>anmeldung.asp</b> &uuml;bergeben. 
(schlie&szlig;t man diese Funktionalit&auml;t auf allen Seiten ein, so empfiehlt sich immer ein <i>Response.Redirect</i>
auf die ASP-Startseite der Anwendung).
</p>

<p>
Wie erf&auml;hrt die ASP-Anwendung, da&szlig; der Benutzer der Seite auch tats&auml;chlich derjenige ist, der er vorgibt zu 
sein z.B. nach dem Absenden eines Anmeldeformulars?
</p>

<p>
Eine M&ouml;glichkeit: man f&uuml;gt in den URL einen weiteren Parameter ein, z.B. user = anton oder uid=1188 oder...usw.
</p>

<p>
Hier erkennt man jedoch schnell, da&szlig; unliebsame Zeitgenossen es nicht lassen werden, eine uid=1188 gegen 
uid=1187 oder uid=1189 auszutauschen. Das Ausspionieren von Kundendaten ist nicht gerade selten 
und potentiell gef&auml;hrlich. Und gerade aus diesem Grund sollten Anmeldeprozeduren innerhalb dynamischer 
Webanwendungen immer so gestaltet sein, da&szlig; eine Manipulation (weitgehend) ausgeschlossen werden kann. 
</p>

<p>
Im vorliegenden Beispiel wird im Anmeldeformular die e-Mail-Adresse und ein Passwort abgefragt. 
Die e-Mail-Adresse ist ebenfalls ein eindeutiger Wert, der sich somit immer als Benutzername eignet.  
Nach M&ouml;glichkeit sollte clientseitig die Eingabe &uuml;berpr&uuml;ft werden, das hei&szlig;t, ob &uuml;berhaupt ein Wert 
in den entsprechenden Feldern eingetragen wurde.
</p>

<p>
Dann ergibt sich folgender HTML-Code f&uuml;r das Anmeldeformular (anmeldung.asp):
</p>

<pre style="background='silver';">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;META NAME="GENERATOR" Content="Microsoft Visual Studio 6.0"&gt;
&lt;SCRIPT LANGUAGE=javascript&gt;
&lt;!--
// Diese Function pr&uuml;ft lediglich, ob ein Wert f&uuml;r 
// Benutzername und Kennwort eingegeben wurde.
// Sie ist ggf. an die eigenen Bed&uuml;rfnisse anzupassen.
function checkit()
{
if(document.anmeldung.benutzer.value=='')
    {
    alert("Sie m&uuml;ssen einen Benutzernamen eingeben!");
    document.anmeldung.benutzer.focus();
    return false;
    }
if(document.anmeldung.kennwort.value=='')
    {
    alert("Sie m&uuml;ssen einen Kennwort eingeben!");
    document.anmeldung.kennwort.focus();
    return false;
    }
else
    {
    document.anmeldung.submit();
    }
}
//--&gt;
&lt;/SCRIPT&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;FORM action="" method=POST id=anmeldung name=anmeldung&gt;
&lt;INPUT type="text" id=benutzer name=benutzer 
    value="&lt;%=benutzer%&gt;"&gt;
&lt;INPUT type="password" id=kennwort name=kennwort&gt;
&lt;INPUT type="button" value="anmelden" id=anmelden 
    name=anmelden onclick="JavaScript:checkit()"&gt;
&lt;/FORM&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</pre>

<p>
Nachdem das Formular abgeschickt (hier an sich selbst) wurde, werden dann als erstes 
die &uuml;bergebenen Werte ermittelt. Anschlie&szlig;end werden die &Uuml;bergabewerte entsprechend ausgewertet. 
Zu diesem Zweck habe ich eine kleine Funktion erstellt, der beim Aufruf dann der Benutzername, das 
Kennwort und die ID &uuml;bergeben werden:
</p>

<pre style="background='silver';">
&lt;%
Public Function anmeldung(benStr, kennStr, ID)
...
End Function
%&gt;
</pre>

<p>
In der Function wird dann erst einmal die
</p>

<pre style="background='silver';">
anmeldung = False
</pre>

<p>
gesetzt.
</p>

<p>
Dann kann die eigentliche Pr&uuml;fung erfolgen:
</p>

<pre style="background='silver';">
&lt;%
sql = "SELECT user_id FROM tblKunden "
    sql = sql &amp; " WHERE mail ='" &amp; benStr &amp; "' "
    sql = sql &amp; " AND pwd ='" &amp; kennStr &amp; "';"
    Set temp = Conn.Execute(sql)
    If temp.EOF Then	' Benutzerdaten stimmen nicht
        ErrorTxt = "Ihre Registrierung konnte nicht durchgef&uuml;hrt werden.&lt;br&gt;"
        ErrorTxt = ErrorTxt &amp; "&Uuml;berpr&uuml;fen Sie Ihre Eingaben noch einmal."
        anmeldung = False
    Else    ' Datensatz (login) aktuallisieren
        sql = "UPDATE tblKunden SET "
        sql = sql &amp; "login ='" &amp; ID &amp; "' "
        sql = sql &amp; " WHERE user_id =" &amp; temp(0) &amp; ";"
        Conn.Execute(sql)
    anmeldung = True 
    End If
%&gt;
</pre>

<p>
Hierbei wird als erstes der Benutzer ermittelt und die Eingaben werden mit den gefundenen Ergebnissen in 
der Datenbank verglichen. Stimmen diese &uuml;berein, dann wird der Datensatz ge&auml;ndert, indem die aktuelle ID 
(als Sitzungsvariable) zum User-Datensatz hinzugef&uuml;gt wird.  Andernfalls 
</p>

<pre style="background='silver';">
&lt;% if temp.EOF then	' kein Datensatz gefunden %&gt;
</pre>

<p>
wird das <i>UPDATE</i> auf den Userdatensatz nicht ausgef&uuml;hrt -  der eingangs zugewiesene Wert
</p>

<pre style="background='silver';">
&lt;% anmeldung = FALSE %&gt;
</pre>

<p>
bleibt erhalten.
</p>

<p>
Da der Function "<i>anmeldung</i>" ein boolscher Wert zugewiesen wird, kann dann die Pr&uuml;fung der 
(erfolgreichen) Anmeldung mit dem Aufruf der Function folgenderma&szlig;en durchgef&uuml;hrt werden:
</p>

<pre style="background='silver';">
&lt;% If anmeldung(benutzer, kennwort, ID) Then %&gt;
</pre>

<p>
In den nachfolgenden Grafiken wird deutlich, welchen Wert die Function anmeldung jeweils zur&uuml;ckgegeben hat, 
bzw. zur&uuml;ckgeben kann.
</p>

<p>
War der Wert "<i>True</i>", dann konnte dem User z.B. eine Mitteilung ausgegeben werden, da&szlig; die 
Registrierung erfolgreich ausgef&uuml;hrt wurde.
</p>

<IMG SRC="Bilder/200106/20010601_5.png" width="538" height="172" alt="" border="0">

<p>
Ist der R&uuml;ckgabewert der Function "<i>False</i>", dann k&ouml;nnte man z.B. wieder das Anmeldeformular 
anzeigen. Weiter ginge es dann erst, wenn der Wert "True" zur&uuml;ckgegeben wird.
</p>

<IMG SRC="Bilder/200106/20010601_6.png" width="538" height="363" alt="" border="0">

<h2>Funktionalit&auml;t bereitstellen</h2>

<p>
&Uuml;ber eine weitere kleine Funktion kann ich jetzt jederzeit den Anmeldestatus ermitteln, wobei auch hier 
mir ein boolscher Wert zur&uuml;ckgegeben wird:
</p>

<pre style="background='silver';">
&lt;%
Public Function angemeldet(ID)
    ' &Uuml;berpr&uuml;fung, ob der User angemeldet ist
    angemeldet = False
    sql = "SELECT COUNT(user_id) FROM tblKunden WHERE "
    sql = sql &amp; " login ='" &amp; ID &amp; "' ;"
    call dbconnect()
        angemeldet = cbool(Conn.Execute(sql)(0))
    call dbclose()
End Function
%&gt;
</pre>

<p>
Lediglich anhand der ID wird gepr&uuml;ft, ob eine Anmeldung erfolgreich durchgef&uuml;hrt wurde. Stimmt die in der 
URL gef&uuml;hrte ID mit der in der Kundentabelle im Login gef&uuml;hrten ID &uuml;berein, so ist der User angemeldet 
(angemeldet = <i>True</i>) andernfalls wird angemeldet = <i>False</i> zur&uuml;ck gegeben.
</p>

<IMG SRC="Bilder/200106/20010601_7.png" width="538" height="175" alt="" border="0">

<p>
Der Aufruf der Funktion erfolgt &auml;hnlich wie oben die Anmeldepr&uuml;fung:
</p>

<pre style="background='silver';">
&lt;% If angemeldet(ID) Then %&gt;
</pre>

<h2>Zusammenfassung</h2>

<p>
Durch die doppelte Speicherung der ID kann man erreichen, da&szlig; selbst bei Manipulationen der ID 
die damit abgesicherten Kundendaten gesch&uuml;tzt bleiben. Mir ist es bislang noch nicht untergekommen, 
da&szlig; ein User es geschafft h&auml;tte, fremde Benutzerdaten auszuspionieren.
</p>

<h2>Schlu&szlig;bemerkung</h2>

<p>
Sicherlich kann man die hier vorgestellte Funktionalit&auml;t in der einen oder anderen Art erweitern bzw. 
den eigenen Bed&uuml;rfnissen anpassen. So k&ouml;nnte man die ganze Prozedur dahin erweitern, da&szlig; man die Vorteile 
des RemoteScripting nutzt, um Manipulationen in der URL v&ouml;llig auszuschlie&szlig;en. Auch die Erzeugung der ID 
k&ouml;nnte z.B. durch Bereitstellung der GUID erfolgen. Doch das bleibt letztlich dem einzelnen selbst 
&uuml;berlassen. Dieser hier genannte L&ouml;sungsansatz soll in erster Linie eine Anregung darstellen, 
ASP-Anwendungen im Hinblick auf kundenspezifische Daten sicher zu gestalten  - auch ohne Cookies.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010601.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20010528.htm">Aber bitte mit Rijndael</a><br>
<a href="20020429.htm">Benutzerverwaltung leicht gemacht: Teil 1</a><br>
<a href="20000531.htm">Generieren eines sicheren Pa&szlig;wortes</a><br>
<a href="20010628.htm">Onlinestatus des Users &uuml;ber RemoteScripting ermitteln</a><br>
<a href="20010330.htm">Passw&ouml;rter mit SHA1 absichern</a><br>
<a href="20000505.htm">Session Variablen - Verwendung und Stolpersteine</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010601" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Sicherheitsaspekte bei der Gestaltung von ASP Sites ohne Cookies"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010601.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Rene Drescher-Hackel"><input type="hidden" name="AuthorEmail" value="rene@drescher-hackel.de"><input type="hidden" name="Artikel" value="20010601"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010601.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
