<HTML>
<HEAD>
<TITLE>Webseiten automatisiert scrapen</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Viele Webseiten bieten einen aktuellen Wetterbericht an. Um diesen f&uuml;r eigene Zwecke verwerten zu k&ouml;nnen, mu&szlig; man die Webseite scrapen, aufparsen, und dann in das eigene Layout einbinden.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Scrapen,ASP.NET,.NET,Csharp,C#,Webseiten,Content,Download,Wetterbericht,Datenbank,SQL Server,Tabelle,Class,Klassen">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Webseiten automatisiert scrapen</H1>
<p>
Geschrieben von: <a href="../autoren/christianholm.htm">Christian Holm</a><br>
Kategorie: <a href="../kategorien/Csharp.htm">C#</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010910"></SCRIPT>
</p>
<p>
Viele Webseiten bieten einen aktuellen Wetterbericht an. Um diesen f&uuml;r eigene Zwecke verwerten zu k&ouml;nnen, mu&szlig; man die 
Webseite scrapen, aufparsen, und dann in das eigene Layout einbinden (rechtliche Probleme einmal dahingestellt).
Allerdings ist es nicht klug, auf jeder eigenen Seite f&uuml;r jeden User neu zu scrapen - es reicht, dies automatisiert
alle x Minuten oder Stunden zu machen, und den gescrapten Content in eine Datenbank zu schreiben.
</p>
<p>
Wir erledigen heute das Scrapen und Schreiben in die Datenbank mit Hilfe von C# bzw.
dem .NET Framework und Scheduled Tasks - damit die Aktion auch automatisch abl&auml;uft. Dieser Artikel 
einer neuen Serie (Parsen, etc. folgt) zeigt Ihnen ein einfaches Beispiel, wie man die Sache angehen kann.
Unser Projekt besteht der Einfachheit halber aus einer C# Kommandozeilenapplikation, welche die gescrapten Daten der
Webseite mit den Wetterdaten in eine vorhandene SQL Datenbank schreibt. 
</p>
<p>
Beginnen wir mit der Erstellung der Datenbank.
Erstellen Sie im SQL Enterprise Manager eine Datenbank namens <i>ScrapApp</i> und eine Tabelle namens
<i>tContent</i>, die folgende Struktur aufweist:
</p>

<IMG SRC="Bilder/200109/20010910_1.png" width="402" height="447" alt="" border="0">

<p>
Da wir dies schnell erledigt haben, k&ouml;nnen wir uns nun den Beispiel-Sourcecode der Kommandozeilenapplikation ansehen.
Diese in C# geschriebene Applikation (<b>main.cs</b>) besteht aus drei Klassen: <i>Main</i>, welche die Basisklasse darstellt und 
<i>ScrapPage</i>, welche von der Webseite den Content holt, sowie <i>Write2DB</i>, die den Content der Seite in die
vorher erstellte SQL Datenbank schreibt.
</p>

<p>
Wie immer m&uuml;ssen wir am Anfang alle ben&ouml;tigten Namespaces referenzieren. In der <i>Main</i> Klasse deklariere ich
die n&ouml;tigen Variablen und f&uuml;hre die Methoden aus, die einerseits den Content scrapen (<i>ScrapIt</i>) bzw. den 
Content in die SQL Datenbank schreiben (<i>WriteIt</i>). Damit dies funktioniert, mu&szlig; vorher nat&uuml;rlich eine Referenz
auf die jeweilige Klasse erstellt werden:
</p>

<pre style="background='silver';">
using System;
using System.Net;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using System.IO;

class MainClass
{
	public static void Main()
	{
            string strURL = "<a href="http://prognoza.hr/jadran_e.html" target="_blank">http://prognoza.hr/jadran_e.html</a>";
            string strContent,strErrCode;
            DateTime dtGrabTime;
            bool bSuccess;
            
            ScrapPage MyScrapPage = new ScrapPage();
            MyScrapPage.ScrapIt(strURL, out strContent, out strErrCode,out dtGrabTime);
            
            if("" == strErrCode)
            {
                bSuccess = true;
            }
            else
            {
                bSuccess = false;
            }       
            Write2DB MyWrite2DB = new Write2DB();
            MyWrite2DB.WriteIt(dtGrabTime, bSuccess, strContent,strErrCode);
	}
}
</pre>

<p>
Der angegebene URL holt den Inhalt des Wetterberichts f&uuml;r die Adria. Die Stringvariable <i>strContent</i> repr&auml;sentiert
den gescrapten Content der Webseite und die Stringvariable <i>strErrCode</i> enth&auml;lt den eventuell anfallenden Fehlercode,
wenn beim Scrapen etwas schief gelaufen ist. Die Variable <i>dtGrabTime</i> vom Datentyp DateTime ist die sogenannte
Timestamp im Format yyyymmddhhmmss. Diese Timestamp bezieht sich auf das Zugriffsdatum und -zeit auf die Webseite.
Die Variable <i>bSuccess</i> vom Typ bool ist ein Flag f&uuml;r den Erfolgstatus des Scrapens.
</p>

<p>
Bevor wir nun die Methode <i>ScrapIt</i> der Klasse <i>ScrapPage</i> aufrufen k&ouml;nnen, m&uuml;ssen wir hierf&uuml;r ein neues Objekt
erstellen. Die <i>ScrapIt</i> Methode hat als Eingabeparameter den URL der Webseite und gibt deren Inhalt, einen eventuellen
Fehlercode des Scrapens und die Timestamp zur&uuml;ck:
</p>

<pre style="background='silver';">
class ScrapPage
{
	public void ScrapIt(string strUrl, out string strContent, 
                  out string strErrCode,out DateTime dtGrabTime)
	{
        strErrCode ="";
        WebRequest WebReq = WebRequest.Create(strUrl);
        WebResponse WebResp = WebReq.GetResponse();
        StringBuilder strBuildContent = new StringBuilder(); 
        dtGrabTime = DateTime.Now;
        
        try
        {
            StreamReader MyStrmR = new StreamReader(WebResp.GetResponseStream(), Encoding.ASCII);                    
            while (-1 != MyStrmR.Peek())
            {
                strBuildContent.Append(MyStrmR.ReadLine());
            }
        }
        catch (Exception e)
        {
            strErrCode = e.ToString();
        }
        strContent = strBuildContent.ToString();
	}
}
</pre>

<p>
Wir erstellen zuerst einen WebRequest auf die angegebene URL und schreiben dann Zeile f&uuml;r Zeile
(ReadLine Methode) den Inhalt der WebResponse bzw. des Streams in ein StringBuilder Objekt.
Um eventuelle Fehler abzufangen ist dieser Code in einen try-Block gekapselt und mit Hilfe des 
catch Statements fangen wir die Exception ab. Um die Timestamp zu erhalten, verwenden wir die <i>Now</i>
statische Eigenschaft der DateTime Structure.
</p>

<p>
Da wir nun den Content der Webseite, die Timestamp und hoffentlich keine Exception erhalten haben k&ouml;nnen wir
die SQL Datenbank bef&uuml;llen. Dies geschieht wie schon erw&auml;hnt mit der <i>WriteIt</i> Methode der Write2DB
Klasse. Der Methode &uuml;bergeben wir die gesammelten Daten (dtGrabTime, bSuccess, strContent, strErrCode) als 
Eingabeparameter:
</p>

<pre style="background='silver';">
class Write2DB
{
    public void WriteIt(DateTime dtGrabTime, bool bSuccess,string strContent,string strErrCode)
    {
    string strConn = "server=(local)\\NetSDK;database=ScrapApp;Trusted_Connection=yes";
    string insertCmd = "insert into tContent (GrabTime, Success, Content, ErrCode) values_
            (@GrabTime,@Success,@Content,@ErrCode)";
    
    SqlConnection MySqlConnection = new SqlConnection(strConn);
    SqlCommand MyCmd = new SqlCommand(insertCmd, MySqlConnection);

    MyCmd.Parameters.Add(new SqlParameter("@GrabTime", SqlDbType.DateTime, 8));
    MyCmd.Parameters["@GrabTime"].Value = dtGrabTime;
    MyCmd.Parameters.Add(new SqlParameter("@Success", SqlDbType.Bit, 1));
    MyCmd.Parameters["@Success"].Value = bSuccess;
    MyCmd.Parameters.Add(new SqlParameter("@Content", SqlDbType.NVarChar,4000));
    MyCmd.Parameters["@Content"].Value = strContent;
    MyCmd.Parameters.Add(new SqlParameter("@ErrCode", SqlDbType.NVarChar, 255));
    MyCmd.Parameters["@ErrCode"].Value = strErrCode;
    MyCmd.Connection.Open();
    MyCmd.ExecuteNonQuery();
    MyCmd.Connection.Close();
    }
}
</pre>

<p>
Nach Bekanntgabe des Connectionstrings (<i>strConn</i>) zur SQL Datenbank <i>ScrapApp</i> legen wir noch
das SQL INSERT Statement fest, welches die Daten dann einf&uuml;gen wird. Nun k&ouml;nnen wir das Objekt f&uuml;r die
SqlConnection erstellen und als Parameter den Connectionstring &uuml;bergeben. Um die Daten einzuf&uuml;gen
erstelle ich ein SqlCommand Objekt (<i>MyCmd</i>) das als Parameter hier das INSERT Statement und das SqlConnection
Objekt &uuml;bernimmt.
</p>

<p>
Nun wird die Datenreihe in Form einer Parametercollection &uuml;bergeben, der zuerst das Datenbankfeld, der SqlDbType 
kompatible Datentyp und die Feldl&auml;nge &uuml;bergeben wird. Schlie&szlig;lich erfolgen die einzelnen Wert&uuml;bergaben aus den Variablen.
</p>

<p>
Jetzt ist es an der Zeit die Applikation zu kompilieren. Dies kann entweder durch Verwendung einer IDE geschehen oder durch
Angabe von
</p>

<pre style="background='silver';">
csc /t:exe /out:ScrapApp.exe main.cs
</pre>

<p>
bei der Kommandozeile. Was noch fehlt ist der Eintrag dieser Applikation in die Scheduled Task Liste, damit die Applikation 
t&auml;glich automatisch gestartet wird. Dazu &ouml;ffen wir das Scheduled Tasks Applet in der Systemsteuerung und doppelkicken
auf <i>Add Scheduled Task</i>. Es &ouml;ffnet sich nun ein Wizard, dem wir zun&auml;chst die Applikations Informationen, wie
Applikationsname und -pfad angeben. Da unsere Applikation nicht im System registriert ist, m&uuml;ssen wir mit <i>Browse</i>
diese Angaben erstellen:
</p>

<IMG SRC="Bilder/200109/20010910_2.png" width="439" height="314" alt="" border="0">

<p>
Nach der Angabe des Namens f&uuml;r den Eintrag in die Taskliste und die Vorauswahl f&uuml;r den Zeitpunkt des Startvorganges,
geben wir im n&auml;chsten Schritt die genauen Angaben f&uuml;r den Startzeitpunkt unserer Applikation:
</p>

<IMG SRC="Bilder/200109/20010910_4.png" width="439" height="316" alt="" border="0">

<p>
Im letzten Schritt m&uuml;ssen wir noch den Benutzer und sein zugeh&ouml;riges Pa&szlig;wort angeben, da die Applikation unter diesem 
ausgef&uuml;hrt wird. In der Taskliste scheint nun der Eintrag unser Appliaktion auf:
</p>

<IMG SRC="Bilder/200109/20010910_5.png" width="454" height="292" alt="" border="0">

<h2>Schlu&szlig;bemerkung</h2>
<p>
Damit "l&auml;uft" unser automatisierter Scrapvorgang, allerdings noch ohne visuellen Output f&uuml;r den Benutzer.
In den weiteren Artikeln dieser Serie werden wir diese Applikation mit Funktionalit&auml;t erweitern,
bis wir den gefilterten Content dieser Webseite per SMS (Short Message Service) Nachricht verschicken.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010910.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20020411.htm">Kopieren verboten - Lizenzsicherung bei ASP Scripts</a><br>
<a href="20000824.htm">Scrapen von Webseiten</a><br>
<a href="20010419.htm">Site&uuml;berwachung mit Scheduled Tasks</a><br>
<a href="20011113.htm">Sonderzeichen korrekt grabben mit XmlHttp</a><br>
<a href="20010911.htm">Webseiten automatisiert scrapen, Teil 2</a><br>
<a href="20010913.htm">Wetterbericht per SMS versenden</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fprognoza%2Ehr%2Fjadran%5Fe%2Ehtml">Seewetterbericht Adria</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010910" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Webseiten automatisiert scrapen"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010910.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christian Holm"><input type="hidden" name="AuthorEmail" value="office@holmcs.com"><input type="hidden" name="Artikel" value="20010910"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010910.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
