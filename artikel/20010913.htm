<HTML>
<HEAD>
<TITLE>Wetterbericht per SMS versenden</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Wenn es sich bei der gescrapten Website um eine Wetterprognoseseite handelt, kann man per SMS (Short Message Service) Nachricht die Informationen zum Handy eines Segelkollegen schicken. Diese Aufgabe wird mittels C# und dem .NET Framework gel&ouml;st.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Framework,.NET,Csharp,C sharp,C#,Wetter,SMS,Short Message Service,Gateway,Scrapen,Datenbank,SQL Server">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Wetterbericht per SMS versenden</H1>
<p>
Geschrieben von: <a href="../autoren/christianholm.htm">Christian Holm</a><br>
Kategorie: <a href="../kategorien/Csharp.htm">C#</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010913"></SCRIPT>
</p>
<p>
Den gescrapten Content einer Website kann man vielseitig weiterverwerten. Wenn es sich bei der Website
 um eine Wetterprognoseseite handelt kann man z.B, abgelegt in einer Datenbank, eine statistische
Auswertung erstellen. Oder wie in diesem Artikel gezeigt, per SMS (Short Message Service) Nachricht die Informationen
zum Handy eines Segelkollegen schicken. Diese Aufgabe wird mittels C# und dem .NET Framework gel&ouml;st.
</p>

<p>
Dieser Artikel ist die Fortsetzung der Artikel &uuml;ber das automatisierte Scrapen einer Webseite,
<a href="20010910.htm">Webseiten automatisiert scrapen</a> und 
<a href="20010911.htm">Webseiten automatisiert scrapen, Teil 2</a>. Da die
Beispiel-Konsolenanwendung in C# geschrieben war, war es auch &quot;leicht&quot; m&ouml;glich, die Klasse f&uuml;r das Versenden
von SMS Nachrichten aus dem Artikel <a href="20010912.htm">SMS versenden in .NET</a> in den heutigen
Sourcecode miteinzubinden. Am Rande sei bemerkt, da&szlig; die Konsolenapplikation nat&uuml;rlich in jeder anderen zum .NET Framework kompatiblen
Programmiersprache geschrieben werden kann. 
</p>

<p>
Da der Artikel auf vorigen Artikel aufbaut, k&ouml;nnen wir uns direkt mit den kleinen Problemen befassen,
die das Verschicken von solchen Wetterprognosen per SMS so mit sich bringt. Aus dem Artikel 
<a href="20010911.htm">Webseiten automatisiert scrapen, Teil 2</a> wissen Sie ja schon wie man 
automatisiert den Content einer Webseite 
(hier: <a href="http://prognoza.hr/jadran_e.html" target="_blank">Wettervorhersage fuer die Adria</a>) scrapt und
ohne l&auml;stigen Ballast in eine SQL Datenbank schreibt. Heute drehen wir den Spie&szlig; sozusagen um und holen diese Daten
aus der Datenbank, formatieren sie passend f&uuml;r eine SMS Nachricht und k&ouml;nnen diese dann wiederum automatisch per
Scheduled Task verschicken.
</p>

<p>
Da die Konsolenapplikation in C# geschrieben ist, l&auml;&szlig;t sich die Funktionali&auml;t ja leicht modular gliedern.
Befassen wir uns daher mit jener Klasse, die f&uuml;r das Holen der Daten aus der Datenbank und das passende Formatieren
der Daten f&uuml;r die SMS Nachrichten verantwortlich ist. Diese Klasse hei&szlig;t im Beispielcode <i>SendWeatherData</i>.
Diese Klasse hat zwei Methoden - <i>GetLatestWeatherReport</i>, diese holt die aktuellen Daten aus der Datenbank.
Die zweite, <i>Send</i> hat die Aufgabe die Daten f&uuml;r die SMS Nachricht zu formatieren und durch zu Hilfenahme
einer anderen Klasse diese auch zu versenden.
</p>

<p>
Sehen wir uns zun&auml;chst die <i>GetLatestWeatherReport</i> Methode an:
</p>

<pre style="background='silver';">
public void GetLatestWeatherReport(out string strRetData)
{
string strConn = "server=(local)\\NetSDK;database=ScrapAppImproved;Trusted_Connection=yes"; 
string strSql =  "SELECT TOP 1 Title, Heading1, Heading2, Heading3, Heading4 FROM 
      tContent WHERE Success=1 ORDER BY ForecastTimestamp DESC";

SqlConnection RetrSqlConn = new SqlConnection(strConn);
SqlCommand RetrSqlCmd = new SqlCommand(strSql, RetrSqlConn);  

RetrSqlConn.Open();
SqlDataReader MySqlReader = RetrSqlCmd.ExecuteReader();

MySqlReader.Read();
strRetData = MySqlReader["Title"].ToString();
strRetData += MySqlReader["Heading1"].ToString();
strRetData += MySqlReader["Heading2"].ToString();
strRetData += MySqlReader["Heading3"].ToString();
strRetData += MySqlReader["Heading4"].ToString();
MySqlReader.Close(); 
RetrSqlConn.Close();
}
</pre>

<p>
Diese Methode hat einen Ausgabeparameter der die aktuellen Daten zur Wetterlage, in diesem Fall der Adria, zur&uuml;ckgibt.
Doch bevor wir diesen erhalten, m&uuml;ssen ein paar Schritte durchgef&uuml;hrt werden. Nach dem Festlegen des
Connectionstrings (<i>strConn</i>) wird das SQL-Statment angegeben. Dieses holt genau eine Datenreihe
aus der Datenbank die aus dem Artikel <a href="20010911.htm">Webseiten automatisiert scrapen, Teil 2</a>
bekannt sein sollte.
</p>

<p>
Hierbei ist aber eine Einschr&auml;nkung zu treffen. Und zwar sollen nur Daten verschickt werden, die einem erfolgreichen
Scrap-Vorgang entsprechen (durch <i>Success=1</i>) und nat&uuml;rlich ist nur die aktuellste Wetterprognose interessant
(durch <i>ORDER BY ForecastTimestamp DESC</i>). Nach dem obligatorischen Erstellen der Objekte f&uuml;r
die Datenbankverbindung (<i>RetrSqlConn</i>) und des SqlCommands (<i>RetrSqlCmd</i>), kann die Verbindung
mit Hilfe der <i>Open</i> Methode des SqlConnection Objektes hergestellt werden.
</p>

<p>
Da wir f&uuml;r diese Aufgabe kein DataGrid oder &auml;hnliche Annehmlichkeiten ben&ouml;tigen, verwende ich den 
SqlDataReader der mir nur einen read- und forwardonly Stream mit den enthaltenen Daten &uuml;bergibt. Nachher
k&ouml;nnen die Objekte wieder zur Zerst&ouml;rung freigegeben werden, damit die Applikation nicht so viel Resourcen
verbr&auml;t.
</p>

<p>
Nun k&ouml;nnen wir die aktuellen Wetterdaten, die wir &uuml;ber den Ausgabeparameter <i>strRetData</i> der Methode
erhalten haben, f&uuml;r SMS Nachrichten formatiern. Die &quot;Formatierung&quot; der Daten ist deshalb vonn&ouml;ten,
da wie allgemein bekannt, maximal 160 Zeichen auf einmal per SMS Nachricht versandt werden k&ouml;nnen. Der Ausgabeparameter
kann aber durchschnittlich zwischen 1000 und mehr Zeichen enthalten. Dieses Aufteilen der Daten ist eine
Teilaufgabe der <i>Send</i> Methode der <i>SendWeatherData</i> Klasse:
</p>

<pre style="background='silver';">
public void Send(string strUsername, string strPassword, string strTelNoTo)
{
int nSMSDataIdx =0;
int nMaxLength;
ArrayList arSMSData = new ArrayList();
string strResponse, strRetData;
SMSGateway SendSMS = new SMSGateway();
SendSMS.Username = strUsername;
SendSMS.Password = strPassword;

GetLatestWeatherReport(out strRetData);

if ("" != strRetData)
{
    nMaxLength = strRetData.Length;
    for(int i=0;i &lt; nMaxLength-157;i+=157)
{
    arSMSData[nSMSDataIdx] = nSMSDataIdx.ToString() + " " + strRetData.Substring(i,157);
    nSMSDataIdx++;
}

for(int j=0;j &lt; nSMSDataIdx;j++)
{
    bool bResult = SendSMS.SendMessage(arSMSData[j].ToString(), strTelNoTo, out strResponse);
}

}
else
{
    Console.WriteLine("No Data To Send");
}

}
</pre>

<p>
Da diese Methode schlie&szlig;lich auch die Daten versenden mu&szlig;, werden ihr Credentials des SMS-Senders &uuml;bergeben
(<i>strUsername</i> und <i>strPassword</i>), da es sich hier um einen kostenpflichtigen SMS-Service eines Drittanbieters handelt.
Zus&auml;tzlich mu&szlig; nat&uuml;rlich auch die Telefonnummer des Empf&auml;ngers (<i>strTelNoTo</i>) angegeben werden.
Die Integervariable <i>nSMSDataIdx</i> enth&auml;lt die Anzahl der zu sendenden SMS Nachrichten, die sich durch die
Aufteilung der Wetterdaten aus der Datenbank ergibt. Wie der Name schon sagt stellt die <i>nMaxLength</i>
Integervariable die maximale L&auml;nge des Datenstrings <i>strRetData</i> dar.
</p>

<p>
Um die Daten leicher aufteilen zu k&ouml;nnen, verwende ich ein <i>ArrayList (arSMSData)</i> in das die einzelnen &quot;Datensplitter&quot;
eingetragen werden. Sie werden sich nat&uuml;rlich fragen, warum ich hier kein Array benutzt habe. Da die Anzahl der
SMS Nachrichten erst w&auml;hrend der Runtime der Applikation bekannt werden und es in C# nicht mehr sinnvoll
ist normale Arrays dynamisch zu allokieren, ist der Gebrauch einer ArrayList mehr als gerechtfertigt.
</p>

<p>
Nach dem Aufruf der <i>GetLatestWeatherReport</i> Methode die die Daten aus der Datenbank holt, k&ouml;nnen
wir nun die Wetterdaten in SMS-gerechte Teile aufteilen. Dies ist hier einfach mit einem for-Statement
gel&ouml;st. Jede SMS Nachricht erh&auml;lt dabei auch einen Pr&auml;fix, der hier aus einer fortlaufenden Nummer
(<i>nSMSDataIdx</i>) der jeweiligen SMS besteht.
</p>

<p>
Da wir damit auch die Anzahl der zu versendenden SMS Nachrichten kennen, k&ouml;nnen wir uns sogleich ans Verschicken machen.
Wir &uuml;bergeben die einzelen Datenpakete an die <i>SendMessage</i> Methode der <i>SMSGateway</i> Klasse, die
Sie schon aus dem Artikel <a href="20010912.htm">SMS versenden in .NET</a> kennen.
Was noch unserer Konsolenapplikation fehlt ist ihre Basisklasse <i>MainClass</i> samt der n&ouml;tigen
Referenzierungen auf die Namespaces des .NET Frameworks:
</p>

<pre style="background='silver';">
using System;
using System.Net;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Web;
using System.Collections;

class MainClass
{
  
  public static void Main(string[] args)
  {    
  string strTelNoTo ="PhoneNumber";
  string strUsername ="Username";
  string strPassword ="Password";
    
  SendWeatherData MySendWeatherData = new SendWeatherData();
  MySendWeatherData.Send(strUsername, strPassword, strTelNoTo);
  }
}
</pre>

<p>
Die <i>Main</i> Methode der Basisklasse ist, wie man sieht sehr einfach gehalten. Sie m&uuml;ssen lediglich
die Telefonnummer des Empf&auml;ngers und Ihre Credentials eingeben, die Sie zur Verwendung des kostenpfichtigen
SMS-Dienstes berechtigen. Nun steht Ihnen nichts mehr im Wege Ihren Kollegen auf hoher See den Wetterbericht
zuzuschicken.
</p>

<h2>Schlu&szlig;bemerkung</h2>

<p>
Das gezeigte Beispiel l&auml;&szlig;t sich nat&uuml;rlich f&uuml;r jede Anforderung anpassen sofern die Daten schon in einer 
vorbereiteten Form vorhanden sind. Der eigentliche Aufwand ist das Aufparsen der jeweiligen Seite von der
man die Daten bezieht.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010913.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20001025.htm">Die Performancefalle ReDim Preserve</a><br>
<a href="20010912.htm">SMS versenden in .NET</a><br>
<a href="20000731.htm">Verwendung von Arrays in C#</a><br>
<a href="20010910.htm">Webseiten automatisiert scrapen</a><br>
<a href="20010911.htm">Webseiten automatisiert scrapen, Teil 2</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fprognoza%2Ehr%2Fjadran%5Fe%2Ehtml">Seewetterbericht Adria</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010913" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Wetterbericht per SMS versenden"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010913.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christian Holm"><input type="hidden" name="AuthorEmail" value="office@holmcs.com"><input type="hidden" name="Artikel" value="20010913"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010913.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
