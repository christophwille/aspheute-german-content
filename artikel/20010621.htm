<HTML>
<HEAD>
<TITLE>Web Services 101 in ASP.NET</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Mit ASP.NET haben wir nun eine einfache Entwicklungsplattform in der Hand, um Web Services zu programmieren. Ich werde Ihnen heute zeigen, wie leicht man Web Services in C# als auch VB.NET entwickeln kann.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,WebService,Web Service,SOAP,Simple Object Access Protocol,ASP.NET,Framework,System.Web.Services,Inherits,C#,Csharp,C Sharp,VB.NET,Visual Basic.NET">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Web Services 101 in ASP.NET</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010621"></SCRIPT>
</p>
<p>
Das Simple Object Access Protocol (SOAP) ist als Protokoll f&uuml;r Web Services schon seit langer Zeit
in aller Munde, allerdings fehlte bis jetzt unter IIS eine einfache Entwicklungsplattform, um Web
Services zu programmieren. Diese haben
wir nun mit ASP.NET in der Hand, und ich werde Ihnen heute zeigen, wie leicht man Web Services in C#
als auch VB.NET entwickeln kann.
</p>
<p>
Der heutige Artikel ist keine Theorieveranstaltung, sondern alles Hands-on. Wir benutzen SOAP, ohne
uns n&auml;her damit zu besch&auml;ftigen - genau das ist das Sch&ouml;ne, wenn .NET ins Spiel kommt: die ganze
l&auml;stige Implementierung der Infrastruktur ist bereits erledigt, man mu&szlig; nur noch die eigene Funktionalit&auml;t
programmieren - die, f&uuml;r die man Geld bekommt. Die Theorie kann man getrost vergessen.
</p>
<p>
Um den heute vorgestellten Code ausf&uuml;hren zu k&ouml;nnen, mu&szlig; ASP.NET am Server installiert sein. F&uuml;r das
Erstellen von Assemblies ben&ouml;tigt man das vollst&auml;ndige .NET SDK (nicht notwendigerweise am Server,
allerdings auf der Maschine, auf der die Assembly kompiliert werden soll).
</p>

<h2>Ein einfacher Web Service in C#</h2>
<p>
Die durchg&auml;ngige Aufgabenstellung &uuml;ber alle heute vorgestellten Web Service Beispiele ist folgende:
man programmiere einen Web Service, der einen Namen als String Parameter annimmt, und mit diesem
eine "Hello World" Meldung erstellt, und an den Aufrufer zur&uuml;ckliefert. Die erste Programmiersprache,
die sich dieser Herausforderung stellen mu&szlig;, ist C#.
</p>
<p>
Hier ist mein L&ouml;sungsvorschlag (<b>SampleCSService.asmx</b>):
</p>

<pre style="background='silver';">
&lt;%@ WebService Language="C#" Class="DemoCSService" %&gt;
using System;
using System.Web.Services;

public class DemoCSService : WebService
{
  [WebMethod]
  public string SayHello(string strName) 
  { 
    return "Hello " + strName + " from C#"; 
  }
}
</pre>

<p>
Die erste Zeile sieht bekannt aus - statt <i>@Page</i> steht bei einem Web Service die
<i>@WebService</i> Direktive, das <i>Language</i> Attribut ist ident. Neu dazugekommen ist das
<i>Class</i> Attribut. Dieses gibt an, welche der in dieser ASMX Datei definierten Klassen (ja, es k&ouml;nnen
mehrere sein: die Serviceklasse und mehrere Hilfsklassen) als 
Web Service angesprochen werden kann. Da ich nur eine habe, ist die Wahl leicht. Die 
gew&auml;hlte Klasse mu&szlig; von <i>WebService</i> abgeleitet werden, und diese wiederum findet sich im eingebundenen Namespace
<i>System.Web.Services</i>.
</p>
<p>
Die Klassenimplementierung selbst ist kaum unterschiedlich zu der anderer Klassen, der einzige Unterschied
ist, da&szlig; Methoden, die durch den Service verf&uuml;gbar sein sollen (=von au&szlig;en aufrufbar) mit dem 
<i>WebMethod</i> Attribut markiert werden m&uuml;ssen. Das ist alles, und schon hat man einen funktionierenden
Web Service.
</p>
<p>
Wie kann ich beweisen, da&szlig; er funktioniert? Nun, ASP.NET generiert f&uuml;r jeden Web Service Standardseiten,
die es erlauben, die Definition des Services einzusehen (WSDL), als auch die freigegebenen Methoden
aufzurufen. Alles, was man tun mu&szlig;, ist den URL des Services im Internet Explorer einzutippen:
</p>

<IMG SRC="Bilder/200106/20010621_1.png" width="669" height="462" alt="" border="0">

<p>
Man erh&auml;lt eine Beschreibung des Services, als auch eine Liste der aufrufbaren Methoden - in unserem Fall
nur <i>SayHello</i>. Wenn man auf die Methode klickt, bekommt man ein Formular, in dem man Parameter
eintippen und die Methode aufrufen kann:
</p>

<IMG SRC="Bilder/200106/20010621_2.png" width="669" height="462" alt="" border="0">

<p>
Nach Klicken des <i>Invoke</i> Buttons wird die Methode aufgerufen, und das Resultat in einem XML Paket
zur&uuml;ckgeliefert:
</p>

<IMG SRC="Bilder/200106/20010621_3.png" width="589" height="220" alt="" border="0">

<p>
Da&szlig; dies keine tolle benutzerfreundliche L&ouml;sung ist um Web Services zu konsumieren, ist klar aber dennoch
eine andere Geschichte. Heute befassen wir uns nur mit der Erstellung eines einfachen Web Services!
</p>

<h2>Ein einfacher Web Service in VB.NET</h2>
<p>
In C# h&auml;tten wir die Aufgabe des Erstellens eines Web Services schon gemeistert. Nun versuchen
wir unser Gl&uuml;ck in Visual Basic.NET. Ich habe den Service <b>SampleVBService.asmx</b> durch
einfaches Umschreiben des C# Codes erstellt, und wie man sieht, sind die notwendigen Anpassungen
nicht schlimm:
</p>

<pre style="background='silver';">
&lt;%@ WebService Language="VB" Class="DemoVBService" %&gt;
Imports System
Imports System.Web.Services

Public Class DemoVBService : Inherits WebService
  &lt;WebMethod()&gt; Public Function SayHello(strName As System.String) As System.String
    SayHello = "Hello " &amp; strName &amp; " from VB" 
  End Function
End Class
</pre>

<p>
Im Prinzip sind die Unterschiede nur Syntax: <i>Imports</i> statt <i>Using</i>, das <i>WebMethod</i>
in spitzen statt eckigen Klammern und eben die &uuml;bliche VB Syntax f&uuml;r Klassen und Methoden. Auf alle
F&auml;lle ist es keineswegs schwieriger in VB.NET einen Web Service zu erstellen als in C#!
</p>
<p>
Es gilt &uuml;brigens die gleiche Vorgehensweise f&uuml;r das Testen: URL eintippen, und mit den vorgenerierten
Seiten von ASP.NET herumspielen.
</p>

<h2>Der etwas andere Weg zum Ziel</h2>
<p>
Die folgende einzeilige Datei <b>AssemblyService.asmx</b> erf&uuml;llt die Aufgabe auch:
</p>

<pre style="background='silver';">
&lt;%@ WebService Class="AspHeute.SampleService" %&gt;
</pre>

<p>
Aber wie? Nun, der Name der Datei verr&auml;t mich ja sowieso: die Web Service Klasse ist in einer separaten
Assembly implementiert, die kompiliert im <b>bin</b> Verzeichnis der Applikation liegt, und somit
automatisch eingebunden wird. Ich mu&szlig; nur angeben, welche von <i>WebService</i> abgeleitete Klasse
aufgerufen werden soll.
</p>
<p>
Was sind die Vorteile, warum w&uuml;rde man das machen? Nun, ein gewichtiger Vorteil ist, da&szlig; Assemblies
kompiliert sind, und nicht als Quelltext vorliegen. Das beschleunigt den Erstaufruf, und hindert
unerfahrene Kunden daran, den Web Service nach eigenem Gutd&uuml;nken zu verschlimmbessern. Also doch einige
Argumente daf&uuml;r, wohl aber auch dieses: der Aufwand ist nahe Null.
</p>
<p>
Warum? Nun, man mu&szlig; nur den existierenden Sourcecode minus der ersten Zeile nehmen, und in eine .cs 
Datei verfrachten (<b>AssemblyService.cs</b>):
</p>

<pre style="background='silver';">
using System;
using System.Web.Services;

namespace AspHeute 
{
  public class SampleService : WebService
  {
    [WebMethod]
    public string SayHello(string strName) 
    { 
      return "Hello " + strName + " from the assembly"; 
    }
  }
}
</pre>

<p>
Das Kompilieren &uuml;bernimmt ein Tool wie <a href="http://www.icsharpcode.net/opensource/sd/" target="_blank">SharpDevelop</a>:
</p>

<IMG SRC="Bilder/200106/20010621_4.png" width="610" height="400" alt="" border="0">

<p>
Zusammen mit dem Umkopieren in das <b>bin</b> Verzeichnis habe ich drei Minuten gebraucht - und es liegt
kein Sourcecode mehr herum, der absichtlich oder unabsichtlich ver&auml;ndert werden k&ouml;nnte. Ein annehmbarer
Aufwand, zumal er meist sowieso erst zum Abschlu&szlig; des Projektes f&auml;llig wird.
</p>
<p>
Apropos - es ist jeder herzlich eingeladen, auch diesen dritten Service auszuprobieren!
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Die heute vorgestellten Web Services waren simpel - allerdings werden auch aufwendigere Aufgabenstellungen
kaum komplizierter - die Infrastruktur ist da, und sie ist sehr gut implementiert. Sp&auml;tere Artikel werden
zeigen, wie man n&uuml;tzlichere Services schreiben kann, und wie man diese dann konsumiert.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010621.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20000713.htm">A Brief History of C#</a><br>
<a href="20030429.htm">Authentifizierung in Web Services - Windows Integrated</a><br>
<a href="20000726.htm">Datentypen in C#</a><br>
<a href="20000803.htm">Die String Klasse in C#</a><br>
<a href="20011122.htm">Einstellungssache - Applikationsdaten in web.config</a><br>
<a href="20021107.htm">Index Server Abfragen per Web Service</a><br>
<a href="20020117.htm">Last but not least - .NET 1.0 ist da!</a><br>
<a href="20010627.htm">Session State in ASP.NET Web Services</a><br>
<a href="20020207.htm">Unions in C#</a><br>
<a href="20010208.htm">Web Projekte mit SharpDevelop erstellen</a><br>
<a href="20010622.htm">Web Services in Anwendungen konsumieren</a><br>
<a href="20010629.htm">Web Services mit dem SOAP Toolkit erstellen</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Edotnetgerman%2Ecom%2F">DotNetGerman Diskussionslisten</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Eicsharpcode%2Enet%2Fopensource%2Fsd%2F">SharpDevelop</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010621" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Web Services 101 in ASP.NET"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010621.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christoph Wille"><input type="hidden" name="AuthorEmail" value="christophw@alphasierrapapa.com"><input type="hidden" name="Artikel" value="20010621"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010621.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
