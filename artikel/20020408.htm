<HTML>
<HEAD>
<TITLE>Klassenauflistungen mit dem Dictionary-Objekt</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Mit Klassenauflistungen hat jeder ernsthafte Visual Basic-Programmierer irgendwann einmal zu tun. Dieser Artikel zeigt einen kleinen Trick mit dem Klassenauflistungen sehr einfach aufgebaut und verwendet werden k&ouml;nnen.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Klassenauflistung,Collection,dictionary,recordset,array,multidimensional,dimension,Performance">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Klassenauflistungen mit dem Dictionary-Objekt</H1>
<p>
Geschrieben von: <a href="../autoren/marcteufel.htm">Marc Teufel</a><br>
Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20020408"></SCRIPT>
</p>
<p>
Mit Klassenauflistungen hat jeder ernsthafte Visual Basic-Programmierer irgendwann einmal zu tun. 
Ob freiwillig oder unfreiwillig sei mal dahingestellt, klar ist aber, wer sie einmal kennen- und 
liebengelernt hat will nicht mehr ohne sie auskommen. Um so schlimmer also, da&szlig; gerade 
diese beliebte Technologie nicht in VBScript und ASP zur Verf&uuml;gung steht. Was also tun? 
Dieser Artikel zeigt einen kleinen Trick mit dem Klassenauflistungen sehr einfach aufgebaut 
und verwendet werden k&ouml;nnen.
</p>

<h2>Wie ging das nochmal in Visual Basic?</h2>
<p>
Klassenauflistungen in Visual Basic sind relativ einfach zu handhaben, da ja dort ein 
Klassengenerator zur Verf&uuml;gung steht der die meiste Programmierarbeit abnimmt.  Diesem 
Artikel liegt zu Demonstrationszwecken ein kleines VB-Beispiel bei, in dem eine 
Klassenauflistung zum Einsatz kommt.
</p>

<IMG SRC="Bilder/200204/20020408_1.png" width="668" height="376" alt="" border="0">

<p>
Hier ist der VB-Klassengenerator zu sehen, in dem ich eine kleine Klassenauflistung 
(<b>colAdressen</b>) zur Speicherung von Adressen (<b>clsAdresse</b>) angelegt habe. <b>clsAdresse</b> stellt hierbei 
den Container dar der immer wieder neu instanziert und mit Daten gef&uuml;llt in die Klassenauflistung 
<b>colAdressen</b> gespeichert wird.
</p>

<p>
Hat man die Klasse im VB-Klassengenerator definiert und man schlie&szlig;t denselbigen, wird die erstellte 
Klassenauflistung in das Projekt &uuml;bernommen:
</p>

<IMG SRC="Bilder/200204/20020408_2.png" width="351" height="187" alt="" border="0">

<p>
In diesem Beispiel hat der Klassengenerator die in der Abbildung (siehe oben) aufgef&uuml;hrten Klassen 
erstellt. Im Normalfall mu&szlig; an den Klassen <b>clsAdresse</b> und <b>colAdresse</b> jetzt nichts mehr 
ge&auml;ndert werden, der Klassengenerator hat den Code selbst&auml;ndig angelegt, soda&szlig; sich der Programmierer 
um wichtigere Aufgaben k&uuml;mmern kann. 
</p>

<p>
Der automatisch erzeugte Code f&uuml;r die Klasse <b>clsAdresse</b> sieht wie folgt aus:
</p>

<pre style="background='silver';">
Private mvarNachname As String
Private mvarVorname As String

Public Property Let Vorname(ByVal vData As String)
    mvarVorname = vData
End Property

Public Property Get Vorname() As String
    Vorname = mvarVorname
End Property

Public Property Let Nachname(ByVal vData As String)
    mvarNachname = vData
End Property

Public Property Get Nachname() As String
    Nachname = mvarNachname
End Property
</pre>

<p>
Die Klasse <b>clsAdresse</b> ist dazu gedacht um immer wieder neu instanziert und mit Daten gef&uuml;llt in 
eine Collection gepackt zu werden, die wiederrum von der Klasse <b>colAdressen</b> verwaltet wird. 
Der automatisch generierte Code von <b>colAdressen</b> enth&auml;lt Routinen zum Anlegen, Entfernen 
und Zugreifen auf Elemente der Auflistung.
</p>

<p>
Wie man in VB mit den Klassen umgeht zeigt folgendes kleines Snippet:
</p>

<pre style="background='silver';">
   Dim lCounter As Long
   Dim EinzelneAdresse As clsAdresse
    
    ' Daten in die Klassenauflistung aufnehmen
    ' ohne Schl&uuml;ssel
    Adressen.Add "Stoiber", "Edmund"
    Adressen.Add "Merkel", "Angela"
    
    ' mit Schl&uuml;ssel
    Adressen.Add "Schr&ouml;der", "Gerhard", "Bundeskanzler"
        
    MsgBox "Im folgenden wird der Inhalt der kompletten  Klassenauflistung ausgegeben:"
    
    For lCounter = 1 To Adressen.Count
        Set EinzelneAdresse = Adressen.Item(lCounter)
        
        MsgBox "Vorname: " &amp; EinzelneAdresse.Vorname &amp; vbCrLf &amp; _
               "Nachname: " &amp; EinzelneAdresse.Nachname
    Next lCounter
    

    MsgBox "Im folgenden wird &uuml;ber einen Key nur der Bundeskanzler ausgelesen und ausgegeben:"
    
    Set EinzelneAdresse = Adressen.Item("Bundeskanzler")
    
    MsgBox "Vorname: " &amp; EinzelneAdresse.Vorname &amp; vbCrLf &amp; _
           "Nachname: " &amp; EinzelneAdresse.Nachname
</pre>

<p>
Dieses VB-Beispiel ist nat&uuml;rlich auch in den Sourcen enthalten, die zu diesem Artikel 
heruntergeladen werden k&ouml;nnen.
</p>

<h2>Die Umsetzung in ASP mit VBScript</h2>
<p>
VBScript kennt keine Collections und auch das Klassenkonzept so wie man es von VB her gew&ouml;hnt ist, 
gibt es in VBScript in dieser Form nicht. Ab Version 5.0 bietet VBScript Klassen an (die wir im 
Verlaufe dieses Artikels noch noch benutzen), diese werden im Gegensatz zu Visual Basic jedoch nicht 
in eigenen Klassenmodulen (.cls) definiert sondern mit den Schl&uuml;sselw&ouml;rten <i>Class</i> und <i>End Class</i> 
direkt in den Quelltext geschrieben (siehe dazu auch den Artikel 
<a href="20000526.htm">Klassen mit VBScript</a>).
</p>

<p>
Wie also Klassenauflistungen in ASP nachbilden? Nun, da gibt es mehrere M&ouml;glichkeiten auf die ich an dieser Stelle 
etwas n&auml;her eingehen m&ouml;chte:
</p>

<ul>
<li>Mehrdimensionale Arrays
<li>Verbindungslose ADO-Recordsets
<li>VBScript-Klassen/Dictionary Objekt
</ul>

<p>
<b>Mehrdimensionale Arrays</b> haben den Nachteil, da&szlig; der Zugriff auf einzelne Elemente &uuml;ber Indizes 
erfolgt, was mitunter sehr kryptisch werden kann, wenn man z.B. eine komplette Kundenadresse 
abbildet (an welcher Stelle war nochmal die PLZ gespeichert?). Ferner hat man bei einem Array 
immer das Problem, da&szlig; einzelne Elemente nicht, wie beim Dictionary-Objekt, &uuml;ber einen Key 
adressierbar sind.
</p>

<p>
<b>Verbindungslose ADO-Recordsets</b> sind eine weitere elegante Methode um Daten im Speicher zu 
 halten, da dieses jederzeit per <i>AddNew</i> erweitert werden kann. Auch das Durchlaufen eines 
 verbindungslosen ADO-Recordsets ist ohne Probleme m&ouml;glich. Einen Nachteil sehe ich hier 
 allerdings beim Speicherverbrauch. Das Recordset mu&szlig; ja schlie&szlig;lich auch verwaltet werden 
 und das ist speicherlastig.
</p>

<p>
Bleiben nur noch <b>VBScript-Klassen und das Dictionary-Objekt</b>. Und tats&auml;chlich, wenn man diese 
beiden Techniken miteinander verkn&uuml;pft kann man Klassenauflistungen ann&auml;hernd wie in VB nachbilden. 
Das Dictionary-Objekt ist in diesem Zusammenhang zwar auch speicherlastig, aber nicht so sehr wie 
ein ADO-Recordset.
</p>

<p>
Hinweis: Da VBScript Objekte sowieso nicht in Application- oder Session State gespeichert werden 
k&ouml;nnen, entf&auml;llt auch die Problematik des Dictionary Objekts, siehe dazu den Artikel 
<a href="19990806.htm">Das Dictionary Objekt - Dein Feind und Helfer</a>.
</p>

<h2>Klassen in VBScript mit Class ... End Class</h2>
<p>
Den Grundstein f&uuml;r eine Klassenauflistung in VBScript legt man indem man eine Klasse definiert in 
der alle Felder die sp&auml;ter gespeichert werden sollen enthalten sind. Setzt man das VB-Beispiel 
von oben in VBScript und ASP um, s&auml;he der Sourcecode der Klasse so aus:
</p>

<pre style="background='silver';">
&lt;%
Class Adresse
        dim sVorname
        dim sNachname

        Public Property Get Vorname
                Vorname = sVorname
        End Property
        Public Property Let Vorname(newVorname)
                sVorname = newVorname
        End Property

        Public Property Let Nachname(newNachname)
                sNachname = newNachname
        End Property
        Public Property Get Nachname
                Nachname = sNachname
        End Property

End Class
%&gt;
</pre>

<p>
Die Programmierung der Properties erfolgt hier &auml;hnlich wie in VB, nur da&szlig; man sie hier selbst 
codieren mu&szlig; (diese Arbeit kann man in VB vom Klassengenerator erledigen lassen). Der einzige 
Unterschied zu VB-Klassen besteht darin, da&szlig; in VB eine Klasse immer eine Datei mit der 
Dateinamenserweiterung .cls ist und in VBScript eine Klasse mit den Schl&uuml;sselwort <i>Class</i> 
eingeleitet und <i>End Class</i> abgeschlo&szlig;en wird.
</p>

<h2>Der Trick</h2>
<p>
Jetzt kommt der eigentliche Trick mit dem die Klassenauflistung gef&uuml;llt wird: Man nimmt sich zun&auml;chst 
ein Dictionary, danach erstellt man eine Instanz einer Klasse (z.B. die oben abgebildete Klasse 
Adresse), f&uuml;llt sie mit Daten und packt dieses Objekt in das Dictionary. Eigentlich gar nicht so 
schwer, aber sehr effizient da in einem Dictionary zu jedem Element ein eindeutiger Key mitgegeben 
werden mu&szlig;, mit dem man sofortigen Zugriff auf alle Elemente des Dictionarys bekommt. Das 
Dictionary mu&szlig; also nicht sequentiell bis zu dem Element durchlaufen werden, das gesucht wird.
</p>

<p>
Folgender Code speichert zwei Adressen in die Klassenauflistung:
</p>

<pre style="background='silver';">
&lt;%
dim dicKlassenauflistung
dim cAdresse

' Dictionary definieren
set dicKlassenauflistung = CreateObject("Scripting.Dictionary")

' 1. Adresse in die Klassenauflistung speichern
set cAdresse = new Adresse
with cAdresse
     .Vorname = "Edmund"
     .Nachname = "Stoiber"
end with
dicKlassenauflistung.Add "CSU-Vorsitzender", cAdresse

' 2. Adresse in die Klassenauflistung speichern
set cAdresse = new Adresse
with cAdresse
     .Vorname = "Gerhard"
     .Nachname = "Schr&ouml;der"
end with
dicKlassenauflistung.Add "Bundeskanzler", cAdresse
%&gt;
</pre>

<p>
Irgendwann will man die Daten auch wieder aus der Klassenauflistung 
auslesen, auch das schafft man mit einfachen Mitteln:
</p>

<pre style="background='silver';">
&lt;%
Dim cEinzelneAdresse

Set cEinzelneAdresse = dicKlassenauflistung.Item("Bundeskanzler")
Response.write " Vorname: " &amp; cEinzelneAdresse.Vorname
Response.write " Nachname: " &amp; cEinzelneAdresse.Nachname 
%&gt;
</pre>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Mit dem oben beschriebenen Trick kann man also sehr effizient Klassenauflistungen bauen und damit 
auch kompliziertere Datenstrukturen in ASP verarbeiten. Einziges Manko an dieser Technik ist, da&szlig; 
diese Klassenauflistungen nicht &uuml;ber Session- oder Applicationvariablen weitergegeben werden 
k&ouml;nnen. Dieser Artikel wird &uuml;brigens fortgesetzt - in der Fortsetzung wird ein Klassengenerator 
vorgestellt, der selbst in ASP geschrieben, &auml;hnlich funktioniert wie der VB-Klassengenerator 
und automatisch VBScript-Klassen erstellen kann.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20020408.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="19990806.htm">Das Dictionary Objekt - Dein Feind und Helfer</a><br>
<a href="20020205.htm">Der Object Construct String</a><br>
<a href="20020430.htm">Gro&szlig;e Datenmengen in Formularfeldern erfolgreich auslesen</a><br>
<a href="20010320.htm">In VB Komponenten auf ASP Objekte zugreifen (Variante 1)</a><br>
<a href="20010322.htm">In VB Komponenten auf ASP Objekte zugreifen (Variante 2)</a><br>
<a href="20000526.htm">Klassen in VBScript</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20020408" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Klassenauflistungen mit dem Dictionary-Objekt"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20020408.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Marc Teufel"><input type="hidden" name="AuthorEmail" value="info@familieteufel.de"><input type="hidden" name="Artikel" value="20020408"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20020408.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
