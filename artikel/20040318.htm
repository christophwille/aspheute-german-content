<HTML>
<HEAD>
<TITLE>Pager- und Footerzeilen des DataGrid erweitern</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Der Pager des DataGrids bietet standardm&auml;&szlig;ig nur zwei Arten der Formatierung: Seitenzahlen und Symbole zum Bl&auml;ttern ohne Angabe der Seitenzahlen. &Auml;hnlich langweilig gestaltet sich der Footer...">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,DataGrid,Pager,Paging,Footer,Fußzeile,Fusszeile,Kopfzeile,Anpassen,Formatieren,Summieren,Summe,Seitenangabe">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Pager- und Footerzeilen des DataGrid erweitern</H1>
<p>
Geschrieben von: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a><br>
Kategorie: <a href="../kategorien/dotNET%20Fu.htm">.NET Fu</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20040318"></SCRIPT>
</p>
<p>
Der Pager des DataGrids bietet standardm&auml;&szlig;ig nur zwei Arten der Formatierung: Seitenzahlen und "Symbole" zum Bl&auml;ttern ohne 
Angabe der Seitenzahlen. &Auml;hnlich langweilig gestaltet sich der Footer - im Normalfall ist er n&auml;mlich leer, obwohl er sich 
gerade bei DataGrids f&uuml;r zB Summierung einzelner Spalten eignet.
</p>
<p>
Die in diesem .NET Fu vorgestellte L&ouml;sung wird so aussehen:
</p>

<IMG SRC="Bilder/200403/20040318.png" width="510" height="471" alt="" border="0">

<h2>Die L&ouml;sung: Pager </h2>
<p>
Anwenderfreundlicher w&auml;re ein Pager schon alleine durch die Tatsache, da&szlig; vor den Seitenzahlen das Wort "Seite" erscheint, 
damit der User &uuml;berhaupt wei&szlig;, da&szlig; es sich um einen Pager mit mehreren Ergebnisseiten handelt.
</p>
<p>
Die Umsetzung ist relativ einfach. Ausgehend von der Tatsache, da&szlig; das Paging im DataGrid mittels AllowPaging bereits aktiviert 
ist, brauchen wir nur eine M&ouml;glichkeit, HTML-Elemente bzw. Text in den erzeugten DataGrid-HTML-Output einzubauen. Hierzu bietet 
sich das Event OnItemCreated unseres DataGrids an - idealerweise m&uuml;ssen wir uns hierbei nicht einmal durch HTML-Code w&uuml;hlen, 
sondern bekommen eine einfach zu bearbeitende Control-Collection. Die Umsetzung ist jetzt fast nur noch Formsache:
</p>

<pre style="background='silver';">
private void ItemCreated(object sender, DataGridItemEventArgs e)
{
  if(e.Item.ItemType==ListItemType.Pager)
  {
    Label lblPager = new Label();
    lblPager.Text = "Seite&amp;nbsp;" + lblPager.Text;
    e.Item.Controls[0].Controls.AddAt(0,lblPager);
  }
}
</pre>

<p>
Nach einer Pr&uuml;fung, ob das aktuelle Item der Pager ist, setzen wir einfach einen neuen Label an den Anfang der Controls-Collection 
des Pagers, welcher den Text "Seite:&amp;nbsp" beinhaltet. Direkt im Anschlu&szlig; an diesen folgen die Label- und LinkButton-Controls, 
welche die Seitenzahlen ausgeben.
</p>

<h2>Die L&ouml;sung: Footer</h2>
<p>
Wie eingangs bereits erw&auml;hnt, ist der Footer standardm&auml;&szlig;ig zum einen leer und zum anderen auch deaktiviert. Letzteres &auml;ndern 
wir sofort durch ein
</p>

<pre style="background='silver';">
this.DataGrid1.ShowFooter = true;
</pre>

<p>
Den jetzt gewonnen freien Platz nutzen wir, um die Abfrage "Product Sales for 1995" aus der bekannten "Northwind"-Datenbank im 
DataGrid &uuml;ber mehrere Seiten verteilt darzustellen und an jedem Seitenende - eben in jenem Footer - den &Uuml;bertrag der jeweiligen 
Ums&auml;tze f&uuml;r diese Seite darzustellen. Au&szlig;erdem erweitern wir die L&ouml;sung noch dahingehend, da&szlig; wir auf der letzten Seite die 
Gesamtsumme pr&auml;sentieren.
</p>
<p>
Die Herangehensweise ist &auml;hnlich wie beim Pager, allerdings nutzen wir hier das Event OnItemDataBound.
</p>
<p>
Der erste Schritt ist die Generierung der Zwischensummen der einzelnen Seiten. Hierzu ist es notwendig, die Werte der einzelnen 
DataGridItems zu addieren. Zun&auml;chst ist also zu pr&uuml;fen, ob das aktuelle Item ein Item bzw. AlternatingItem darstellt. Ist dies 
der Fall, werden die Werte aus der Datenquelle anhand des DataSetIndex' des aktuellen Items gelesen:
</p>

<pre style="background='silver';">
private void ItemDataBound(object sender, DataGridItemEventArgs e)
{
 if((e.Item.ItemType==ListItemType.Item)||(e.Item.ItemType==ListItemType.AlternatingItem))
 {
   lumpSum += 
      Double.Parse((this.ReadDataFromDB().Tables[0].Rows[e.Item.DataSetIndex][2].ToString()));
 }
}
</pre>

<p>
"lumpSum" ist als &ouml;ffentliche Variable vom Typ double innerhalb der Page-Klasse zu deklarieren:
</p>

<pre style="background='silver';">
public double lumpSum;
</pre>

<p>
Der Weg &uuml;ber die Datenquelle erscheint zun&auml;chst umst&auml;ndlicher als z.B. die aktuellen Zellinhalte des DataGrids mittels 
Replace zu bearbeiten (in diesem Falle, um das W&auml;hrungssymbol zu eliminieren) und zu addieren. Doch wie wir alle wissen, 
finden sich selten zwei Server mit absolut identischen Konfigurationen - die n&auml;chste Exception wegen fehlerhafter Inputstrings 
bei Double.Parse ist somit vorprogrammiert.
</p>
<p>
Nachdem wir nun die Summe ermittelt haben, m&uuml;ssen wir diese noch in die entsprechende Footerzelle des DataGrids schreiben. 
Diese Zellen lassen sich &uuml;ber einen nullbasierenten Index ansprechen. In unserem Fall handelt es sich um die dritte Spalte, 
somit w&auml;re der gesuchte Index "2". Zu beachten ist hierbei, da&szlig; evtl. ausgeblendete Spalten (Visible=false) ebenfalls zu 
z&auml;hlen sind. Die Zelle des Footers steht direkt als Objekt zur Verf&uuml;gung und kann &uuml;ber die .Text-Eigenschaft den ermittelten 
und als W&auml;hrung formatierten Wert von "lumpSum" aufnehmen (das Ganze findet nach wie vor in ItemDataBound statt).
</p>

<pre style="background='silver';">
if(e.Item.ItemType==ListItemType.Footer)
{
  e.Item.Cells[2].HorizontalAlign = HorizontalAlign.Right;
  e.Item.Cells[2].Text = "&Uuml;bertrag:&amp;nbsp;" + string.Format("{0:c}",lumpSum);
}
</pre>

<p>
Schlie&szlig;lich fehlt uns nur noch die Ausgabe der Endsumme auf der letzten Seite. Hierzu m&uuml;ssen wir zun&auml;chst herausfinden, ob wir 
uns auf der letzten Seite befinden. Dies geschieht, indem wir die Anzahl der Datens&auml;tze in der Datenquelle durch die Seitengr&ouml;&szlig;e 
dividieren. Der Ganzzahlanteil stellt den Index der letzten Seite dar. Tritt der Sonderfall ein, da&szlig; der letzte Datensatz die 
letzte Seite genau ausf&uuml;llt, ist der Index um 1 zu minimieren, da sonst der Index eine Seite zuviel "produzieren" w&uuml;rde. Die 
wiederum w&uuml;rde dazu f&uuml;hren, da&szlig; auf unserer letzten Seite keine Endsumme erscheint.
</p>
<p>
Entspricht der ermittelte Index der letzten Seite "lastPageIndex" dem Index der aktuellen Seite, sind wir auf der letzten Seite 
gelandet. Jetzt m&uuml;ssen wir nur noch die Werte der Datenquelle aufsummieren und &auml;hnlich wie beim &Uuml;bertrag an unseren Footer anf&uuml;gen:
</p>

<pre style="background='silver';">
DataSet dsSales = this.ReadDataFromDB();
int lastPageIndex = dsSales.Tables[0].Rows.Count/DataGrid1.PageSize;
if(dsSales.Tables[0].Rows.Count%DataGrid1.PageSize==0)
	lastPageIndex--;
if(lastPageIndex==DataGrid1.CurrentPageIndex)
{
	double totalLumpSum = 0;
	foreach(DataRow dr in this.ReadDataFromDB().Tables[0].Rows)
	{
		totalLumpSum += double.Parse(dr["ProductSales"].ToString());
	}
	e.Item.Cells[2].Text += 
		"&lt;br&gt;Endsumme:&amp;nbsp;" + string.Format("{0:c}",totalLumpSum);
}
</pre>

<p>
Somit ergibt sich f&uuml;r die hier vorgestellten Implementierungen im Gesamten also folgender Code (f&uuml;r den leichteren &Uuml;berblick):
</p>

<pre style="background='silver';">
public double lumpSum;
private void ItemCreated(object sender, DataGridItemEventArgs e)
{
  if(e.Item.ItemType==ListItemType.Pager)
  {
    Label lblPager = new Label();
    lblPager.Text = "Seite&amp;nbsp;" + lblPager.Text;
    e.Item.Controls[0].Controls.AddAt(0,lblPager);
  }
}

private void ItemDataBound(object sender, DataGridItemEventArgs e)
{
  if((e.Item.ItemType==ListItemType.Item)||(e.Item.ItemType==ListItemType.AlternatingItem))
  {
    lumpSum = lumpSum + 
     Double.Parse((this.ReadDataFromDB().Tables[0].Rows[e.Item.DataSetIndex][2].ToString()));
  }

  if(e.Item.ItemType==ListItemType.Footer)
  {
    e.Item.Cells[2].HorizontalAlign = HorizontalAlign.Right;
    e.Item.Cells[2].Text = "&Uuml;bertrag:&amp;nbsp;" + string.Format("{0:c}",lumpSum);
    DataSet dsSales = this.ReadDataFromDB();
    int lastPageIndex = dsSales.Tables[0].Rows.Count/DataGrid1.PageSize;
    if(dsSales.Tables[0].Rows.Count%DataGrid1.PageSize==0)
      lastPageIndex-- ;
    if(lastPageIndex==DataGrid1.CurrentPageIndex)
    {
      double totalLumpSum = 0;
      foreach(DataRow dr in this.ReadDataFromDB().Tables[0].Rows)
      {
        totalLumpSum += double.Parse(dr["ProductSales"].ToString());
      }
      e.Item.Cells[2].Text += 
        "&lt;br&gt;Endsumme:&amp;nbsp;" + string.Format("{0:c}",totalLumpSum);
    }
  }
}
</pre>

<p>
Ein funktionsf&auml;higes Beispiel dieser Implementierung finden Sie 
<a href="http://alexonasp.net/dotnetfu/datagridpager" target="_blank">hier</a>.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Dieser Artikel hat gezeigt, wie leicht sich die scheinbar "statischen" Daten im DataGrid auch nachtr&auml;glich modifizieren lassen. 
Nat&uuml;rlich bietet diese Implementierung Potential f&uuml;r weitere Verbesserungen - so werden Sie sicherlich die Daten aus 
Performancegr&uuml;nden nicht bei jedem Durchlauf von ItemDataBound aus der Datenbank lesen. 
</p>
<p>
Eine weitere interessante Aufgabe, die auf dieser L&ouml;sung basiert, w&auml;re beispielsweise den &Uuml;bertrag der vorhergehenden Seiten 
mit dem &Uuml;bertrag der aktuellen Seite zu kumulieren.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20040318.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20030909.htm">Das ASP.NET DataGrid selbst erweitern</a><br>
<a href="20040929.htm">DataGrid - Daten bearbeiten leicht gemacht</a><br>
<a href="20040317.htm">Eintr&auml;ge numerieren im DataGrid</a><br>
<a href="20040628.htm">MouseOver-Effekte beim DataGrid</a><br>
<a href="20040303.htm">Vergleich von DataGrid, DataList und Repeater-Control - was verwende ich wann?</a><br>
<a href="20020704.htm">Zahl, Datum und W&auml;hrung korrekt formatiert ausgeben</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20040318" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Pager- und Footerzeilen des DataGrid erweitern"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20040318.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Alexander Zeitler"><input type="hidden" name="AuthorEmail" value="azeitler@aspintranet.de"><input type="hidden" name="Artikel" value="20040318"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20040318.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
