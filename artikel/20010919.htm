<HTML>
<HEAD>
<TITLE>Erstellung eines Intranets in ASP (Teil 3) - Navigation</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Hiermit begr&uuml;&szlig;e ich Sie zum dritten Teil der Artikelserie zur Erstellung eines Intranets mit Active Server Pages. Wir werden heute eine Outlook-Leiste sowie die dazugeh&ouml;rige Administration programmieren.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,Navigation,Intranet,ASPIntranet,ASPIntranet.de,Leiste,Outlook,Iframe,HTML,Erstellung">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Erstellung eines Intranets in ASP (Teil 3) - Navigation</H1>
<p>
Geschrieben von: <a href="../autoren/alexanderzeitler.htm">Alexander Zeitler</a><br>
Kategorie: <a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010919"></SCRIPT>
</p>
<p>
Hiermit begr&uuml;&szlig;e ich Sie zum dritten Teil der Artikelserie zur Erstellung eines 
Intranets mit Active Server Pages. Wir werden heute die unten dargestellte Outlook-Leiste 
sowie die dazugeh&ouml;rige Administration programmieren.
</p>

<h2>Zielsetzung und Grundlagen</h2>

<p>
Zun&auml;chst noch einmal ein Screenshot dessen, was wir heute erstellen werden:
</p>

<IMG SRC="Bilder/200109/20010919_1.png" width="620" height="546" alt="" border="0">

<p>
Um Ihnen den Aufbau der Seiten etwas zu verdeutlichen, nun ein Schema des eingesetzten Framesets:
</p>

<IMG SRC="Bilder/200109/20010919_2.png" width="617" height="487" alt="" border="0">

<p>
Wie im Schema zu sehen ist, besteht das Intranet aus 3 (sichtbaren) Frames, welche in der im ersten Kursteil bereits 
behandelten Datei <b>default.asp</b> (im Hauptverzeichnis des Intranets) erzeugt werden. In dem Frameset wird noch ein 
vierter Frame definiert, der auf die Datei <b>empty.asp</b> verweist. Wie der Name der Datei bereits vermuten l&auml;&szlig;t, ist 
diese leer und dient nur optischen Zwecken in unserem Frameset.
</p>

<p>
Viel interessanter f&uuml;r uns und aus diesem Grund das n&auml;chste Objekt, mit dem wir uns besch&auml;ftigen werden, ist die Datei 
<b>olmenu.asp</b>, welche das Grundger&uuml;st f&uuml;r unsere Outlook-Leiste bereitstellt.
</p>

<p>
In dieser Datei mu&szlig; folgendes passieren: Es mu&szlig; abh&auml;ngig vom angemeldeten Benutzer und dessen Rechten f&uuml;r das Men&uuml; ein 
Frameset generiert werden. Jeder Hauptmen&uuml;punkt wie z.B. "Verwaltung" besteht aus zwei Frames - ein Frame, der den 
Titel beinhaltet und ein zweiter, der die Icons und Titel der darin enthaltenen Anwendungen beinhaltet.
</p>

<h2>Die Umsetzung</h2>

<p>
Soviel zur Theorie - schreiten wir zur Tat sprich Programmierung. Sicher ist Ihnen die Datei <b>callfunctions.asp</b> und 
ihre "Folgen" aus dem <a href="20010918.htm">zweiten Artikel</a> noch bekannt. Auch in der Datei 
<b>olmenu.asp</b> inkludieren wir diese wieder.
</p>

<p>
Nach der Dimensionierung diverser Variablen (deren Zweck Sie im Verlauf des Scripts erfahren werden) lesen wir zun&auml;chst 
die Session-Variable "Logged_In_User_ID" in eine lokale Variable ein:
</p>

<pre style="background='silver';">
StrLogged_In_User_Id = Session("Logged_In_User_ID")
</pre>

<p>
Zun&auml;chst m&uuml;ssen wir die Anzahl der Men&uuml;punkte auslesen, deren Wert im Feld "IstUntermenuevon" "0" ist. "0" steht hierbei 
f&uuml;r die h&ouml;chste Ebene des Men&uuml;s, d.h. wir wollen die Anzahl der Hauptmen&uuml;punkte ermitteln. Allerdings d&uuml;rfen nur 
diese Men&uuml;punkte ber&uuml;cksichtigt werden, f&uuml;r die der aktuell angemeldete Benutzer die Berechtigung besitzt. Den Grund 
weshalb wir die Anzahl der vorhandenen Hauptmen&uuml;punkte ben&ouml;tigen erfahren Sie sp&auml;ter - wichtig ist im Moment nur, da&szlig; 
wir ihn bereits jetzt ermitteln. Somit ergibt sich folgende Abfrage:
</p>

<pre style="background='silver';">
StrSQL = "SELECT COUNT(*) AS IntAnzahl FROM OLMenue INNER JOIN OLMenueRechte 
   ON (OLMenue.ID = OLMenueRechte.IDMenuepunkt) WHERE ((OLMenue.Istuntermenuevon=0) 
   AND (int(OLMenueRechte.idbenutzer)=" &amp; CLng(StrLogged_In_User_Id) &amp; "))"
Set rs = Conn.Execute(StrSQL)
</pre>

<p>
Zur Erkl&auml;rung der Abfrage arbeiten wir uns von innen nach au&szlig;em im SQL-String vor, beginnend beim JOIN-Statement. 
Dieses liest aus der Tabelle "OLMenue" alle Eintr&auml;ge, deren ID in der Tabelle "OLMenue" identisch ist mit der ID 
in der Tabelle "OLMenueRechte". Eingeschr&auml;nkt wird diese Abfrage (die ja die Eintr&auml;ge aller Benutzer lesen 
w&uuml;rde) durch die WHERE-Klausel, welche nur die Eintr&auml;ge selektiert welche in der Tabelle "OLMenue" im Feld 
"IstUntermenuevon" den Wert "0" haben und in der Tabelle "OLMenueRechte" im Feld "IDBenutzer" der ID des aktuell 
eingeloggten Users entsprechen. Diese Abfrage liefert uns alle Eintr&auml;ge, die den zuvor genannten Kriterien 
entsprechen - wir wollten jedoch die Anzahl der Datens&auml;tze. Auch f&uuml;r dieses Problem liefert uns SQL bereits eine 
L&ouml;sung: COUNT. Mit dem COUNT-Statement liefert uns SQL die Anzahl der ermittelten Datens&auml;tze und schreibt diese 
in einen Datensatz - in diesem Fall "IntAnzahl". Da die Anzahl der ermittelten Datens&auml;tze der einzige Wert ist, 
den die Abfrage zur&uuml;kliefert, k&ouml;nnen wir diesen - aus Performancegr&uuml;nden - auch &uuml;ber den Index abfragen. Dieser 
ist immer 0 - deshalb ergibt sich:
</p>

<pre style="background='silver';">
IntAnzahl = rs.Fields(0).Value
</pre>

<p>
Soweit - so gut - doch was passiert, wenn der Wert von IntAnzahl nach der Abfrage "0" ist? Oder besser - was ist 
der Grund hierf&uuml;r? Eigentlich gibt es zwei Gr&uuml;nde. Entweder hat der Benutzer f&uuml;r keinen der Men&uuml;punkte 
entsprechende Rechte, oder es existieren keine Men&uuml;punkte. Letzteres ist allerdings unm&ouml;glich, da ja bereits die 
Men&uuml;punkte "Verwaltung" und "Mitarbeiter" definiert sind (siehe <a href="20010918.htm">zweiten Artikel</a> 
- Anlegen des Mitarbeiters durch den Administrator) - somit bleibt als Grund nur nur noch das Fehlen der Rechte. 
Um herauszufinden, ob nun "IntAnzahl" den Wert "0" hat, verwenden wir folglich eine IF-Abfrage, die uns gegebenenfalls 
zu unserer Datei <b>error.asp</b> unter Angabe der entsprechenden Fehler-ID leitet:
</p>

<pre style="background='silver';">
If IntAnzahl = 0 Then Response.Redirect("/~include/error.asp?id=2 ")
</pre>

<p>
Sollte der Wert von "IntAnzahl" nicht "0" sein, fahren wir mit dem Aufbau des Framesets fort. 
</p>

<p>
Jetzt ben&ouml;tigen wir tats&auml;chlich die Datens&auml;tze, die den bei der vorherigen Abfrage genannten Kriterien entsprechen - 
also m&uuml;ssen wir unsere letzte Abfrage nur ohne das COUNT-Statement ausf&uuml;hren lassen:
</p>

<pre style="background='silver';">
StrSQL = "SELECT * FROM OLMenue INNER JOIN OLMenueRechte ON (OLMenue.ID = OLMenueRechte.IDMenuepunkt) 
(OLMenue.Istuntermenuevon=0) AND (OLMenueRechte.IdBenutzer = " &amp; CLng(StrLogged_In_User_Id) &amp; ")  
ORDER BY OLMenue.Menuepunkt desc"
Set rs = Conn.Execute(StrSQL)
</pre>

<p>
Nun definieren wir den Beginn unseres Framesets:
</p>

<pre style="background='silver';">
Response.Write("&lt;frameset rows=""")
</pre>

<p>
Da wir gem&auml;&szlig; dem Aussehen der Outlook-Leiste einen Men&uuml;punkt "aufgeklappt" darstellen m&ouml;chten, m&uuml;ssen wir 
diesen gr&ouml;&szlig;er darstellen, als die anderen. Hierzu bietet es sich an, gleich den ersten Datensatz als 
"aktiven" (also ausgeklappten) Men&uuml;punkt zu definieren: 
</p>

<pre style="background='silver';">
IntActive=rs("id")
</pre>

<p>
Jetzt k&ouml;nnen wir die einzelnen Men&uuml;punkte generieren lassen. Verschiedene Tests haben ergeben, da&szlig; die H&ouml;he der 
Titelleiste idealerweise bei 21 Pixeln liegt. Die Titelleisten werden immer angezeigt, auch wenn Men&uuml;punkte nicht 
ausgeklappt sind - anders verh&auml;lt es sich bei den Untermen&uuml;s, auf denen die Icons und Titel der Anwendungen 
untergebracht sind. Diese haben entweder den Wert "0" im eingeklappten Zustand oder "*" f&uuml;r maximal verf&uuml;gbare H&ouml;he 
(dies r&uuml;hrt von der HTML-Definition von Frames her) im ausgeklappten Zustand. Was wir also tun m&uuml;ssen, ist, alle 
Datens&auml;tze daraufhin zu pr&uuml;fen, ob sie aktiv (also ausgeklappt) sind und entsprechend jeweils zwei Frames mit den 
dazugeh&ouml;rigen H&ouml;henangaben zu definieren:
</p>

<pre style="background='silver';">
IntPosition = 0

Do While Not rs.Eof
    IntPosition = IntPosition + 1
    Response.Write("21,")
    If Int(rs("id")) = IntActive Then
        Response.Write("*,")
    Else
        Response.Write("0,")
    End If
    rs.MoveNext
    StrFrames = StrFrames &amp; "&lt;frame name="""
    StrFrames = StrFrames &amp; rs("menuepunkt")
    StrFrames = StrFrames &amp; "bar"""
    StrFrames = StrFrames &amp; " src=""olmenutitle.asp?title=" &amp; Server.UrlEncode(rs("menuepunkt"))
    StrFrames = StrFrames &amp; "&amp;id=" &amp; rs("id")
    StrFrames = StrFrames &amp; "&amp;position=" &amp; IntPosition
    StrFrames = StrFrames &amp; "&amp;Anzahl=" &amp; IntAnzahl
    StrFrames = StrFrames &amp; """ scrolling=no marginwidth=0 marginheigt=0 NORESIZE FRAMEBORDER=0&gt;" &amp; vbCrLf
    StrFrames = StrFrames &amp; "&lt;frame name=""" &amp; rs("menuepunkt")
    StrFrames = StrFrames &amp; """ src=""submenu.asp?id=" &amp; rs("id")
    StrFrames = StrFrames &amp; """ marginwidth=""0"" marginheigt=""0"" noresize frameborder=""0""&gt;" &amp; vbCrLf
Loop
</pre>

<p>
Parallel zum Auf bau des Framesets lassen wir auch die Frames generieren.
</p>

<p>
Zun&auml;chst weisen wir dem Z&auml;hler "IntPosition" den Wert "0" zu. Dieser wird bei jedem Durchlauf der 
Do-While-Schleife um den Wert "1" erh&ouml;ht. Wie der Name bereits vermuten l&auml;&szlig;t, gibt der Z&auml;hler an, an welcher 
Position sich der Frame befindet. Auch diese Information m&uuml;ssen wir sp&auml;ter auswerten und unsere Scripts entsprechend 
reagieren lassen.
</p>

<p>
Zun&auml;chst wird bei jedem Durchlauf ein neuer Frame definiert, welchem ein Name zugewiesen wird, der zum einen aus dem 
Men&uuml;punkt aus der Datenbank besteht und zum anderen aus dem Wort "bar". Weiterhin wird als Quelle die Datei 
<b>olmenutitle.asp</b> angegeben, gefolgt von den Querystring-Parametern "title", "id", "position" und "Anzahl" 
welche durch entsprechende Variablen gef&uuml;llt werden. Dieser Frame definiert die Men&uuml;leiste des jeweiligen Men&uuml;punkts.
</p>

<p>
Analog hierzu definieren wir einen zweiten Frame, welcher nur den Namen des Men&uuml;punkts aus der Datenbank-Tabelle tr&auml;gt 
und als Quelldatei auf die Datei <b>submenu.asp</b> verweist. Als Querystring-Parameter wird die ID des Men&uuml;punkts 
&uuml;bergeben. Dieser Frame beinhaltet sp&auml;ter die Fl&auml;che f&uuml;r die Icons und Titel der Anwendungen des Men&uuml;punkts.
</p>

<p>
Diese Schleife wird solange durchlaufen, bis alle Men&uuml;punkte, auf die der Benutzer Zugriff erh&auml;lt, in Frames 
umgewandelt wurden.
</p>

<p>
Danach schlie&szlig;en wir die Definition des Framesets mit folgenden Angaben ab:
</p>

<pre style="background='silver';">
Response.Write """ framespacing=""0"" name=""OLMENU"" frameborder=""0"" cols=""100%""&gt;" &amp; vbCrLf
</pre>

<p>
Wichtig ist hierbei, da&szlig; das Frameset mit einem Namen ("OLMENU") definiert wird, da wir hierauf sp&auml;ter mittels 
clientseitigem JavaScript zugreifen m&uuml;ssen.
</p>

<p>
Nun haben wir allerdings erst das Ger&uuml;st des Framesets definiert - nicht aber die Frames. Was noch fehlt, ist die 
Ausgabe von "StrFrames", welcher die Definitionen der Frames beinhaltet:
</p>

<pre style="background='silver';">
Response.Write StrFrames
</pre>

<p>
Somit haben wir unser Frameset-Grundger&uuml;st f&uuml;r die Outlook-Leiste komplett definiert und k&ouml;nnen dieses 
mit dem folgenden Befehl abschlie&szlig;en:
</p>

<pre style="background='silver';">
Response.Write "&lt;/frameset&gt;" &amp; vbCrLf
</pre>

<p>
Nachdem nun das Grundger&uuml;st erstellt worden ist, m&uuml;ssen wir uns um die Generierung der einzelnen Frameseiten k&uuml;mmern.
Wir beginnen mit der Erstellung der Titelleisten f&uuml;r die einzelnen Men&uuml;punkte - diese befinden sich, wie bereits 
erw&auml;hnt, in der Datei <b>olmenutitle.asp</b>.
</p>

<p>
Die Titelleisten m&uuml;ssen folgende Merkmale aufweisen: Sie m&uuml;ssen den Titel des jeweiligen Men&uuml;punkts anzeigen und, 
falls der Men&uuml;punkt geschlossen ist, m&uuml;ssen sie diesen bei einem Klick &ouml;ffnen. Hieraus resultiert eine 
Kombination aus server- und clientseitigem Code. Zun&auml;chst lesen wir die aus der Datei <b>olmenu.asp</b> &uuml;bergebenen 
Querystring-Parameter in lokale Variablen ein. 
</p>

<p>
Um den von Outlook bekannten "Aufklappeffekt" zu realisieren, m&uuml;ssen die Frames dynamisch, d.h. ohne erneutes Laden 
der Seiten "verschoben" (eigentlich ist es eine Gr&ouml;&szlig;en&auml;nderung) werden. Dies setzt allerdings wiederum voraus, da&szlig; 
das verwendete Skript wei&szlig;, welcher Frame welche Gr&ouml;&szlig;e haben mu&szlig; und um welchen Frame es sich handelt. Da wir diese 
Informationen bereits eingelesen haben (Querystring-Parameter),  ist das Erzeugen der Javascript-Funktion "show()" 
mittels ASP kein gr&ouml;&szlig;eres Problem mehr:
</p>

<pre style="background='silver';">
Response.Write "&lt;scr" &amp;amp; "ipt language=""javascript"" 
    ""type=txt/javascript""&gt;" &amp; VbCrLf
Response.Write "function show()" &amp; VbCrLf
Response.Write "{" &amp; VbCrLf
Response.Write("parent.OLMENU.rows=""")
For IntCount = 1 To Anzahl
    If Int(IntCount) = Int(Position) Then
        Response.Write("21,*,")
    Else
        Response.Write("21,0,")
    End if
Next
Response.Write(""";") &amp; VbCrLf
Response.Write "}" &amp; VbCrLf
Response.Write "&lt;/scr" &amp; "ipt&gt;" &amp; vbCrlf
</pre>

<p>
Zun&auml;chst wird das Frameset "OLMENU" angesprochen - oder genauer: dessen Frames, die untereinander liegen. 
Danach wird in einer Schleife, die bis zur Anzahl der vorhandenen Men&uuml;punkte z&auml;hlt, &uuml;berpr&uuml;ft, ob die Position 
des aktuellen Frames mit der &uuml;bergebenen Position &uuml;bereinstimmt. Ist dies der Fall, so wird definiert, da&szlig; beim 
Aufruf der Funktion "Show()" dieser Frame auf die maximal verf&uuml;gbare H&ouml;he vergr&ouml;&szlig;ert wird. Andernfalls wird an der 
Gr&ouml;&szlig;endefinition des Frames nichts ge&auml;ndert.
</p>

<p>
Sicher Fragen Sie sich,  weshalb die &%lt;script&gt; Bl&ouml;cke so zerlegt werden. Die L&ouml;sung des R&auml;tsels finden Sie 
<a href="20010530.htm">hier</a>.
</p>

<p>
Danach folgen zwei clientseitige Skripte "<i>OLBarMout()</i>" und " <i>OLBarMdow()</i>", welche der Optik dienen, d.h. sie 
simulieren den Button-Effekt der Titelleiste.
</p>

<p>
Schlie&szlig;lich erfolgt noch die Ausgabe des Titels des Men&uuml;punkts, auf dessen OnClick-Event auch der Aufruf der 
Funktion "<i>Show()</i>" erfolgt.
</p>

<p>
Was uns jetzt noch fehlt, damit die Outlook-Leiste komplett dargestellt wird, ist die Datei <b>submenu.asp</b>, welche 
die Icons und Anwendungstitel des Intranets darstellt. 
</p>

<p>
Auch hier m&ouml;chte ich Ihnen kurz die theoretischen Grundlagen der Seite n&auml;herbringen. Auf dieser Seite sollen alle 
Icons und Titel der Anwendungen dargestellt werden, welche sich unterhalb des aktiven Men&uuml;punktes befinden und f&uuml;r 
die der aktuell angemeldetete Benutzer Zugriffsrechte besitzt. Wie Sie sicher sofort festgestellt haben, hatten wir 
sehr &auml;hnliche Anforderungen bereits in einer der vorangegangenen Dateien. Entsprechend sieht auch die hierf&uuml;r ben&ouml;tigte 
Abfrage fast genauso aus:
</p>

<pre style="background='silver';">
StrSQL = "SELECT * FROM OLMenue INNER JOIN OLMenueRechte ON (OLMenue.ID = OLMenueRechte.IDMenuepunkt) 
    WHERE (int(OLMenue.istuntermenuevon) &lt;&gt; 0) AND (OLMenueRechte.idbenutzer = " &amp; 
    CLng(Logged_In_User_Id) &amp; ")  ORDER BY OLMenue.menuepunkt"
</pre>

<p>
Der einzige Unterschied besteht in dem Kriterium f&uuml;r die ID der auszuw&auml;hlenden Men&uuml;punkte. In der 
vorangegangenen Abfrage hatten wir alle Men&uuml;punkte selektiert, deren Wert im Feld "IstUntermenuevon" "0" war. 
Jetzt hingegen w&auml;hlen wir alle Eintr&auml;ge, die der via Querystring-Parameter &uuml;bergebenen ID entsprechen, aus.
</p>

<p>
Danach wird das Icon aus der Datenbank f&uuml;r die Anwendung angezeigt - zumindest teilweise:
</p>

<pre style="background='silver';">
Response.Write "&lt;img class=""OLMenu"" SRC=""images/ico_"
Response.Write rs("icon") &amp; ".gif """
Response.Write "width=""40"" height=""40"" border=""0"" alt="""
Response.Write rs("menuepunkt") &amp; """"
</pre>

<p>
Der darauffolgende Code bedarf zun&auml;chst einiger theoretischer Erkl&auml;rungen. Zu Beginn des ersten Teils hatten wir 
definiert, da&szlig; unser Intranet in der Lage sein soll, ohne Speicherung der Daten, zwischen den Intranet-Anwendungen 
wechseln zu k&ouml;nnen. Um dies zu erreichen verwenden wir f&uuml;r das Umschalten zwischen den Anwendungen den gleichen 
Ansatz bzw. die gleichen Befehle wie f&uuml;r das Umschalten bzw. Ausklappen der Frames in der Outlook-Leiste - 
allerdings diesmal in der horizontalen Richtung, d.h. wir generieren exakt die gleiche Anzahl an Frames, wie es 
Anwendungen gibt und &auml;ndern nur die Gr&ouml;&szlig;e der Frames. Dies geschieht in der Datei <b>content.asp</b>, welcher wir uns 
sp&auml;ter widmen werden. Wichtig f&uuml;r uns zu wissen ist im Moment nur, da&szlig; das dort definierte Frameset den Namen 
"frameinhalt" tr&auml;gt, um es via JavaScript aus unserer Datei <b>submenu.asp</b> ansprechen zu k&ouml;nnen. Hiermit sind 
wir auch am Ende der Theorie angekommen und wenden uns nun der technischen Umsetzung zu:
</p>

<pre style="background='silver';">
StrSQL1 = "SELECT * FROM OLMenue INNER JOIN OLMenueRechte ON (OLMenue.ID = OLMenueRechte.IDMenuepunkt) 
    WHERE (int(OLMenue.istuntermenuevon) &lt;&gt; 0) AND (OLMenueRechte.idbenutzer = " 
    &amp; CLng(Logged_In_User_Id) &amp; ") ORDER BY OLMenue.menuepunkt"
Set rs1 = Conn.Execute(StrSQL1)	
Do While Not rs1.Eof
    If rs1("id") = rs("id") Then
        Response.Write "100%,"
    Else
        Response.Write "0,"
End If
rs1.MoveNext
</pre>

<p>
Wir erzeugen eine zweite, mit der ersten identischen Abfrage und vergleichen die beiden ID's der Abfragen miteinander 
- auch hier m&uuml;&szlig;te Ihnen eine Analogie zur Generierung der Titelleiste auffallen - und tats&auml;chlich ist auch hier 
die weitere Vorgehensweise identisch: sind die ID's gleich, so wird beim OnClick-Event des Bildes der betroffene 
Frame von der Gr&ouml;&szlig;e "0" (also unsichtbar) auf die Gr&ouml;&szlig;e "100%" (voll sichtbar) ver&auml;ndert. Sobald die beiden 
Do-While-Schleifen komplett durchlaufen sind, ist zu jedem Icon der entsprechende OnClick-Event f&uuml;r den 
dazugeh&ouml;rigen Frame definiert. Au&szlig;erdem wird zur besseren &Uuml;bersicht zu jedem Icon der Titel der Anwendung 
ausgegeben und wir gelangen zum n&auml;chsten Schritt auf dem Weg zu unserem Intranet-Grundger&uuml;st.
</p>

<h2>Aufbau des Framesets f&uuml;r die Intranet-Anwendungen</h2>

<p>
Hierbei handelt es sich um die Datei <b>content.asp</b>, von der wir bereits wissen, welchem Zweck sie dient. 
Deshalb schreiten wir auch sofort zur Tat. Wie nicht anders zu erwarten war, bilden auch hier zwei JOIN-Abfragen 
die zentralen Elemente unseres Codes. Allerdings kommt hier eine dritte Variante f&uuml;r die Abfrage des Feldes 
"IstUntermenuevon" zum Einsatz: wir m&ouml;chten die Anzahl aller Datens&auml;tze und die Datens&auml;tze selbst, bei denen der 
Wert des Feldes "IstUntermenuevon" nicht "0" ist:
</p>

<pre style="background='silver';">
StrSQL = "SELECT COUNT(*) FROM OLMenue INNER JOIN OLMenueRechte ON 
    (OLMenue.ID = OLMenueRechte.IDMenuepunkt) WHERE ((int(OLMenue.Istuntermenuevon) 
    &lt;&gt; 0) AND (OLMenueRechte.idbenutzer = " &amp; CLng(Logged_In_User_Id) &amp; "))"
</pre>

<p>
sowie
</p>

<pre style="background='silver';">
StrSQL = "SELECT * FROM OLMenue INNER JOIN OLMenueRechte ON 
    (OLMenue.ID = OLMenueRechte.IDMenuepunkt) WHERE ((int(OLMenue.Istuntermenuevon) 
    &lt;&gt; 0) AND (OLMenueRechte.idbenutzer = " &amp; CLng(Logged_In_User_Id) &amp; ")) 
    ORDER BY OLMenue.menuepunkt"
</pre>

<p>
liefern uns die gew&uuml;nschten Ergebnisse und erzeugen mit dieser Schleife
</p>

<pre style="background='silver';">
For IntCount = 1 To Anzahl
    Response.Write "&lt;frame name=""frame"
    Response.Write rs("id")
    Response.Write """ src=""/"
    Response.Write rs("link")
    Response.Write "?menutitle="
    Response.Write rs("menuepunkt")
    Response.Write """ marginwidth=""0"" marginheight=""0"" scrolling=""yes"" frameborder=""0""&gt;"
    rs.MoveNext
Next
</pre>

<p>
die Frames, in denen die Anwendungen untergebracht sind.
</p>

<p>
Gem&auml;&szlig; unserer Definition, wie die Tabelle "OLMenue" aufgebaut ist, erhalten wir somit die ID's aller Anwendungen. 
Wir sind also am Ziel angelegt: das Grundger&uuml;st f&uuml;r unsere Intranet-Anwendung ist fertig!
</p>

<h2>Administration</h2>

<p>
Unser Grundger&uuml;st sieht nun zwar unseren W&uuml;nschen entsprechend aus, allerdings d&uuml;rfte sich die Pflege &uuml;ber das 
manuelle Eintragen, &Auml;ndern und L&ouml;schen von Men&uuml;punkten und Anwendungen schnell als umst&auml;ndlich und vor allem 
fehlertr&auml;chtig erweisen. Was liegt also n&auml;her, ein Tool zu programmieren, das uns diese Arbeit erleichtert?
</p>

<p>
Am besten w&auml;re es nat&uuml;rlich, wenn man das gew&uuml;nschte Ergebnis, sprich das Anlegen eines Men&uuml;punktes oder das 
L&ouml;schen einer Anwendung oder auch eines Rechtes f&uuml;r einen Mitarbeiter sofort als Outlook-Leiste angezeigt bek&auml;me. 
Verfolgt man diesen Gedankengang weiter, ergibt sich fr&uuml;her oder sp&auml;ter folgendes Ergebnis:
</p>

<IMG SRC="Bilder/200109/20010919_3.png" width="704" height="691" alt="" border="0">

<p>
Die Administration ist so aufgebaut, da&szlig; man alle Men&uuml;punkte und Anwendungen innerhalb der Men&uuml;punkte sieht. 
Die Basis hierf&uuml;r liefert die bereits besprochene Outlook-Leiste. Diese wurde erweitert, so da&szlig; bei allen 
Men&uuml;punkten und Anwendungen die M&ouml;glichkeit besteht, die Rechte der Benutzer zu bearbeiten und den Men&uuml;punkt bzw. 
die Anwendung zu bearbeiten oder zu l&ouml;schen. Au&szlig;erdem wurde ein weiterer fest integrierter Men&uuml;punkt eingebaut, 
der jederzeit das Anlegen neuer Men&uuml;punkte erlaubt. Ebenso wurde in jeden Men&uuml;punkt ein Anwendungssymbol integriert, 
welches das Anlegen neuer Verkn&uuml;pfungen f&uuml;r Anwendungen innerhalb der Men&uuml;punkte erlaubt.
</p>

<p>
Die technische Umsetzung m&ouml;chte ich Ihnen nicht l&auml;nger vorenthalten und wir beginnen mit der Erweiterung unserer 
Verzeichnisstruktur. Diese sollte jetzt wie folgt aussehen
</p>

<IMG SRC="Bilder/200109/20010919_4.png" width="123" height="162" alt="" border="0">

<p>
Die erste Datei, deren Inhalt f&uuml;r uns relevant ist, ist die Datei <b>default.asp</b> im Verzeichnis "/~admin/olmenu". 
Sie beinhaltet den Grundaufbau der Administrations-Seite. Bevor dieser Aufbau jedoch stattfinden darf, m&uuml;ssen wir 
&uuml;berpr&uuml;fen, ob es sich bei dem angemeldeten Benutzer um einen Administrator handelt, der das Men&uuml; administrieren darf.
Sie erinnern sich bestimmt daran, da&szlig; wir im zweiten Teil der Artikelserie bereits einen sehr &auml;hnlichen Fall hatten 
(Setup). Wir hatten uns damals die Funktion "Check_Admin" erstellt, auf die wir jetzt ohne Ver&auml;nderungen wieder 
zugreifen k&ouml;nnen. Hierzu inkludieren wir wieder unsere <b>functions.asp</b>, stellen eine Verbindung zur Datenbank 
her und rufen unsere Pr&uuml;ffunktion auf. Einzig die Fehlerbehandlung (error.asp) bekommt eine andere Fehler-ID &uuml;bergeben, 
die sich auf die Men&uuml;-Verwaltung bezieht und nicht auf das Intranet-Setup.
</p>

<p>
Der &uuml;brige Teil der Datei "default.asp" besteht aus einfachen HTML-Befehlen, welche mittels 
<a href="http://www.teamone.de/selfhtml/tcid.htm" target="_blank">Iframes</a> die Seite in zwei Teile spalten und somit das Grundger&uuml;st 
der Seite definieren. Hierbei wird im linken Iframe auf die Datei <b>welcome.asp</b> verwiesen, welche nur aus 
HTML-Code besteht und deshalb nicht weiter behandelt wird. Im rechten Frame wird die Datei <b>olmenu.asp</b> aufgerufen, 
welche das Frameset f&uuml;r die Outlook-Leiste darstellt. Da hier im Vergleich zur Datei <b>olmenu.asp</b>, welche im 
"normalen" Intranet verwendet wird einige Modifikationen vorgenommen wurden, werden wir uns diese nun genauer 
betrachten.
</p>

<p>
Die erste und wohl auff&auml;lligste Ver&auml;nderung ist die Vereinfachung der SQL-Abfragen:
</p>

<pre style="background='silver';">
StrSQL = "SELECT COUNT(*) AS IntAnzahl FROM OLMenue WHERE (OLMenue.Istuntermenuevon=0)"
</pre>

<p>
bzw.:
</p>

<pre style="background='silver';">
StrSQL = "SELECT * FROM OLMenue WHERE (OLMenue.Istuntermenuevon=0) ORDER BY OLMenue.Menuepunkt desc"
</pre>

<p>
Der Grund hierf&uuml;r ist, da&szlig; wir ja jetzt nicht mehr nur die Men&uuml;punkte und Anwendungen anzeigen m&ouml;chten, f&uuml;r die 
der angemeldete Benutzer Berechtigungen besitzt, sondern es sollen alle Men&uuml;punkte und Anwendungen angezeigt werden, 
um diese bearbeiten zu k&ouml;nnen.
</p>

<p>
Eine weitere Ver&auml;nderung, die notwendig wurde, ist die Definition des Framesets. Bisher wurden alle Frames 
dynamisch aus der Tabelle "OLMenue" erzeugt. Die &Auml;nderung besteht hierin, da&szlig; nun ein Frame immer angezeigt wird, 
welcher unseren bereits angesprochenen Frame zur Definition neuer Men&uuml;punkte beinhaltet:
</p>

<pre style="background='silver';">
Response.Write("&lt;frameset rows=""21,")
</pre>

<p>
Erst nach dessen Definition werden die dynamisch generierten Frames angezeigt:
</p>

<pre style="background='silver';">
IntActive=rs("id")
Do While Not rs.Eof
    Response.Write("21,")
    If Int(rs("id")) = IntActive Then
        Response.Write("*,")
    Else
        Response.Write("0,")
    End If
    rs.MoveNext
Loop
Response.Write """ framespacing=""0"" name=""OLMENU"" frameborder=""0"" cols=""100%""&gt;" &amp; vbCrLf
</pre>

<p>
Eine weitere &Auml;nderung, die mit dieser einhergeht, ist die Definition des Frames, den wir soeben im Frameset 
definiert haben:
</p>

<pre style="background='silver';">
Response.Write "&lt;frame src=""olmenutitleneu.asp?title=" &amp; Server.URLEncode("neuer Men&uuml;punkt") &amp; 
    """ name=""new"" id=""new"" frameborder=""0"" scrolling=""No"" noresize marginwidth=""0"" 
    marginheight=""0""&gt;" &amp; VbCrLf
</pre>

<p>
Dieser verweist auf die Datei <b>olmenutitleneu.asp</b>, welche nur eine minimale Ver&auml;nderung beim Onclick-Event 
erfahren hat. Diese sorgt nun nicht mehr f&uuml;r das Verschieben der Frames ("Aufklappen"), sondern f&uuml;r den Aufruf der 
Datei <b>new.asp</b>, welche uns das Anlegen neuer Men&uuml;punkte und Verkn&uuml;pfungen von Anwendungen erlaubt.
</p>

<p>
Wie Sie bei n&auml;herer Betrachtung des Onclick-Events der <b>olmenutitleneu.asp</b> sehen k&ouml;nnen, wird beim Aufruf der 
Datei <b>new.asp</b> der Querystring-Parameter "typ" &uuml;bergeben:
</p>

<pre style="background='silver';">
onclick="top.control.location.href='new.asp?typ=Menuepunkt'"&gt;
</pre>

<p>
Der Grund hierf&uuml;r ist, da&szlig; wir so nur eine Datei f&uuml;r das Anlegen von Men&uuml;punkten und Verkn&uuml;pfungen f&uuml;r Anwendungen 
ben&ouml;tigen.
</p>

<p>
Hierzu werten wir in der Seite "new.asp" den Querystring-Parameter "typ" mittels einer Select-Case-Abfrage aus. 
Die Abfrage des Namens f&uuml;r den neuen Men&uuml;punkts erfolgt mittels einfachen HTML-Befehlen und einer anschlie&szlig;enden 
Pr&uuml;fung durch JavaScript, welche wir bereits im zweiten Artikel ausf&uuml;hrlich behandelt haben.
</p>

<p>
Bevor wir uns dem Anlegen neuer Verkn&uuml;pfungen f&uuml;r Anwendungen zuwenden, betrachten wir die Datei <b>submenu.asp</b>, 
welche das neu hinzugekommene Icon f&uuml;r den Aufruf eben dieser Funktion beinhaltet.
</p>

<p>
Wie Sie bereits vermutet haben, wurden auch hier die SQL-Abfragen geschrumpft:
</p>

<pre style="background='silver';">
StrSQL = "SELECT * FROM OLMenue WHERE (OLMenue.istuntermenuevon= " &amp; Id &amp; ") ORDER BY OLMenue.menuepunkt"
</pre>

<p>
Die zweite SQL-Abfrage wurde komplett gel&ouml;scht, da der Aufruf des Framesets wie er im Normalbetrieb des 
Intranets verwendet wird, nicht notwendig ist.
</p>

<p>
Hinzugekommen hingegen ist die Definition des immer eingeblendeten Icons f&uuml;r die Definition neuer Anwendungen:
</p>

<pre style="background='silver';">
Response.Write "&lt;tr&gt;"
Response.Write "&lt;td class=""OLMenu"" align=""center""&gt;"
Response.Write "&lt;br&gt;"
Response.Write "&lt;img class=""OLMenu"""" SRC=""/~olmenu/images/ico_anwendung_neu.gif"" 
    onMouseOver=""OLMove()"" OnMousedown=""OLMdow()"" OnMouseUp=""OLMove()"" 
    OnMouseOut=""OLMout()"" style=""cursor: hand;"""" width=""40"" height=""40"" 
    border=""0"" alt="""" OnClick=""top.control.location.href='new.asp?typ=Anwendung'""&gt;"
Response.Write "&lt;br&gt;"
Response.Write "Neue Anwendung definieren"
Response.Write "&lt;/td&gt;"
Response.Write "&lt;/tr&gt;"
</pre>

<p>
Auch hier befindet sich der Aufruf der Datei "new.asp", jedoch mit dem Querystring-Paramenter "typ" f&uuml;r Anwendungen.
</p>

<p>
Eine weitere offensichtliche Erweiterung ist, da&szlig; Icons f&uuml;r das Anzeigen der Rechte L&ouml;schen und Bearbeiten 
hinzugekommen sind, welche auf die entsprechenden Dateien verweisen - dies gilt &uuml;brigens auch f&uuml;r die 
Men&uuml;punkte - hier die Icons im einzelnen:
</p>

<IMG SRC="Bilder/200109/20010919_5.png" width="8" height="11" alt="" border="0">

<p>
Anzeigen der Rechte
</p>

<IMG SRC="Bilder/200109/20010919_6.png" width="7" height="11" alt="" border="0">

<p>
Bearbeiten
</p>

<IMG SRC="Bilder/200109/20010919_7.png" width="11" height="11" alt="" border="0">

<p>
L&ouml;schen
</p>

<p>
Doch zun&auml;chst kehren wir nochmals zur Datei <b>new.asp</b> zur&uuml;ck, um die Parameter f&uuml;r neue Verkn&uuml;pfungen f&uuml;r 
Anwendungen abzufragen. Auch hier besteht der wesentliche Teil aus HTML-Befehlen und JavaScript-Pr&uuml;fungen. 
Die Auswahl des Men&uuml;punkts, in dem die neue Anwendung angelegt werden soll, geschieht &uuml;ber eine Selectbox. Die 
angezeigte Werte bezieht die Selectbox aus der Tabelle "OLMenue":
</p>

<pre style="background='silver';">
StrSQL = "SELECT * FROM OLMenue WHERE IstUntermenuevon = 0 ORDER BY Menuepunkt"
Set rs = Conn.Execute(StrSQL)
Response.Write "&lt;select name=""menuepunkt"" id=""menuepunkt""&gt;"
Response.Write "&lt;option value=""""&gt;" &amp; VbCrLf
Do While Not rs.Eof
    Response.Write "&lt;option value=""" &amp; rs("ID") &amp; """&gt;" &amp; rs("Menuepunkt") &amp; VbCrLf
    rs.MoveNext
Loop
rs.Close
Set rs = Nothing
Conn.Close
Response.Write "&lt;/select&gt;" &amp; VbCrLf
</pre>

<p>
Nach dem Klick auf den "anlegen"-Button gelangen wir auf die Seite <b>logik.asp</b>. Zun&auml;chst werten wir das 
versteckte Formularfeld "action" mittels einer Select-Case-Abfrage aus, soda&szlig; wir nur eine Datei f&uuml;r 
Funktionen (Bearbeiten, L&ouml;schen, Anlegen, Rechte) ben&ouml;tigen. Durch die bereits besprochene Datei <b>new.asp</b> wird 
hierf&uuml;r entweder der Wert "new_menuepunkt" oder "new_anwendung" &uuml;bergeben.
</p>

<p>
Da das Anlegen neuer Men&uuml;punkte und Anwendungen fast identisch ist, erkl&auml;re ich Ihnen das Speichern nur anhand 
der Anwendungen:
</p>

<pre style="background='silver';">
Dim StrAnwendung
Dim IntMenuepunkt
Dim StrLink
Dim StrIcon
StrAnwendung = Request.Form("anwendung")
IntMenuepunkt = Request.Form("menuepunkt")
StrLink = Request.Form("link")
StrIcon = Request.Form("icon")
Set rs = Server.CreateObject ("ADODB.Recordset")
rs.Cursortype = 1 'adOpenKeyset
rs.Locktype = 3 'adLockOptimistic
rs.Open "SELECT * FROM OLMenue", Conn
rs.AddNew
    rs.Fields("Menuepunkt") = StrAnwendung
    rs.Fields("IstUntermenuevon") = IntMenuepunkt
    rs.Fields("Link") = StrLink
    rs.Fields("Icon") = StrIcon
rs.Update
rs.Close
set rs = Nothing
Conn.Close
Response.Write "&lt;script language=""JavaScript""&gt;" &amp; VbCrLf
Response.Write "&lt;!--" &amp; VbCrLf
Response.Write "    {" &amp; VbCrLf
Response.Write "    top.OLMENU.location.reload();" &amp; VbCrLf
Response.Write "    self.location.href=""welcome.asp"";" &amp; VbCrLf
Response.Write "    }" &amp; VbCrLf
Response.Write "//--&gt;" &amp; VbCrLf
Response.Write "&lt;/script&gt;" &amp; VbCrLf
</pre>

<p>
Nach dem Auslesen der &uuml;bergebenen Formulardaten werden diese in die Tabelle "OLMenue" geschrieben. Nach dem 
Schreibvorgang werden die Seiten <b>olmenu.asp</b> und <b>welcome.asp</b> neu geladen.
</p>

<p>
Nachdem nun neue Men&uuml;punkte oder Anwendungen definiert sind, m&uuml;ssen diesen f&uuml;r die einzelnen Benutzer Rechte 
zugewiesen werden. Dies geschieht &uuml;ber die Datei <b>rights.asp</b>, welcher via Querystring-Parameter die 
ID des Men&uuml;punkts oder der Anwendung &uuml;bergeben wird.
</p>

<p>
Nach den bereits &uuml;blichen Includes, dimensionieren der Variablen und der Verbindung zur Datenbank, wird zun&auml;chst der 
Name des Men&uuml;punkts oder der Anwendung aus der Tabelle "OLMenue" gelesen und angezeigt. Hierbei ist keine 
Unterscheidung zwischen Men&uuml;punkten und Anwendungen notwendig, da sich die Rechtevergabe bei beiden identisch 
gestaltet.
</p>

<p>
In der darauf folgenden SQL-Abfrage:
</p>

<pre style="background='silver';">
StrSQL = "SELECT Mitarbeiter.Vorname, Mitarbeiter.Nachname, NetzwerkUser.ID FROM Mitarbeiter 
INNER JOIN NetzwerkUser ON  Mitarbeiter.NetzwerkUser = NetzwerkUser.ID WHERE NetzwerkUser.ID IN 
(SELECT IDBenutzer FROM OLMenueRechte WHERE (IDMenuepunkt =  " &amp; ID &amp; ") AND (IstLoeschbar = TRUE)) 
ORDER BY Mitarbeiter.Nachname, Mitarbeiter.Vorname"
</pre>

<p>
werden alle Mitarbeiter ausgelesen, deren zugeordneter Netzwerkbenutzername Berechtigungen zum &Ouml;ffnen bzw. 
Anzeigen des Men&uuml;punkts oder der Anwendungen besitzt. Hierbei verwenden wir eine JOIN-Abfrage, die mittels des 
SQL-Operators "IN" mit einer SELECT-Abfrage verkn&uuml;pft wird. Hierdurch werden zun&auml;chst alle Benutzer-Ids aus der 
Tabelle "OLMenueRechte" gelesen, die bereits l&ouml;schbare Rechte f&uuml;r den aktuellen Men&uuml;punkt (bzw. die Anwendung) 
besitzen. Durch den <a href="http://sqlcourse2.com/setoper.html" target="_blank">IN-Operator</a> werden aus der Tabelle "Mitarbeiter" in der 
JOIN-Abfrage nur diese Mitarbeiter ausgew&auml;hlt, deren Netzwerkuser (deshalb die JOIN-Abfrage) in der vorher 
genannten SELECT-Abfrage enthalten sind.
</p>

<p>
Diese werden, wie weiter oben in diesem Artikel bereits besprochen, in einer Selectbox dargestellt, welche wiederum 
mittels JavaScript beim Klick auf den Button "Rechte entziehen" &uuml;berpr&uuml;ft wird (auch diese Funktion haben wir 
heute bereits besprochen - Anlegen neuer Anwendungen).
</p>

<p>
Auf der gleichen Seite befindet sich auch die Funktion zum Anlegen der Rechte f&uuml;r die Mitarbeiter. Diese 
unterscheidet sich nur in der SQL-Abfrage und den JavaScriptbezeichnern. Hier die SQL-Abfrage:
</p>

<pre style="background='silver';">
StrSQL = "SELECT Mitarbeiter.Vorname, Mitarbeiter.Nachname, NetzwerkUser.ID FROM Mitarbeiter 
INNER JOIN NetzwerkUser ON  Mitarbeiter.NetzwerkUser = NetzwerkUser.ID WHERE NetzwerkUser.ID NOT 
IN (SELECT IDBenutzer FROM OLMenueRechte WHERE IDMenuepunkt =  " &amp; ID &amp; ") ORDER BY 
Mitarbeiter.Nachname, Mitarbeiter.Vorname"
</pre>

<p>
Der Unterschied der SQL-Abfrage liegt in dem Schl&uuml;sselwort "NOT", welche die vorhergehende Abfrage "umdreht", d.h. 
es werden alle Mitarbeiter ausgew&auml;hlt, deren Netzwerkbenutzer keine Berechtigungen f&uuml;r den Men&uuml;punkt oder die 
Anwendung besitzen.
</p>

<p>
Nach Auswahl eines der Mitarbeiter in einer der beiden Boxen und dem Klick auf den entsprechenden Button gelangen 
wird wieder auf die Seite <b>logik.asp</b>. Da die Funktion f&uuml;r das Anlegen neuer Rechte sehr &auml;hnlich mit dem 
Anlegen der Anwendungen bzw. Men&uuml;punkte ist, m&ouml;chte ich hierauf nicht mehr n&auml;her eingehen. Stattdessen betrachten wir 
die Funktion zum L&ouml;schen der Rechte des jeweiligen Benutzers. Allerdings stellt auch diese keine gro&szlig;en Probleme dar:
</p>

<pre style="background='silver';">
Case "del_right"
    Dim IntMenuepunktID
    Dim IntBenutzerID
    IntMenuepunktID = Request.Form("menuepunkt")
    IntBenutzerID = Request.Form("ma_allowed")
    If (IntBenutzerID &lt;&gt; "") AND (IsNumeric(IntBenutzerID) = True) AND (IntMenuepunktID 
            &lt;&gt; "") AND (IsNumeric(IntMenuepunktID) = True) Then
        StrSQL = "DELETE * FROM OLMenueRechte WHERE (IDMenuepunkt = " &amp; IntMenuepunktID 
            &amp; ") AND (IDBenutzer = " &amp; IntBenutzerID &amp; ")"
        Set rs = Conn.Execute(StrSQL)
        Set rs = Nothing
        Conn.Close
        Response.Write "&lt;script language=""JavaScript""&gt;" &amp; vbCrLf
        Response.Write "&lt;!--" &amp; VbCrLf
        Response.Write "    {" &amp; VbCrLf
        Response.Write "    top.OLMENU.location.reload();" &amp; VbCrLf
        Response.Write "    self.location.href=""rights.asp?id=" &amp; IntMenuepunktID &amp; """;" &amp; VbCrLf
        Response.Write "    }" &amp; VbCrLf
        Response.Write "//--&gt;" &amp; VbCrLf
        Response.Write "&lt;/script&gt;" &amp; VbCrLf
    Else
        Response.Write "Schwerwiegender Fehler. Bitte starten Sie die Verwaltung neu."
    End If
</pre>

<p>
Entsprechend des Case-Falls "del_right" (definiert &uuml;ber das Hidden-Formularfeld auf der vorhergehenden Seite) 
werden mittels der SQL-DELETE-Anweisung alle Eintr&auml;ge aus der Tabelle "OLMenueRechte" gel&ouml;scht, deren Benutzer-ID 
und Men&uuml;punkt-ID mit den via Querystring &uuml;bergebenen Werten &uuml;bereinstimmen. Nach diesem Vorgang werden, wie bei 
allen anderen Funktionen auch, die Frame-Inhalt neu geladen, wobei im linken Frame wieder auf die Datei <b>rights.asp</b>
(unter erneuter Angabe des Men&uuml;punkts) verwiesen wird. Allerdings wird diese Funktion nur dann ausgef&uuml;hrt, wenn 
sichergestellt ist, da&szlig; die Eingaben nicht manipuliert wurden, sprich die &uuml;bergebenen Werte weder gel&ouml;scht noch 
verf&auml;lscht wurden. Der Sinn dieser &Uuml;berpr&uuml;fung ist Ihnen sicher noch bekannt aus dem ersten Teil (<b>error.asp</b>).
</p>

<p>
Das L&ouml;schen der Anwendungen bzw. Men&uuml;punkte m&ouml;chte ich nur kurz ansprechen, da es sich hierbei um eine simple 
ja/nein-Abfrage handelt, welche sich aus den bisher behandelten Themen ergibt. Die hierzu verwendete Datei ist die 
<b>delete.asp</b>, welcher wieder via Querystring die ID des Men&uuml;punkts bzw. der Anwendung, die gel&ouml;scht 
werden soll, mitgeteilt wird. Die DELETE-Statements entsprechen im wesentlichen denen, die wir soeben f&uuml;r das 
L&ouml;schen der Benutzerrechte angewendet haben - einzig die Namen der Tabellen bzw. Felder haben sich ge&auml;ndert.
</p>

<p>
Was uns jetzt zur Vollst&auml;ndigkeit unserer Men&uuml;-Verwaltung noch fehlt, ist das Bearbeiten bestehender Men&uuml;punkte bzw. 
Anwendungen. In der Datei <b>change.asp</b> befinden sich die entsprechenden Anweisungen. Der Aufbau des HTML-Ger&uuml;sts 
ist nahezu identisch mit dem f&uuml;r das Anlegen neuer Anwendungen bzw. Men&uuml;punkte. Die &Auml;nderungen liegen im ASP-Code, 
welcher anhand der Men&uuml;punkt- bzw. Anwendungs-ID aus der Tabelle "OLMenue" die bereits eingetragenen Werte liest 
und diese in den HTML-Formularfeldern anzeigt.
</p>

<p>
Das Anzeigen des Men&uuml;punkts, welchem die Anwendung zugeordnet ist, geschieht in einer Selectbox. Der hierf&uuml;r ben&ouml;tigt 
Code sieht wie folgt aus:
</p>

<pre style="background='silver';">
Response.Write "&lt;td&gt;" &amp; VbCrLf
StrSQL1 = "SELECT * FROM OLMenue WHERE IstUntermenuevon = 0 ORDER BY Menuepunkt"
Set rs1 = Conn.Execute(StrSQL1)
Response.Write "&lt;select name=""menuepunkt"" id=""menuepunkt""&gt;"
Response.Write "&lt;option value=""""&gt;" &amp; VbCrLf
Do While Not rs1.Eof
    Response.Write "&lt;option value=""" &amp; rs1("ID")
    If rs1("id") = rs("istuntermenuevon") Then 
        Response.Write """ SELECTED&gt;"
    Else
        Response.Write """&gt;"
    End If
    Response.Write rs1("Menuepunkt") &amp; VbCrLf
    rs1.MoveNext
Loop
Response.Write "&lt;/select&gt;" &amp; VbCrLf
Response.Write "&lt;/td&gt;" &amp; VbCrLf
</pre>

<p>
Zus&auml;tzlich zur ersten Abfrage starten wir eine zweite SQL-Abfrage, welche nur die Men&uuml;punkte anzeigt. Diese werden 
dann in der Selectbox dargestellt - allerdings nicht ohne vorher eine If-Abfrage zu durchlaufen, welche &uuml;berpr&uuml;ft, ob 
die ID des Men&uuml;punkts aus der zweiten Abfrage identisch ist mit dem Eintrag von "IstUntermenuevon" aus der 
ersten Abfrage, also dem Men&uuml;eintrag, welchem die Anwendung untergeordnet ist. Ist dies der Fall, so wird unter 
Verwendung des Schl&uuml;sselworts "SELECTED" diese Option der Selectbox als bereits voreingestellter Wert beim Laden der 
Seite angezeigt.
</p>

<p>
Auch von dieser Seite aus gelangen wir durch einen Klick auf den "Ja"-Button auf die Seite <b>logik.asp</b> und 
entsprechend der auszuf&uuml;hrenden Aktion in den Bereich "change_menuepunkt" bzw. "change_anwendung". Da "change_anwendung"
die gr&ouml;&szlig;ere der beiden Funktionen ist und "change_menuepunkt" somit auch ohne Erkl&auml;rung zu verstehen ist, 
erkl&auml;re ich diese:
</p>

<pre style="background='silver';">
Case "change_anwendung"
    ID = Request.Form("ID")
    If (ID &lt;&gt; "") AND (isNumeric(ID) = True) Then
        StrAnwendung = Request.Form("anwendung")
        IntMenuepunkt = Request.Form("menuepunkt")
        StrLink = Request.Form("link")
        StrIcon = Request.Form("icon")
        Set rs = Server.CreateObject ("ADODB.Recordset")
        rs.Cursortype = 1 'adOpenKeyset
        rs.Locktype = 3 'adLockOptimistic
        rs.Open "SELECT * FROM OLMenue where ID = " &amp; ID &amp; "", Conn
        If rs.Eof AND rs.Bof Then
            Response.Write "Schwerwiegender Fehler. Bitte starten Sie die Verwaltung neu."
        Else
            rs.Fields("Menuepunkt") = StrAnwendung
            rs.Fields("IstUntermenuevon") = IntMenuepunkt
            rs.Fields("Link") = StrLink
            rs.Fields("Icon") = StrIcon
        rs.Update
        rs.Close
        set rs = Nothing
        Conn.Close
        Response.Write "&lt;scr" &amp; "ipt language=""JavaScript""&gt;" &amp; VbCrLf
        Response.Write "&lt;!--" &amp; VbCrLf
        Response.Write "	{" &amp; VbCrLf
        Response.Write "	top.OLMENU.location.reload();" &amp; VbCrLf
        Response.Write "	self.location.href=""welcome.asp"";" &amp; VbCrLf
        Response.Write "	}" &amp; VbCrLf
        Response.Write "//--&gt;" &amp; VbCrLf
        Response.Write "&lt;/scr" &amp; "ipt&gt;" &amp; VbCrLf
        End If
    Else
        Response.Write "Schwerwiegender Fehler. Bitte starten Sie die Verwaltung neu."
	End If
</pre>

<p>
Nach den bereits bekannten Aktionen, wie dem Auslesen der &uuml;bergebenen Formularfelder und dem Pr&uuml;fen der ID auf 
Manipulation, rufen wir eine SQL-Anweisung auf, welche uns den zu ver&auml;ndernden Datensatz aus der Tabelle 
"OLMenue" liefert. Sofern ein Datensatz zur&uuml;ckgeliefert wird, &uuml;berschreiben wir dessen Werte mit den neuen 
Eingaben. Anschlie&szlig;end speichern wir diese &Auml;nderungen mittels <i>rs.Update</i> in die Tabelle zur&uuml;ck. Der nachfolgende 
JavaScript-Teil erledigt den Reload der Frames.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Somit sind wir am Ende des dritten Artikels zur Erstellung eines Intranet mit ASP angelangt. 
</p>

<p>
Die volle Funktionalit&auml;t des heute erarbeiteten Codes werden Sie morgen einsetzen k&ouml;nnen, denn dann werden wir 
den aus dem zweiten Teil bekannten Mitarbeiter-Assistenten f&uuml;r weitere Mitarbeiter zug&auml;nglich machen und das 
Grundger&uuml;st des Intranets weiter vervollst&auml;ndigen. Au&szlig;erdem werden wir zur Verwaltung der Mitarbeiter ein 
Treeview einf&uuml;hren und eine Navigationsleiste erstellen.
</p>


<h4>Redaktioneller Hinweis</h4>
<p>
Aufgrund des Umfanges des Intranets - und der damit m&ouml;glichen Fehlerquellen bei der Umsetzung auf den unterschiedlichen
Serverkonfigurationen der Leser - bittet der Autor, die Anfragen &uuml;ber &ouml;ffentliche Foren
(so zum Beispiel <a href="http://www.aspgerman.com/aspgerman/listen/anmelden/aspGerman.asp" target="_blank">aspGerman</a>)
oder die <a href="http://www.aspintranet.de/aspintranet/mailingliste../default.htm?a=106" target="_blank">ASPIntranet Mailingliste</a>
abzuwickeln. Fehler in ASPIntranet können Sie auf der 
<a href="http://www.aspintranet.de/aspintranet/reportabug../default.htm?a=109" target="_blank">Bugreport-Seite</a> 
von ASPIntranet melden.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010919.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20010917.htm">Erstellung eines Intranets in ASP - Grundlagen</a><br>
<a href="20010918.htm">Erstellung eines Intranets in ASP (Teil 2) - Setup</a><br>
<a href="20010920.htm">Erstellung eines Intranets in ASP (Teil 4) - Mitarbeiter</a><br>
<a href="20010921.htm">Erstellung eines Intranets in ASP (Teil 5) - Application Day</a><br>
<a href="20010530.htm">Redirects mit Frame-Targets</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Easpintranet%2Ede%2F">ASPIntranet.de</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fsqlcourse2%2Ecom%2Fsetoper%2Ehtml">IN Operator</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Eteamone%2Ede%2Fselfhtml%2Ftcid%2Ehtm">selfhtml: Iframe</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010919" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Erstellung eines Intranets in ASP (Teil 3) - Navigation"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010919.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Alexander Zeitler"><input type="hidden" name="AuthorEmail" value="azeitler@aspintranet.de"><input type="hidden" name="Artikel" value="20010919"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010919.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
