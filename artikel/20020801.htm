<HTML>
<HEAD>
<TITLE>MS IE WebControls 101</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Die MS Internet Explorer WebControls sind eine kleine Erg&auml;nzung der bestehenden feature-rich ASP.NET Server Controls. Separat zum Download angeboten, ersparen diese Server Controls einiges an Schreibarbeit um komplexe ASP.NET Seiten zu erstellen.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,WebControls,ASP.NET Web Matrix,MultiPage,TabStrip,Toolbar,TreeView,IE Controls,User Control,register,IDE">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>MS IE WebControls 101</H1>
<p>
Geschrieben von: <a href="../autoren/christianholm.htm">Christian Holm</a><br>
Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20020801"></SCRIPT>
</p>
<p>
Die MS Internet Explorer WebControls sind eine kleine Erg&auml;nzung der bestehenden "Feature-rich"
ASP.NET Server Controls. Separat zum Download angeboten, ersparen diese Server Controls einiges
an Schreibarbeit um komplexe ASP.NET Seiten erstellen zu k&ouml;nnen. Dieser Artikel geleitet Sie von 
der Installation bis zu den wichtigsten Details dieser Server Controls.
</p>

<p>
Obwohl die Installation die Assembly im GAC registriert, bleiben die IE WebControls in den von Microsoft
angebotenen IDEs (Visual Studio .NET bzw. 
<a href="http://www.asp.net/webmatrix../default.htmx?tabindex=4&tabid=46" target="_blank">ASP.NET Web Matrix</a>) auf den ersten
Blick &quot;verborgen&quot;. Da in einer ASP.NET Seite auf diese Controls referenziert
werden mu&szlig; und diese eine Vielzahl an Anpassungsm&ouml;glichkeiten bieten, ist es empfehlenswert eine IDE zu verwenden (spart
Zeit).
</p>

<p>
Da wie schon erw&auml;hnt, die insgesamt vier Controls umfangreich konfiguriert werden k&ouml;nnen, konzentriert sich dieser Artikel auf
eine Auswahl der h&auml;ufigsten Problemstellungen mit einfachen Beispielen und erhebt daher keinen Anspruch auf
Vollst&auml;ndigkeit.
</p>

<h2>Installation und Konfiguration</h2>

<p>
Diese gestaltet sich nach dem erfolgreichen 
<a href="http://www.asp.net/ControlGallery../default.htmx?Category=38&tabindex=2"  target="_blank">Download</a> 
recht einfach: ein Doppelklick auf das Setup und die Beantwortung der Setup-Standardfragen gen&uuml;gt. Wenn Sie nun
voller Erwartung VS .NET oder ASP.NET Web Matrix &ouml;ffnen, werden Sie die neuen Controls zun&auml;chst vergeblich suchen.
Da es sich um zwei verschiedene IDE-Produkte handelt, erfolgt auch die Einbindung der Controls in die &quot;Toolbox&quot;
unterschiedlich. Beginnen wir mit dem kommerziellen Produkt, Visual Studio .NET.
</p>

<h3>Einbindung in VS .NET</h3>

<p>
Klicken Sie mit der rechten Maustaste auf einen leeren Bereich der &quot;Toolbox&quot; um das Kontextmen&uuml;
zu erhalten. Im &quot;Customize Toolbox&quot; Dialog klicken Sie auf den Reiter &quot;.NET Framework Components&quot;.
Dort scrollen Sie in der Listbox bis Sie die Eintr&auml;ge &quot;MultiPage&quot;, &quot;TabStrip&quot;, 
&quot;Toolbar&quot; und &quot;TreeView&quot; sehen und haken diese auch an. Wichtig dabei ist, da&szlig;
in der Spalte &quot;Namespace&quot; der Eintrag &quot;Microsoft.Web.UI.WebControls&quot; zu sehen ist.
</p>

<IMG SRC="Bilder/200208/20020801_01.png" width="660" height="480" alt="" border="0">

<p>
Sollten Sie entweder die Server Control Eintr&auml;ge oder den genannten Verweis auf den Namespace nicht sehen, bleibt
Ihnen (nach erfolgreicher Installation) nichts anderes &uuml;brig als diese h&auml;ndisch
in die IDE einzubinden. Klicken Sie daher auf &quot;Browse&quot; und suchen Sie nach der
&quot;Microsoft.Web.UI.WebControls.dll&quot; Datei, die sich in dem von Ihnen gew&auml;hlten Installationspfad der
Controls befindet.
</p>

<p>
Wenn diese Schritte erfolgreich waren, sollten Sie von nun an in einem offenen ASP.NET Projekt in der Design-Ansicht
in der Toolbox unter dem Tab &quot;WebControls&quot; die Control-Eintr&auml;ge sehen. In der Design-Ansicht
k&ouml;nnen Sie diese nun bequem per Doppelklick oder Drag &amp; Drop auf Ihren ASP.NET Seiten einf&uuml;gen. Einige
Controls m&uuml;ssen aber zus&auml;tzlich in der HTML-Ansicht angepa&szlig;t werden - das Grundger&uuml;st erhalten Sie aber in der 
Design-Ansicht.
</p>

<h3>Einbindung im ASP.NET Web Matrix Project</h3>

<p>
Klicken Sie auch hier mit der rechten Maustaste in einen leeren Bereich der Toolbox um das Kontextmen&uuml; zu erhalten.
Dann w&auml;hlen Sie &quot;Add Local Toolbox Components&quot;. Nun scrollen Sie in der Listbox bis zum Eintrag
&quot;Microsoft.Web.UI.WebControls&quot; (vorausgesetzt die Assembly konnte sich im GAC registrieren): 
</p>

<IMG SRC="Bilder/200208/20020801_02.png" width="573" height="458" alt="" border="0">

<p>
Ihre Auswahl best&auml;tigen Sie mit dem &quot;Add&quot; Button und schlie&szlig;en den Dialog mit &quot;OK&quot;. Nun k&ouml;nnen
Sie die Server Controls in den beiden IDEs von Microsoft verwenden. Jetzt k&ouml;nnen wir uns endlich dem eigentlichen
Thema des Artikels - den IE WebControls - widmen.
</p>

<h2>Die vier IE WebControls kurz vorgestellt</h2>

<p>
In dem Download sind vier ASP.NET Server Controls enthalten - &quot;MultiPage&quot;, &quot;TabStrip&quot;, 
&quot;Toolbar&quot; und &quot;TreeView&quot;:
</p>

<ul>
<li><b>MultiPage:</b> Zeigt mehrere zugeh&ouml;rige PageView Elemente (Collection) in einem Browserfenster an.</li>
<li><b>TabStrip:</b> Reiter-Kartei, haupts&auml;chlich zur einfacheren Navigation im Zusammenhang mit der MultiPage Control.</li>
<li><b>Toolbar:</b> Konfigurierbare Werkzeugleiste mit mehreren einbettbaren Controls f&uuml;r den IE.</li>
<li><b>TreeView:</b> Explorerm&auml;&szlig;ige, XML-basierte Gliederung von Parent- und Childelementen (Nodes).</li>
</ul>

<p>
Da die Server Controls XML/DHTML emittieren sind diese (evtl. mit Einschr&auml;nkungen) abw&auml;rts bzw. zu anderen Browsern
der neueren Generation kompatibel. Die nun folgenden Beispiele f&uuml;r die einzelnen Server Controls stellen die
prinzipielle Funktionsweise dar und erheben nicht den Anspruch auf die vollst&auml;ndige Darbietung aller ihrer Funktionen.
</p>

<h3>Die MultiPage Control</h3>

<p>
Mit der MultiPage ASP.NET Server Control k&ouml;nnen Sie mehrere PageView Elemente in einer Collection zusammenfassen.
Damit lassen sich einfachst Internet Explorer basierende Wizards oder datengebundene Formulare erstellen. 
Die PageView Elemente k&ouml;nnen dabei sowohl statische HTML-Tags als auch ASP.NET Web Controls enthalten. Da eine
Navigation durch die einzelnen PageView Elemente nicht automatisch generiert wird, mu&szlig; man zum Beispiel 
die ASP.NET Button Control f&uuml;r Navigations-Buttons extra erstellen.
</p>

<p>
Die MultiPage Control ist in ihrer Grundform eher spartanisch und erinnert an eine WML-Seite. Um dies zu &auml;ndern
kann man sich eines CSS bedienen. Man bindet die Formatangaben entweder direkt in die Control bzw. in die Controls
des PageView-Elements oder noch besser als separate *.CSS Datei ein. Das (sehr) einfache, nun folgende Beispiel  
soll das Besprochene in Sourcecode und Screenshot verdeutlichen.
</p>

<p>
Beginnen wir mit dem Sourcecode; da dieses Beispiel nur Demozwecke erf&uuml;llt, hat der Sourcecode auch keine
komplexere Funktion. Zuerst die notwendigen Referenzen zu der Assembly und der &lt;script&gt;-Block
(<b>Multipage.aspx</b>):
</p>

<pre style="background='silver';">
&lt;%@ Page Language="C#" Debug="true" %&gt;
&lt;%@ Register TagPrefix="iewc" Namespace="Microsoft.Web.UI.WebControls" 
    Assembly="Microsoft.Web.UI.WebControls, Version=1.0.2.226, 
    Culture=neutral, PublicKeyToken=31bf3856ad364e35" %&gt;
&lt;script runat="server"&gt;

    void Page_Load(object Sender, EventArgs e)
    {
        if(!Page.IsPostBack)
        {
            btnPrev.Enabled = false;
        }
    
        else
        {
           if(0 == iewcMPage.SelectedIndex)
            {
                btnPrev.Enabled = false;
            }
    
            if(iewcMPage.Controls.Count - 1 == iewcMPage.SelectedIndex)
            {
                btnNext.Enabled = false;
            }
        }
    
    }
...
</pre>

<p>
Nach den obligatorischen Referenzen auf die Assembly et al folgt die &quot;Page_Load&quot; Methode.
Da im sp&auml;teren Teil des Sourcecodes die <i>SelectedIndex</i> Property auf das erste PageView Element (Index 0)
gesetzt ist, soll der Navigationsbutton f&uuml;r die &quot;vorige Seite&quot; beim erstmaligen Aufruf der ASP.NET 
Seite deaktiviert sein (<i>btnPrev.Enabled = false;</i>). Wenn ein PostBack auf die Seite stattgefunden
hat, soll sichergestellt werden, da&szlig;
wenn das erste bzw. letzte PageView Element erreicht ist der jeweilige Button, der die Grenze &uuml;berschreiten w&uuml;rde,
deaktiviert wird.
</p>

<p>
Es folgt die (einfachste) Implementation von Navigationsbuttons:
</p>

<pre style="background='silver';">
...
    //Nav Buttons
    
    void btnPrev_Click(object sender, EventArgs e)
    {
        if(0 &lt; iewcMPage.SelectedIndex)
        {
            iewcMPage.SelectedIndex--;
            btnNext.Enabled = true;
        }
    }
    
    void btnNext_Click(object sender, EventArgs e)
    {
        if((iewcMPage.Controls.Count - 1) &gt; iewcMPage.SelectedIndex)
        {
           iewcMPage.SelectedIndex++;
           btnPrev.Enabled = true;
        }
    }
&lt;/script&gt;
</pre>

<p>
Im HTML-Teil der ASP.NET Seite wird die MultiPage Control angepa&szlig;t, diverse HTML-Tags und andere ASP.NET
Server Controls werden eingebunden:
</p>

<pre style="background='silver';">
&lt;body&gt;
    &lt;form runat="server"&gt;
        &lt;p class="P1"&gt;
            &lt;asp:Label id="lblTitle" runat="server"&gt;MS IE WebControls: MultiPage Demo&lt;/asp:Label&gt;
        &lt;/p&gt;
        &lt;p&gt;
            &lt;iewc:MultiPage id="iewcMPage" runat="server" Height="151px" 
                Width="100%" ForeColor="Black" BackColor="White" BorderWidth="1px" 
                BorderStyle="Solid" BorderColor="Black"&gt;
                &lt;iewc:PageView id="Page1"&gt;
                    &lt;h2 class="H2" &gt;Page 1 
                    &lt;/h2&gt;
                    &lt;p class="P2"&gt;
                        Static Text of Page 1 
                    &lt;/p&gt;
                &lt;/iewc:PageView&gt;
                &lt;iewc:PageView id="Page2"&gt;
                    &lt;h2 class="H2"&gt;Page 2 
                    &lt;/h2&gt;
                    &lt;p class="P2"&gt;
                        &lt;asp:Label Text="ASP.NET WebControls" runat="server" /&gt;
                        &lt;asp:Button Text="Click" runat="server" /&gt;
                    &lt;/p&gt;
                &lt;/iewc:PageView&gt;
                &lt;iewc:PageView id="Page3"&gt;
                    &lt;h2 class="H2"&gt;Page 3 
                    &lt;/h2&gt;
                    &lt;p class="P2"&gt;
                        Content of Page 3 
                    &lt;/p&gt;
                &lt;/iewc:PageView&gt;
            &lt;/iewc:MultiPage&gt;
            &lt;asp:Button id="btnNext" style="Z-INDEX: 101; LEFT: 349px; POSITION: absolute; 
                    TOP: 236px" onclick="btnNext_Click" runat="server" Text="Next &gt;&gt;"&gt;
                    &lt;/asp:Button&gt;
            &lt;asp:Button id="btnPrev" style="Z-INDEX: 104; LEFT: 221px; POSITION: absolute; 
                    TOP: 236px" onclick="btnPrev_Click" runat="server" Text="&lt;&lt; Prev"&gt;
                    &lt;/asp:Button&gt;
        &lt;/p&gt;
        &lt;h2&gt;
        &lt;/h2&gt;
        &lt;p&gt;
        &lt;/p&gt;
    &lt;/form&gt;
&lt;/body&gt;
</pre>

<p>
Im Browser sieht dann diese ASP.NET Seite so aus:
</p>

<IMG SRC="Bilder/200208/20020801_03.png" width="476" height="414" alt="" border="0">

<p>
Um die Navigation durch die PageView-Elemente elegant und mit wenig Sourcecode zu realisieren kann man sich der
n&auml;chsten Control bedienen:
</p>

<h3>Die TabStrip Control</h3>

<p>
Diese Control verwendet man um IE basierte Reiter-Karteien zu erstellen. Wie vorher schon erw&auml;hnt, kann man diese
Control mit der MultiPage Control bzw. mit PageView-Elementen einer Collection einfach synchronisieren. Diese
Aufgabe soll nun das n&auml;chste Sourcecodebeispiel zeigen. Es zeigt das vorige Beispiel mit einer Reiter basierten
Navigation anstelle der klobigen Buttons. Da das Beispiel keinen &lt;script&gt;-Block ben&ouml;tigt -
abgesehen von den vorher schon erw&auml;hnten Referenzen - k&ouml;nnen wir zum HTML-Teil
der ASP.NET Seite &uuml;bergehen (<b>TabStripMP.aspx</b>):
</p>

<pre style="background='silver';">
&lt;body&gt;
    &lt;form runat="server"&gt;
        &lt;p class="P1"&gt;
            &lt;asp:Label id="lblTitle" runat="server"&gt;MS IE WebControls: MultiPage Demo&lt;/asp:Label&gt;
        &lt;/p&gt;
        &lt;p&gt;
            &lt;iewc:TabStrip id="iewcTabStrip" runat="server" TargetID="iewcMPage" 
                  Orientation="Horizontal" TabSelectedStyle="background-color : #0000C0;border-bottom:none" 
                  TabHoverStyle="background-color : #1976F5" TabDefaultStyle="color : #FFFFFF; 
                  background-color : #A0A8B4; border-color : #000000; border-style : Solid; 
                  border-width : 1px"&gt;
				  
                &lt;iewc:Tab Text="Static Page" /&gt;
                &lt;iewc:TabSeparator /&gt;
                &lt;iewc:Tab Text="ASP.NET Ctrls" /&gt;
                &lt;iewc:TabSeparator /&gt;
                &lt;iewc:Tab Text="Page 3" /&gt;
                &lt;iewc:TabSeparator DefaultStyle="height:100%" /&gt;
            &lt;/iewc:TabStrip&gt;
            &lt;iewc:MultiPage id="iewcMPage" style="BORDER-TOP: medium none" runat="server" 
			    Height="151px" Width="100%" ForeColor="Black" BackColor="White" BorderWidth="1px" 
				BorderStyle="Solid" BorderColor="Black"&gt;
				
                &lt;iewc:PageView id="Page1"&gt;
                    &lt;h2 class="H2" &gt;Page 1 
                    &lt;/h2&gt;
                    &lt;p class="P2"&gt;
                        Static Text of Page 1 
                    &lt;/p&gt;
                &lt;/iewc:PageView&gt;
                &lt;iewc:PageView id="Page2"&gt;
                    &lt;h2 class="H2"&gt;Page 2 
                    &lt;/h2&gt;
                    &lt;p class="P2"&gt;
                        &lt;asp:Label Text="ASP.NET WebControls" runat="server" /&gt;
                        &lt;asp:Button Text="Click" runat="server" /&gt;
                    &lt;/p&gt;
                &lt;/iewc:PageView&gt;
                &lt;iewc:PageView id="Page3"&gt;
                    &lt;h2 class="H2"&gt;Page 3 
                    &lt;/h2&gt;
                    &lt;p class="P2"&gt;
                        Content of Page 3 
                    &lt;/p&gt;
                &lt;/iewc:PageView&gt;
            &lt;/iewc:MultiPage&gt;
        &lt;/p&gt;
        &lt;h2&gt;
        &lt;/h2&gt;
        &lt;p&gt;
        &lt;/p&gt;
    &lt;/form&gt;
&lt;/body&gt;
</pre>

<p>
Die zu den Class-Attributen zugeh&ouml;rige CSS-Datei wurde &uuml;ber den &uuml;blichen Weg eingbunden. Die interessanten
Attribute der TabStrip Control sind hier <i>TargetID</i> und <i>Orientation</i>. <i>TargetID</i> 
synchronisiert die TabStrip Control mit der MultiPage Control (hier die ID <i>iewcMPage</i>). Mehr ist
f&uuml;r das Zusammenarbeiten nicht notwendig. <i>Orientation</i> gibt die Ausrichtung der Control im Browserfenster
an, also horizontal oder vertikal. Die restlichen Attribute sind f&uuml;r den optischen Aufputz (ausgenommen 
<i>runat</i> nat&uuml;rlich).
</p>

<p>
Die einzelnen Reiter mit den Separatoren werden innerhalb des Anfangs- und Endtags eingebettet. Separatoren
(<i>TabSeparator</i>) sind nicht zwingend notwendig, bieten aber eine optische Trennung zwischen den 
einzelnen Reitern. Der Rest des Sourcecodes ist dem vorigen Beispiel entnommen. Ausgef&uuml;hrt in einem Browser
sieht dies so aus:
</p>

<IMG SRC="Bilder/200208/20020801_04.png" width="474" height="411" alt="" border="0">

<h3>Die Toolbar Control</h3>

<p>
Mit der Toolbar Control k&ouml;nnen Sie einfachst eine Werkzeugleiste erstellen wie sie aus den 
Windows Applikationen bekannt ist. Dabei l&auml;&szlig;t diese fast keine W&uuml;nsche offen da sie eine 
Vielzahl von Elementen enth&auml;lt. Angefangen von Buttons bis Textboxen ist alles
drin. Da eine Beschreibung aller Details den Rahmen dieses Artikels sprengen w&uuml;rde, beschr&auml;nke ich mich
auf die wesentlichsten: den Button und die DropDownList.
</p>

<p>
Beginnen wir mit dem &lt;script&gt;-Block der Beispieldatei (<b>ToolBar.aspx</b>). Nat&uuml;rlich werden Sie gleich
bemerken, da&szlig; dieser zur Erstellung der Control eigentlich nichts beitr&auml;gt. Aber: Hier wollte ich zeigen, wie
die Events zu den eingebetteten Controls verkn&uuml;pft sind - und dies ist schlie&szlig;lich f&uuml;r eine dynamische Seite 
sehr wichtig:
</p>

<pre style="background='silver';">
&lt;%@ Page Language="C#" Debug="true" %&gt;
&lt;%@ Register TagPrefix="iewc" Namespace="Microsoft.Web.UI.WebControls" 
    Assembly="Microsoft.Web.UI.WebControls, Version=1.0.2.226, Culture=neutral, 
    PublicKeyToken=31bf3856ad364e35" %&gt;
&lt;%@ import Namespace="System.Drawing" %&gt;
&lt;script runat="server"&gt;

    void Page_Load(object sender, EventArgs e)
    {
        if(Page.IsPostBack)
        {
            if (drpdwnMyList.SelectedIndex &gt; 0)
            {
                lblListMsg.ForeColor=Color.Black;
                lblListMsg.Text="You chose: " + drpdwnMyList.SelectedItem.Text + ".";
            }
            else
            {
                lblListMsg.Text="Invalid selection.";
                lblListMsg.ForeColor=Color.Red;
            }
        }
    }
    
    bool btnInfo_Click(object sender, EventArgs e)
    {
    
       lblMsg.Text = "Info Button clicked.";
       return true;
    }
    
    bool btnAcme_Click(object sender, EventArgs e)
    {   
        lblMsg.Text = "ACME Button clicked.";
        return true;
    }
&lt;/script&gt;
</pre>

<p>
Wie Sie aus dem Snippet sehen k&ouml;nnen, werte ich zun&auml;chst die &Auml;nderung der Auswahl einer DropDownList
(<i>drpdwnMyList</i>) aus und gebe die aktuelle Auswahl an den Client zur&uuml;ck. Da sich die <i>ToolbarDropDownList</i>
&auml;hnlich einer DropDownList ASP.NET Server Control verh&auml;lt, ist diese auch mit ihren Vorteilen
zu genie&szlig;en. Das hei&szlig;t, Sie k&ouml;nnen diese dynamisch mittels einer Datenbankabfrage bef&uuml;llen,
die aktuelle Auswahl bestimmen, etc.
</p>

<p>
Die beiden _Click-Methoden (<i>btnInfo_Click</i> und <i>btnAcme_Click</i>) werden jeweils von den
entsprechenden Button Controls gefeuert (<i>btnInfo</i> bzw. <i>btnAcme</i>). Diese Methoden
k&ouml;nnen nat&uuml;rlich komplexere Aufgaben erf&uuml;llen als die hier dargestellten. Zu beachten ist aber, da&szlig; der
Delegate des Click-Events hier zwingend den Datentyp <i>bool</i> als Retourwert verlangt.
</p>

<p>
Der HTML-Teil der <b>ToolBar.aspx</b>-Datei ist wie folgt:
</p>

<pre style="background='silver';">
&lt;body&gt;
    &lt;form runat="server"&gt;
        &lt;iewc:Toolbar id="Toolbar1" runat="server" AutoPostBack="True" 
            Orientation="Horizontal" SelectedStyle="background-color : #0000C0;border-bottom:none" 
            HoverStyle="background-color : #1976F5" DefaultStyle="color : #FFFFFF; 
            background-color : #A0A8B4; border-color : #000000; border-style : Solid; 
            border-width : 1px"&gt;
        &lt;iewc:ToolbarButton id="btnInfo" OnButtonClick="btnInfo_Click" Text="Info"/&gt;
        &lt;iewc:ToolbarSeparator/&gt;
        &lt;iewc:ToolbarButton id="btnAcme" OnButtonClick="btnAcme_Click" Text="ACME"/&gt;
        &lt;iewc:ToolbarSeparator/&gt;
        &lt;iewc:ToolbarDropDownList id="drpdwnMyList"&gt;
            &lt;asp:ListItem Selected="True"&gt;- Select Language -&lt;/asp:ListItem&gt;
            &lt;asp:ListItem&gt;VC# .NET&lt;/asp:ListItem&gt;
            &lt;asp:ListItem&gt;VB .NET&lt;/asp:ListItem&gt;
            &lt;asp:ListItem&gt;VJ# .NET&lt;/asp:ListItem&gt;
        &lt;/iewc:ToolbarDropDownList&gt;
        &lt;/iewc:Toolbar&gt;
        &lt;p&gt;
        &lt;asp:Label id="lblMsg" runat="server" Text="Button Click: nothing ever happened."&gt;
            &lt;/asp:Label&gt;
        &lt;/p&gt;
        &lt;p&gt;
        &lt;asp:Label id="lblListMsg" runat="server" Text="List Selection: no selection performed."&gt;
            &lt;/asp:Label&gt;
        &lt;/p&gt;
    &lt;/form&gt;
&lt;/body&gt;
</pre>

<p>
Wie bei der TabStrip Control sind die Controls (Buttons, etc.) und der Separator wieder in den 
Anfangs- und Endtag der Toolbar Control einzubetten. Die Ausrichtung des Toolbars erfolgt wieder &uuml;ber das
<i>Orientation</i> Attribut. Da manche ASP.NET Server Controls nach einem AutoPostBack verlangen, kann dies
hier global mit der Setzung des <i>AutoPostBack</i>-Attributs auf &quot;True&quot; erledigt werden.
</p>

<p>
Wenn Sie die ASP.NET Datei in einem Browser ausf&uuml;hren wird der Toolbar so dargestellt:
</p>

<IMG SRC="Bilder/200208/20020801_05.png" width="471" height="414" alt="" border="0">


<h3>Die TreeView Control</h3>

<p>
Mit der TreeView Control lassen sich bequem hierarchische (XML) Datenstrukturen wie DataSets, 
Verzeichnis/Datei Gliederungen, etc. im Browser rendern. Als Appetitanreger habe ich eine einfache 
Benutzergruppen- und Benutzer&uuml;bersicht erstellt. Diese holt mit Hilfe einer Verbindung zu einer SQL-Datenbank
Informationen &uuml;ber die einzelnen Nodes. Um auf die TreeView Control fokussiert zu bleiben, bietet dieses Beispiel
nur einen Denkansto&szlig; und keine vollst&auml;ndige L&ouml;sung.
</p>

<p>
Wir brauchen zus&auml;tzlich Referenzen zum <i>Data.SqlClient</i> Namespace (f&uuml;r die Datenbankverbindung) und eine
Referenz auf den <i>Configuration</i> Namespace, da wir aus Sicherheitsgr&uuml;nden die Parameter des 
Connectionstrings in der web.config ablegen (<b>TreeView.aspx</b>): 
</p>

<pre style="background='silver';">
&lt;%@ Page Language="C#" Debug="True" %&gt;
&lt;%@ Register TagPrefix="iewc" Namespace="Microsoft.Web.UI.WebControls" 
    Assembly="Microsoft.Web.UI.WebControls, Version=1.0.2.226, 
    Culture=neutral, PublicKeyToken=31bf3856ad364e35" %&gt;
&lt;%@ import Namespace="System.Configuration" %&gt;
&lt;%@ import Namespace="System.Data" %&gt;
&lt;%@ import Namespace="System.Data.SqlClient" %&gt;
</pre>

<p>
Der &lt;script&gt;-Block enth&auml;lt hier nur eine Methode, welche die Daten aus der Datenbank holt und diese
in weiterer Folge mit der TreeView Control verkn&uuml;pft:
</p>

<pre style="background='silver';">
void RetrieveNodeData(object sender, TreeViewSelectEventArgs e)
{
   //Conn and Query Data
   string strXMLStruc = e.NewNode.ToString();
   string strQuery = "SELECT UsrDesc FROM tUsrData WHERE XMLStruc='" + strXMLStruc +"'";
   string strDBConn = ConfigurationSettings.AppSettings["sqlConnectionString"];

   //Data Connection
   SqlConnection oUsrDataConn = new SqlConnection(strDBConn);
   SqlCommand RetrieveNDataCmd = new SqlCommand(strQuery,oUsrDataConn);
   oUsrDataConn.Open();

   SqlDataReader myReader = RetrieveNDataCmd.ExecuteReader();


   try
   {
     while(myReader.Read())
     {
           lblResult.Text = myReader.GetString(0);
     }
   }
   finally
   {
     myReader.Close();
     oUsrDataConn.Close();
   }
}
</pre>

<p>
Um die Info (angezeigt mit Hilfe der ASP.NET Label Control) mit der TreeView Control zu synchronisieren
verwende ich die <i>NewNode</i> Property. Diese Eigenschaft, welche ich vom <i>TreeViewSelectEventArgs</i>
Objekt bekomme, liefert mir die aktuelle Position des Nodes in der Hierarchie im <i>x.y.z</i> Format:
</p>

<table cellpadding="2" cellspacing="2" border="1">
<th>Element</th>
<th>Beschreibung</th>
<th>NewNode Property Wert</th>
<tr>
	<td>+ Usergroups</td>
	<td>Root Element</td>
	<td align="center">n/a</td>
</tr>
<tr>
	<td>- Administrators</td>
	<td>Node von <i>Usergroups</i></td>
	<td align="center">0.0</td>
</tr>
<tr>
	<td>- VS Developers</td>
	<td>Node von <i>Usergroups</i></td>
	<td align="center">0.1</td>
</tr>
<tr>
	<td>+ Users</td>
	<td>Root Element</td>
	<td align="center">n/a</td>
</tr>
<tr>
	<td>- Administrator</td>
	<td>Node von <i>Users</i></td>
	<td align="center">1.0</td>
</tr>
<tr>
	<td>- Guest</td>
	<td>Node von <i>Users</i></td>
	<td align="center">1.1</td>
</tr>
</table>

<p>
Um diese Position mit einem Datensatz zu verkn&uuml;pfen habe ich mich f&uuml;r den Weg des geringsten Widerstandes
entschlossen. Ich f&uuml;hre n&auml;mlich in der Datenbank die Strukturzugeh&ouml;rigkeit in einer separaten Spalte mit
und vergleiche dann diese in einer Query mit dem aktuellen Wert der <i>NewNode</i> Property. Zugegeben 
plump - aber einfach und hier ausreichend.
</p>

<p>
Normalerweise w&uuml;rde man bei solch einer Problemstellung die gesamten Daten aus der Datenbank im 
XML-Format holen, aber so wird auch die statische, XML-m&auml;&szlig;ige Gliederung gezeigt:
</p>

<pre style="background='silver';">
&lt;body&gt;
    &lt;form runat="server"&gt;
       &lt;table cellpadding="2" cellspacing="2" border="1"&gt;
       &lt;th&gt;User Group(s)/User(s)&lt;/th&gt;
       &lt;th&gt;Description&lt;/th&gt;
       &lt;tr&gt;
       &lt;td&gt;
       &lt;iewc:TreeView runat="server" AutoPostBack="True" onselectedindexchange="RetrieveNodeData"&gt;
        &lt;iewc:TreeNode Text="User Groups"&gt;
            &lt;iewc:TreeNode Text="Administrators"/&gt;
            &lt;iewc:TreeNode Text="VS Developer"/&gt;         
        &lt;/iewc:TreeNode&gt;
        &lt;iewc:TreeNode Text="Users"&gt;
            &lt;iewc:TreeNode Text="Administrator"/&gt;
            &lt;iewc:TreeNode Text="Guest"/&gt;
            &lt;iewc:TreeNode Text="Developer"/&gt;         
        &lt;/iewc:TreeNode&gt;
       &lt;/iewc:TreeView&gt;
       &lt;/td&gt;
       &lt;td align="center"&gt;
            &lt;asp:Label id="lblResult" runat="server"/&gt;
       &lt;/td&gt;
       &lt;/tr&gt;
    &lt;/form&gt;
&lt;/body&gt;
</pre>

<p>
Zu beachten ist, da&szlig; in der mir vorliegenden Control-Dokumentation (v1.0.2.226) sich im dort pr&auml;sentierten Beispiel ein 
Druckfehler eingeschlichen hat. So ist das Attribut, welches zur Feuerung des Events f&uuml;r die aktuelle 
Nodeselektion dient, als
<i><b>onselectedindexchange</b></i> anzuf&uuml;hren und nicht wie in der Dokumentation beschrieben als
<i>onselectedindexchanged</i>.
Bei vorhandenenem Zugang zu einer SQL Datenbank (<b>tUsrData.sql</b>) sieht die Ausf&uuml;hrung dieser ASP.NET Seite im
Browser so aus:
</p>

<IMG SRC="Bilder/200208/20020801_06.png" width="477" height="415" alt="" border="0">

<p>
Wie Sie beim Experimentieren mit der TreeView Control feststellen werden, &quot;merkt&quot; sich die Control
die Gliederungsdarstellung (Vorhandensein einer History). Dies wird durch zus&auml;tzliche Eintr&auml;ge im ViewState 
erreicht. Sie k&ouml;nnen sich nun vorstellen, da&szlig; der ViewState bei Renderung gro&szlig;er Datenstrukturen betr&auml;chtlich
w&auml;chst - woraus sich ein Flaschenhals in der Performance ergibt. Daher sollte die Anzahl der Nodes eines Trees unter
1000 (Richtwert) bleiben.
</p>

<h2>Schlu&szlig;bemerkung</h2>

<p>
Dieser Artikel war ein Appetizer, der die M&ouml;glichkeiten der Microsoft Internet Explorer WebControls
in der Version 1.0.2.226 mit Warp 10 dargestellt hat. Sie k&ouml;nnen sich nun durch diesen Einblick
leichter Vorstellungen machen, wie Sie die IE WebControls in Ihren browserbasierten L&ouml;sungen verwenden.
</p>

<p>
Die umfangreichere und aktuellere Dokumentation der Controls finden Sie auf msdn.microsoft.com 
(URL im Programmgruppenmen&uuml;). Dieser Artikel beabsichtigt daher auch nicht die &gt;60 Seiten
Dokumentation zu ersetzen.  
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20020801.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20001114.htm">ASP.NET User Controls im Einsatz</a><br>
<a href="20020618.htm">Das ASP.NET Web Matrix Projekt</a><br>
<a href="20001102.htm">Datenbankzugriff mittels ADO.NET</a><br>
<a href="20000808.htm">Einf&uuml;hrung in ASP.NET Web Forms</a><br>
<a href="20011122.htm">Einstellungssache - Applikationsdaten in web.config</a><br>
<a href="20000922.htm">Eventbehandlung bei ASP.NET WebForms</a><br>
<a href="20020705.htm">Formularbasierte Authentifizierung in f&uuml;nf Minuten</a><br>
<a href="20010802.htm">Web.Config 101</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Easp%2Enet%2Fwebmatrix">ASP.NET Web Matrix Project</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Easp%2Enet%2FControlGallery%2Fdefault%2Easpx%3FCategory%3D38%26tabindex%3D2">WebControls Version 1.0</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20020801" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="MS IE WebControls 101"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20020801.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christian Holm"><input type="hidden" name="AuthorEmail" value="office@holmcs.com"><input type="hidden" name="Artikel" value="20020801"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20020801.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
