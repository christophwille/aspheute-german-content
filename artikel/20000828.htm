<HTML>
<HEAD>
<TITLE>Verwenden von COM Komponenten in ASP.NET</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Im heutigen Artikel besch&auml;ftige ich mich mit einem Thema, das sehr viele ASP.NET Umsteiger interessieren wird: wie kann ich meine gekauften oder selbst erstellten COM Komponenten in der ASP.NET Umgebung einsetzen.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,ASP.NET,TlbImp,Metadata,Assembly,DLL,ctor,get,set,.NET,Framework,Runtime,Type library,typelib">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Verwenden von COM Komponenten in ASP.NET</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20000828"></SCRIPT>
</p>
<p>
Im heutigen Artikel besch&auml;ftige ich mich mit einem Thema, das sehr viele ASP.NET Umsteiger interessieren
wird: wie kann ich meine gekauften oder selbst erstellten COM Komponenten in der ASP.NET
Umgebung einsetzen.
</p>
<p>
Das grunds&auml;tzliche Problem besteht darin, da&szlig; ASP.NET in der Common Language Runtime fu&szlig;t, die ein
sogenanntes <i>Managed Execution Environment</i> ist. Der Code selbst hei&szlig;t dann <i>Managed Code</i>,
und die Runtime bezieht die Information zum Management des Codes aus der sogenannten <i>Metadata</i>,
die vom Compiler zum Beschreiben des Sourcecodes mitgeneriert wurde.
</p>
<p>
Das Problem ist jetzt, da&szlig; existierende Komponenten nat&uuml;rlich keine Metadatainformationen besitzen.
Also mu&szlig; ich f&uuml;r meine Komponenten diese generieren - aber halt: wenn es ein Tool gibt, das Metadata
erzeugen kann, woher nimmt es die Informationen f&uuml;r die Metadata? Diese kommen aus der Type Library,
und normalerweise hat heute jede Komponente eine Type Library. Falls nicht, gibt es zwar einen
(unsch&ouml;nen) Weg rundherum, allerdings w&uuml;rde ich da vorher noch einen Henkel an der Komponente
anschwei&szlig;en - zum Wegwerfen!
</p>
<p>
In diesem Artikel werde ich die Generierung der Metadata anhand
anhand der SA-STMPmailFREE Komponente von Software Artisans demonstrieren. Wer den Beispielen folgen
m&ouml;chte, kann sie ohne weiteres downloaden - sie ist gratis. Der Downloadlink findet sich
am Ende des Artikels.
</p>
<p>
Voraussetzung um den Sourcecode dieses Artikels verwenden zu k&ouml;nnen ist eine Installation 
des Microsoft .NET Framework SDK's auf einem Webserver. Weiters setze ich voraus, da&szlig; der 
Leser die Programmiersprache C# zu einem gewissen Grad beherrscht - es finden sich etliche 
Artikel auf diesem Server, um das notwendige Wissen zu erlernen. 
</p>

<h2>Erzeugen der Metadata DLL</h2>
<p>
Der erste Schritt ist, die Metadata zu erzeugen. Dazu mu&szlig; man zuerst in das Verzeichnis
mit der entsprechenden Komponenten-DLL gehen:
</p>

<IMG SRC="Bilder/200008/20000828_1.png" width="494" height="316" border="0" alt="">

<p>
In diesem Verzeichnis startet man dann ein Kommandoprompt, und tippt folgenden Befehl ein:
<pre style="background='silver';">
tlbimp sasmtp.dll /out:sasmtp_dotnetproxy.dll
</pre>
</p>
<p>
Mit diesem einfachen Befehl wird die Metadatainformation in die Datei <i>sasmtp_dotnetproxy.dll</i>
gespeichert (korrekt bezeichnet ist diese DLL eine <i>Assembly</i>). Diese ist jetzt unser 
<i>Proxy</i> zum eigentlichen "unmanaged" COM Objekt. Hier die Ausgabe f&uuml;r die Generierung des 
Proxies f&uuml;r SA-SMTPmail:
</p>

<IMG SRC="Bilder/200008/20000828_2.png" width="668" height="142" alt="" border="0">

<h2>Installation f&uuml;r ASP.NET</h2>
<p>
F&uuml;r ASP.NET gibt es einige Wege, die Metadata-DLL zu installieren:
<ul>
<li>In das <b>bin</b> Verzeichnis der Applikation
<li>In das Verzeichnis der ASP.NET Datei
</ul>
</p>
<p>
Die Methode mit dem Speichern neben der ASP.NET Datei hat einen Haken: man mu&szlig; ein <i>@Assembly</i>
Statement in jede ASP.NET Seite einbauen, die die Komponente verwenden soll. Bei der Speicherung 
in das <b>bin</b> Verzeichnis erspart man sich das - die Assembly wird f&uuml;r alle ASP.NET Seiten 
der Applikation geladen.
</p>
<p>
Daher habe ich nat&uuml;rlich die Assembly in das <b>bin</b> Verzeichnis verfrachtet:
</p>

<IMG SRC="Bilder/200008/20000828_4.png" width="532" height="199" alt="" border="0">

<h2>Der IL Disassembler</h2>
<p>
Jetzt kommen wir zu etwas, das viele VB oder VBScript Programmierer auf den ersten Blick
etwas abschrecken wird - wir m&uuml;ssen einen Disassembler bem&uuml;hen, um an einige wichtige Informationen
zu kommen:
</p>

<ul>
<li>Der Namespace der Assembly (f&uuml;r das <i>@Import</i> Statement)
<li>Die exakten Namen der Klassen (diese k&ouml;nnen sehr wohl von dem unterschiedlich sein,
    die man in ASP verwendet hat!)
<li>Die Datentypen der Methoden und Eigenschaften
<li>Die exakte Schreibweise der Methoden und Eigenschaften - in C# macht es einen Unterschied,
    ob man BodyText oder Bodytext schreibt.
</ul>

<p>
Den IL (Intermediate Language) Disassembler startet man durch eintippen von <b>ildasm.exe</b> in der Run
Dialogbox des Startmen&uuml;s. Mit
dem Open Befehl (File Men&uuml;) w&auml;hlt man die entsprechende DLL aus, und in unserem Fall bekommt
man folgendes Bild:
</p>

<IMG SRC="Bilder/200008/20000828_3.png" width="400" height="600" alt="" border="0">

<p>
Markiert habe ich den Namespace: <i>sasmtp_dotnetproxy</i>. Diesen brauchen wir f&uuml;r das <i>@Import</i> Statement
in unseren ASP.NET Seiten. Weiters sind hier einige nette Symbole versteckt - als Tip: wichtig ist
f&uuml;r den ASP.NET Programmierer nur das vollst&auml;ndig blaue Symbol - das sind Klassen. Die, die uns
interessiert ist <i>CoSMTPMailClass</i>. Das ist das &Auml;quivalent f&uuml;r die ProgId <i>SoftArtisans.SMTPMail</i>.
Wie schon angek&uuml;ndigt, es kann Unterschiede in den Namen geben!
</p>
<p>
Wenn man diese Klasse jetzt expandiert, erh&auml;lt man eine Liste von Eigenschaften und Methoden:
</p>

<IMG SRC="Bilder/200008/20000828_6.png" width="400" height="381" alt="" border="0">

<p>
Wie man sieht, haben alle Methoden sehr eindeutige Datentypzuweisungen: zuerst kommt der 
Methodenname, gefolgt nach einem Doppelpunkt vom R&uuml;ckgabewert, und dann in Klammern von den
Parametern der Methode.
</p>
<p>
Ungewohnt f&uuml;r VBScript Programmierer wird es bei den Eigenschaften, weil diese durch <i>get_</i>
und <i>set_</i> Methoden repr&auml;sentiert sind:
</p>

<IMG SRC="Bilder/200008/20000828_5.png" width="503" height="381" alt="" border="0">

<p>
Allerdings gibt es dann am Ende eine Auflistung nach Eigenschaftsnamen (rotes Dreieck). Wenn man
auf eine Eigenschaft doppelklickt, bekommt man die Definition der Eigenschaft pr&auml;sentiert.
Achtung: Eigenschaften k&ouml;nnen Get, Set oder Get/Set sein.
</p>
<p>
Nehmen Sie sich die Zeit, etwas mit dem IL Disassembler herumzuspielen - er wird Ihnen sicherlich
noch das ein oder andere Mal sehr hilfreich sein!
</p>

<h2>Verwendung der Komponente in ASP.NET</h2>
<p>
Da wir jetzt bestens &uuml;ber die Metadata informiert sind, bleibt uns nur noch die Komponente in ASP.NET
auch tats&auml;chlich zu verwenden. Das folgende Beispiel (<b>sasmtpmail.aspx</b>) beweist, da&szlig; wenn man alle
Voraussetzungen erf&uuml;llt hat, die Programmierung nicht mehr wirklich schwierig ist:
</p>

<pre style="background='silver';">
&lt;% @Page Language="C#" %&gt;
&lt;% @Import Namespace="sasmtp_dotnetproxy" %&gt;
&lt;%
// Tested with SMTPMail(tm) 2.0.0.1
CoSMTPMailClass email = new CoSMTPMailClass();

String strVersion = email.Version;
Response.Write(strVersion);

email.BodyText = "Das ist die Message, \r\ndie abgeschickt wird";
email.ConfirmRead = false;
email.ReturnReceipt = false;
email.FromName = "Christoph Wille";
email.FromAddress = "christophw@alphasierrapapa.com";
email.SMTPLog = Server.MapPath("log.txt");

bool bDone = email.AddRecipient("Chris","christophw@fx2.Dev.AlfaSierraPapa.Com");

email.RemoteHost = "fx2.dev.alfasierrapapa.com";
bool bResult = email.SendMail();

if (bResult)
{
  Response.Write("&lt;br&gt;Mail sent!");
}
else
{
  Response.Write("&lt;br&gt;Error sending mail: ");
  Response.Write(email.Response); 
}
%&gt;
</pre>

<p>
Zuerst wird der Namespace <i>sasmtp_dotnetproxy</i> importiert, gefolgt von der Erzeugung einer Instanz der
Klasse <i>CoSMTPMailClass</i>. In ASP h&auml;tten wir die Komponente mit diesem Statement erzeugt:
</p>

<pre style="background='silver';">
Set xObj = CreateObject("Softartisans.SMTPMail")
</pre>

<p>
Der restliche Sourcecode differiert eigentlich nicht mehr (bis auf C# vs VBScript) von einer 
normalen ASP Seite, auf der SA-SMTPmail verwendet wird.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Einen Vorteil der Methode der Erzeugung der Metadata habe ich bis zum Schlu&szlig; aufgehoben: wir
arbeiten mit einem Objekt, das im Vergleich zu ASP Early-Bound ist, ergo um vieles schneller
angesprochen werden kann. Damit hat sich ja die zus&auml;tzliche Arbeit sogar noch so richtig
ausgezahlt.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20000828.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20020702.htm">.NET Komponenten in COM+ Clients einsetzen</a><br>
<a href="20020201.htm">Dateityp-Ermittlung in Managed C++</a><br>
<a href="20010123.htm">Eine Eurokonvertierungskomponente in C# erstellen</a><br>
<a href="20021107.htm">Index Server Abfragen per Web Service</a><br>
<a href="20010619.htm">Transaktionen in C# Business Tier Komponenten</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Easpgerman%2Ecom%2Faspgerman%2Flisten%2Fanmelden%2Faspdedotnet%2Easp">Die aspDEdotnet Diskussionsliste</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Esoftartisans%2Ecom%2Fsoftartisans%2Fsmtpmail%2Ehtml">SA-SMTPmail</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20000828" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Verwenden von COM Komponenten in ASP.NET"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20000828.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christoph Wille"><input type="hidden" name="AuthorEmail" value="christophw@alphasierrapapa.com"><input type="hidden" name="Artikel" value="20000828"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20000828.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
