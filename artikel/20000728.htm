<HTML>
<HEAD>
<TITLE>On-the-fly Generierung von Graphiken</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Unter ASP.NET kann man mit einfachsten Bordmitteln dynamisch Graphiken erstellen, und an den Client schicken - mit maxmimaler Konfigurierbarkeit und Komfort.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,ASP.NET,C#,Grafik,Graphik,GDI+,Bitmap,ClearContent,Graphics,MeasureString,DrawString,SizeF,Dispose,Pixelformat,FromImage,Graphics Device Interface">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>On-the-fly Generierung von Graphiken</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20000728"></SCRIPT>
</p>
<p>
Etwas, das f&uuml;r ASP Programmierer ohne Unterst&uuml;tzung einer Komponente nicht machbar ist,
ist das dynamische Erstellen von Graphiken - seien es Diagramme, Banner oder nur ein
einfacher graphischer Counter. Dem ist unter ASP.NET gl&uuml;cklicherweise nicht mehr so - mit
einfachsten Bordmitteln kann man dynamisch Graphiken erstellen, und an den Client
schicken - mit maxmimaler Konfigurierbarkeit und Komfort.
</p>
<p>
Voraussetzung um den Sourcecode dieses Artikels verwenden zu k&ouml;nnen ist eine Installation des <i>Microsoft .NET Framework SDK's</i> auf
einem Webserver. Weiters setze ich voraus, da&szlig; der Leser die Programmiersprache C# zu einem gewissen Grad beherrscht -
es finden sich etliche Artikel auf diesem Server, um das notwendige Wissen zu erlernen.
</p>


<h2>Generieren einer Graphik</h2>
<p>
Bevor wir uns jetzt mit all dem Ballast von ASP.NET belasten, machen wir eine Trocken&uuml;bung in einem
simplen Kommandozeilenprogramm - und diesen Sourcecode verwenden wir dann als Ausgangsbasis f&uuml;r
unser ASP.NET Script. Der Unterschied ist, da&szlig; das Kommandozeilenprogramm die Graphik in eine Datei
speichert, wohingegen das ASP.NET Script die Graphik direkt an den Client schickt.
</p>
<p>
Was soll also unser Beispielprogramm machen? Wie immer, starten wir mit dem allseits beliebten
Programm "Hello World" - dieser Text soll in eine Grafikdatei geschrieben werden, und die Grafik
soll exakt so gro&szlig; sein, wie die der Text "Hello World" in der aktuell gew&auml;hlten Schrift und
Schriftgr&ouml;&szlig;e (also einfach ein zu gro&szlig;es Bitmap generieren gilt nicht!).
</p>
<p>
Das folgende Script (<b>pagecounter.cs</b>) ist ein typisches, einfaches, Kommandozeilenprogramm:
abgesehen von der Klasse rundherum (die mu&szlig; sein), gibt es nur die Funktion <i>Main</i>, die aufgerufen
wird, wenn das Programm abl&auml;uft. Und dort ist auch unser Grafikgenerierungscode zu Hause.
</p>

<pre style="background='silver';">
using System;
using System.IO;
using System.Drawing;
using System.Drawing.Imaging;

public class CTestBitmapFunctionality
{
  public static void Main()
  {
    Bitmap newBitmap = null;
    Graphics g = null ;

    try 
    {
        Font fontCounter = new Font("Lucida Sans Unicode", 12);

        // calculate size of the string.
        newBitmap = new Bitmap(1,1,PixelFormat.Format32bppArgb);
        g = Graphics.FromImage(newBitmap);
        SizeF stringSize = g.MeasureString("Hello World", fontCounter);
        int nWidth = (int)stringSize.Width;
        int nHeight = (int)stringSize.Height;
        g.Dispose();
        newBitmap.Dispose();
      
        newBitmap = new Bitmap(nWidth,nHeight,PixelFormat.Format32bppArgb);
        g = Graphics.FromImage(newBitmap);
        g.FillRectangle(new SolidBrush(Color.White), new Rectangle(0,0,nWidth,nHeight));

        g.DrawString("Hello World", fontCounter, new SolidBrush(Color.Black), 0, 0);
        newBitmap.Save("c:\\test.png", ImageFormat.Png);
    } 
    catch (Exception e)
    {
        Console.WriteLine(e.ToString());
    }
    finally 
    {
        if (null != g) g.Dispose();
        if (null != newBitmap) newBitmap.Dispose();
    }
  }
}
</pre>

<p>
Was macht dieser Sourcecode? Das Endergebnis ist auf alle F&auml;lle die Grafik <b>test.png</b> auf der 
Platte c:
</p>

<IMG SRC="Bilder/200007/20000728_1.png" width="97" height="24" border="0" alt="">

<p>
Und wie entsteht diese Grafik? Dazu m&uuml;ssen wir uns den Sourcecode etwas genauer ansehen. Unsere
wichtigste Vorgabe war, da&szlig; die Grafik genau so gro&szlig; sein mu&szlig;, wie der Text "Hello World" in der
Schrift, in der der Text gerendert werden soll. Daher mu&szlig; ich mir zuallererst die Gr&ouml;&szlig;e des 
Textes ausrechnen, und dazu bediene ich mich einer Dummy-Grafik der Gr&ouml;&szlig;e 1x1, und wenn ich mit dem
Berechnen fertig bin, l&ouml;sche ich die Grafik wieder - um mir danach eine Grafik in der richtigen
Gr&ouml;&szlig;e zu erzeugen.
</p>
<p>
Ein interessanter Punkt des Sourcecodes ist das Objekt <i>Graphics</i>. Wozu brauche ich das, wenn
ich ein Bitmap erstellen will? Der Grund hierf&uuml;r ist, da&szlig; das mein Grafikkontext ist, in dem ich 
zeichne - einen Grafikkontext kann ich auf dem Bildschirm, auf dem Drucker, und im Speicher - einem
Bitmap eben - verwenden. Der Grafikkontext erlaubt mir die Zeichenoperationen auf beliebigsten
Ger&auml;ten (auch wenn sie virtuell sind).
</p>
<p>
Mit <i>DrawString</i> habe ich nun den Text "Hello World" auftragsgem&auml;&szlig; auf wei&szlig;em Hintergrund (mit
<i>FillRectangle</i> erzeugt) ausgegeben. Die Grafik ist fertig. Nun mu&szlig; ich sie auf die Festplatte
speichern. Wer einmal selbst Grafikformate programmiert hat, wei&szlig; wie m&uuml;hsam das sein kann.
Nicht so mit GDI+ (Graphics Device Interface) - ein einfacher Befehl steht zur Verf&uuml;gung:
</p>

<pre style="background='silver';">
newBitmap.Save(&quot;c:\\test.png&quot;, ImageFormat.Png);
</pre>

<p>
Und das war's auch schon! Einfach das <i>ImageFormat.Png</i> auf <i>ImageFormat.Jpeg</i> ausgetauscht, und man
bekommt eine JPEG Datei. Das ist genau das, worauf viele gewartet haben - einfachstes Arbeiten
mit Grafiken.
</p>
<p>
Es bleibt mir nun noch den Grund des Exception Handlings zu erkl&auml;ren: einige Funktionen k&ouml;nnen
Exceptions liefern (zB zu wenig Speicher beim Erzeugen des Bitmaps, etc). Da man als guter 
B&uuml;rger aber hinter sich aufr&auml;umen soll, mu&szlig; ich mich immer daraum k&uuml;mmern, da&szlig; <i>Graphics</i> und <i>Bitmap</i>
freigegeben werden - und genau das mache ich f&uuml;r alle F&auml;lle im <i>finally</i> Block (weil der wird
immer aufgerufen). Und hinter <i>finally</i> endet das Programm auch schon.
</p>
<p>
"Theoretisch" funktioniert das Programm - allerdings nur in Sourcecodeform. Um es tats&auml;chlich
zum Laufen zu bringen, mu&szlig; man es zuerst kompilieren:
</p>

<pre style="background='silver';">
csc /R:System.DLL /R:System.Drawing.DLL pagecounter.cs
</pre>

<p>
Damit erh&auml;lt man die EXE-Datei <b>pagecounter.exe</b>. Achtung: diese ist nur auf Systemen mit
dem installierten Microsoft .NET Framework lauff&auml;hig!
</p>


<h2>Das Ganze am Webserver</h2>
<p>
Als Kommandozeilenapplikation hat es ja hervorragend funktioniert. Als ASP.NET Script soll es aber
ein paar "St&uuml;ckeln" mehr spielen k&ouml;nnen:
</p>

<ul>
	<li>Frei w&auml;hlbarer Text (zB ein Counter)
	<li>Frei w&auml;hlbare Textfarbe
	<li>Frei w&auml;hlbare Hintergrundfarbe
	<li>Frei w&auml;hlbare Schriftart
	<li>Frei w&auml;hlbare Schriftgr&ouml;&szlig;e
</ul>

<p>
Wer jetzt sagt, das ist zu schwierig, der darf einen Blick auf den  
<a href="20000728_code1.htm" target="_blank">Sourcecode</a> des ASP.NET Scripts f&uuml;r die Grafik
werfen (<b>pagecounter.aspx</b>). Alles, was ich tun mu&szlig;te, ist jede Menge Fehlerbehandlungscode einzuf&uuml;hren, der die &uuml;bergegebenen
Parameter auf die G&uuml;ltigkeit &uuml;berpr&uuml;ft. Das war der Gro&szlig;teil der notwendigen &Auml;nderungen.
</p>
<p>
Eine weitere Notwendigkeit war, die Grafik an den Client zu schicken, anstatt sie einfach in eine
Datei zu schreiben. Dieser neue Teil sieht wie folgt aus:
</p>

<pre style="background='silver';">
MemoryStream tempStream = new MemoryStream();
newBitmap.Save(tempStream,ImageFormat.Png);

Response.ClearContent();
Response.ContentType = "image/png";
Response.BinaryWrite(tempStream.ToArray());
Response.End();
</pre>

<p>
Ich habe die Grafik einfach im Speicher "zwischengelagert" (in einem Memory Stream), und dann
als Array von Bytes an die allseits bekannte Funktion <i>BinaryWrite</i> &uuml;bergeben. &Uuml;brigens: die
Funktion <i>ClearContent</i> brauche ich deswegen, weil im obersten Teil des Scripts <i>Import</i> Direktiven
stehen, die als Leerzeilen an den Client geschickt w&uuml;rden - und somit die G&uuml;ltigkeit der PNG 
Grafikdatei zerst&ouml;ren w&uuml;rden.
</p>
<p>
Wer sich den <a href="20000728_code1.htm" target="_blank">Sourcecode</a> genauer angeschaut hat,
wird festgestellt haben, da&szlig; ich alle frei w&auml;hlbaren Attribute als QueryString Parameter &uuml;bergeben habe. Das
kann zu einer ganz sch&ouml;n langen Wurst werden, und da ich ein fauler Mensch bin, habe ich mir
ein bequemes Testformular gebastelt, in dem ich die verschiedenen Werte austesten kann:
</p>

<IMG SRC="Bilder/200007/20000728_2.png" width="574" height="518" border="0" alt="">

<p>
Das sch&ouml;ne an dieser ASP.NET Seite (<b>pagecountertest.aspx</b>) ist, da&szlig; ich die Grafik sofort auf der gleichen 
Seite pr&auml;sentiert bekomme.
Der <a href="20000728_code2.htm" target="_blank">Sourcecode</a> f&uuml;r dieses Formular
beinhaltet bereits server-side ASP.NET Controls. Das sozusagen als Appetizer auf sp&auml;tere
Artikel, wo wir genauer auf die Formularbehandlung (und Validierung) mit ASP.NET eingehen werden.
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
In diesem Artikel haben wir im Eilzugstempo uns kurz die Features zur Grafikprogrammierung
angeschaut. Mit ASP.NET und dem Framework steht uns Webseitenprogrammieren jetzt der volle
Befehlsumfang der Windows-Grafikprogrammierung zur Verf&uuml;gung, um dies in unseren Webprojekten
einzusetzen. Die Phrase "geht nicht" d&uuml;rfen wir also getrost aus unserem Wortschatz streichen.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20000728.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20020702.htm">.NET Komponenten in COM+ Clients einsetzen</a><br>
<a href="20000929.htm">Dateien lesen in ASP.NET</a><br>
<a href="20000802.htm">Dateiupload mit ASP.NET</a><br>
<a href="20000724.htm">Exception Handling in C#</a><br>
<a href="20020906.htm">On-the-fly Erstellung von vCard's</a><br>
<a href="20020225.htm">Thumbnailgenerierung in .NET</a><br>
<a href="20000712.htm">Was ist neu in ASP.NET</a><br>

</p>
<h2>Links zu anderen Sites</h2>
<p>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Edotnetgerman%2Ecom%2Flisten%2FaspDEdotnet%2Easp">Die aspDEdotnet Liste</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Edotnetgerman%2Ecom%2Flinks%2Fdl%5Fdotnetsdk%2Easp">Download .NET SDK</a><br>
<a target="_blank" href="/REMOVED/3w_link.asp?3wsite=http%3A%2F%2Fwww%2Edotnetgerman%2Ecom%2Flinks%2Fdl%5Faspnet%2Easp">Download ASP.NET</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20000728" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="On-the-fly Generierung von Graphiken"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20000728.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christoph Wille"><input type="hidden" name="AuthorEmail" value="christophw@alphasierrapapa.com"><input type="hidden" name="Artikel" value="20000728"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20000728.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
