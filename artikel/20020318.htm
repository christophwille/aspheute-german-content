<HTML>
<HEAD>
<TITLE>Das using Schl&uuml;sselwort</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Wer mit C# arbeitet, dem ist das using Schl&uuml;sselwort sp&auml;testens seit dem obligatorischen Hello World Programm bekannt - als Statement zum Import von Namespaces. Da&szlig; using noch einiges mehr zu bieten hat, zeigt dieser Artikel.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,using,using Statement,using Directive,using Direktive,Keyword,Namespace,Idisposable,Dispose,Component">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Das using Schl&uuml;sselwort</H1>
<p>
Geschrieben von: <a href="../autoren/christophwille.htm">Christoph Wille</a><br>
Kategorie: <a href="../kategorien/Csharp.htm">C#</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20020318"></SCRIPT>
</p>
<p>
Wer mit C# arbeitet, dem ist das <i>using</i> Schl&uuml;sselwort sp&auml;testens seit dem obligatorischen Hello World Programm 
bekannt - als Statement zum Import von Namespaces. Da&szlig; <i>using</i> noch einiges mehr zu bieten hat, zeigt dieser 
Artikel, indem er die using Directive und das using Statement n&auml;her beleuchtet.
</p>

<h2>Die using Directive</h2>
<p>
Beginnen wir bei der bekanntesten Verwendungsart der <i>using</i> Directive:
</p>

<pre style="background='silver';">
using System;
</pre>

<p>
Damit wird der <i>System</i> Namespace importiert, was bedeutet, da&szlig; man statt der absoluten Referenz 
<i>System.Console</i> nun auch <i>Console</i> direkt verwenden kann. Kritisch w&uuml;rde es bei einer Applikation
die in zwei Namespaces identische Klassennamen verwendet:
</p>

<pre style="background='silver';">
using System;

namespace Directive
{
  class MainApp
  {
    static void Main(string[] args)
    {
      // no using statements
      AspHeute.NamespaceOne.DemoClass oOne= new AspHeute.NamespaceOne.DemoClass();
      oOne.SayHello();
      AspHeute.NamespaceTwo.DemoClass oTwo= new AspHeute.NamespaceTwo.DemoClass();
      oTwo.SayHello();
    }
  }
}

namespace AspHeute.NamespaceOne
{
  class DemoClass
  {
    public void SayHello()
    {
      Console.WriteLine("Hello, world! (A.O.D)");
    }
  }
}

namespace AspHeute.NamespaceTwo
{
  class DemoClass
  {
    public void SayHello()
    {
      Console.WriteLine("Hello, world! (A.T.D)");
    }
  }
}
</pre>

<p>
Dieses Beispiel ist zwar an den Haaren herbeigezogen, aber bei Verwendung von Libraries von Drittherstellern kann es sehr
wohl vorkommen, da&szlig; Klassen mit identischen Namen auftauchen. Die einfache Variante - das Verwenden von <i>using</i> - wird vom
Compiler mit einem Fehler quittiert.
</p>

<pre style="background='silver';">
using System;
using AspHeute.NamespaceOne;
using AspHeute.NamespaceTwo;

namespace Directive
{
  class MainApp
  {
    static void Main(string[] args)
    {
      // error CS0104: 'DemoClass' is an ambiguous reference
      DemoClass oDemo = new DemoClass();
    }
  }
}
...
</pre>

<p>
Hier wei&szlig; der Compiler nicht mehr, aus welchem Namespace er die Klasse nehmen soll. Hier kann uns die using Directive allerdings
mit ihrer Alias-Funktionalit&auml;t aushelfen:
</p>

<pre style="background='silver';">
using System;
using DcOne = AspHeute.NamespaceOne.DemoClass;
using DcTwo = AspHeute.NamespaceTwo.DemoClass;

namespace Directive
{
  class MainApp
  {
    static void Main(string[] args)
    {
      DcOne oOne= new DcOne();
      oOne.SayHello();
      DcTwo oTwo= new DcTwo();
      oTwo.SayHello();
    }
  }
}
</pre>

<p>
Die beiden identen Klassennamen werden mit Hilfe von using auf eindeutige Namen "umgebogen". Damit erspart man sich dann die volle
Angabe der Namespaces wie im ersten Codesample. Nat&uuml;rlich kann man mit der Alias-Funktionalit&auml;t auch die Namespaces selbst "verbiegen":
</p>

<pre style="background='silver';">
using System;
using NsOne = AspHeute.NamespaceOne;
using NsTwo = AspHeute.NamespaceTwo;

namespace Directive
{
  class MainApp
  {
    static void Main(string[] args)
    {
      NsOne.DemoClass oOne= new NsOne.DemoClass();
      oOne.SayHello();
      NsTwo.DemoClass oTwo= new NsTwo.DemoClass();
      oTwo.SayHello();
    }
  }
}
</pre>

<p>
Damit verk&uuml;rzt man sehr elegant lange Namespaces.
</p>

<h2>Das using Statement</h2>
<p>
Neben der <i>using</i> Directive gibt es auch das <i>using</i> Statement, das zu Unrecht weniger bekannt
ist, denn es ist sehr n&uuml;tzlich in der Welt von .NET: es unterst&uuml;tzt bei der sauberen Aufl&ouml;sung von Resourcen-teuren
Objekten.
</p>
<p>
Wie funktioniert das? Nun, das <i>using</i> Statement ist f&uuml;r Klassen gedacht, die das <i>IDisposable</i> Interface unterst&uuml;tzen
(wer die SDK Hilfe installiert hat, kann diesen <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfsystemidisposableclasstopic.htm" target="_blank">Hilfe Link</a> klicken,
um alle Klassen zu sehen, die dieses Interface implementiert haben). Dieses Interface besitzt genau eine Methode, n&auml;mlich <i>Dispose</i>.
Diese Methode wird verwendet, um dem Objekt mitzuteilen, da&szlig; es seine teuren Resourcen freigeben kann, weil wir das Objekt nicht mehr
verwenden werden (und der Garbage Collector es erst sp&auml;ter aufl&ouml;st).
</p>
<p>
Grunds&auml;tzlich sieht das <i>using</i> Statement so aus:
</p>

<pre style="background='silver';">
using (expression | type identifier = initializer)
{
  // Code der das Objekt verwendet
}
</pre>

<p>
Ein weiterer wichtiger Vorteil des <i>using</i> Statements ist, da&szlig; auch im Falle einer Exception die <i>Dispose</i> Methode aufgerufen
wird. Man erspart sich also <i>Dispose</i> Aufrufe im <i>finally</i> Teil des Exception Handlings - man kann sie vor allem nicht
mehr vergessen, weil sie automatisch aufgerufen werden (f&uuml;r Objekte die mit <i>using</i> erzeugt wurden, klarerweise).
</p>
<p>
F&uuml;r eine Applikation die Webseiten grabbt k&ouml;nnte man <i>using</i> wie folgt einsetzen:
</p>

<pre style="background='silver';">
using System;
using System.Net;

namespace Statement
{
  class MainApp
  {
    static void Main(string[] args)
    {
      WebRequest wrq = WebRequest.Create("http://www.aspheute.com/");
      using (WebResponse response = wrq.GetResponse())
      {
        // exception or not, response will always be disposed
      }
    }
  }
}
</pre>

<p>
Es fehlt hier der Exception-Handling Code, aber: <i>Dispose</i> wird immer aufgerufen, was speziell bei offenen TCP/IP Verbindungen
sehr n&uuml;tzlich ist, denn unlimitiert kann man diese nicht aufmachen. Somit hilft <i>using</i> die Resourcen zu schonen, vor allem mit dem
Vorteil, da&szlig; man als Programmierer nicht mehr auf den Aufruf von <i>Dispose</i> vergessen kann!
</p>

<h2>Schlu&szlig;bemerkung</h2>
<p>
Die using Directive und das using Statement sind beides n&uuml;tzliche Helfer, die die t&auml;gliche Arbeit erleichtern - und den Code verbessern
k&ouml;nnen.
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20020318.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20030909.htm">Das ASP.NET DataGrid selbst erweitern</a><br>
<a href="20000724.htm">Exception Handling in C#</a><br>
<a href="20021107.htm">Index Server Abfragen per Web Service</a><br>
<a href="20020906.htm">On-the-fly Erstellung von vCard's</a><br>
<a href="20001019.htm">Sichere Konvertierungen von Referenztypen</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20020318" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Das using Schl&uuml;sselwort"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20020318.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christoph Wille"><input type="hidden" name="AuthorEmail" value="christophw@alphasierrapapa.com"><input type="hidden" name="Artikel" value="20020318"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20020318.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
