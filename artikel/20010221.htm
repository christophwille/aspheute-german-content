<HTML>
<HEAD>
<TITLE>Dateien auslesen mit VB.NET</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="7 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Heute erfahren Sie wie man mit VB.NET Dateien ausliest, und den Stream zum Browser des Client schickt. Nat&uuml;rlich sollen es nicht nur einfache Textdateien sein, nein, es werden heute auch anspruchsvollere Beispiele gezeigt.">
<meta http-equiv="Keywords" name="Keywords" content="ASP,Active Server Pages,IIS,Internet Information Server,PWS,Personal Web Server,ADO,ASP.NET,VB.NET,Visual Basic,VisualBasic,VB,File,Stream,OpenText,StreamReader,Peek,BinaryWrite,ContentType">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="../autoren/UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>

<H1>Dateien auslesen mit VB.NET</H1>
<p>
Geschrieben von: <a href="../autoren/christianholm.htm">Christian Holm</a><br>
Kategorie: <a href="../kategorien/VBdotNET.htm">VB.NET</a><br>
<SCRIPT src="/service/artikelbewertung.asp?Artikel=20010221"></SCRIPT>
</p>
<p>
Heute erfahren Sie wie man mit VB.NET Dateien ausliest, und den Stream zum Browser des Client
schickt. Nat&uuml;rlich sollen es nicht nur einfache Textdateien sein, nein, es werden heute auch 
anspruchsvollere Beispiele gezeigt. Da VB.NET meist ein bischen "Launisch" und "End Launisch"
ist, wird dieser Artikel sicher interessant.
</p>

<p>
Auf AspHeute.com gibt es schon einige Artikel, die dieses Thema behandeln. Aber bis jetzt mu&szlig;te die
Programmiersprache VB.NET au&szlig;en vor bleiben. Da es anscheinend noch eine gro&szlig;e Anzahl von 
Programmierern gibt, die Visual Basic &amp; Co. verwenden, mu&szlig; wieder einmal ein Visual Basic Artikel her.
Da VB.NET ja automatisch mit dem Microsoft .NET SDK mitinstalliert wird, sollen die paar Bytes 
auch mal zur Verwendung kommen.
</p>


<p>
Wie immer bei unseren ASP.NET Artikeln ist zu beachten, da&szlig; Sie nur dann vom downloadbaren Sourcecode 
profitieren k&ouml;nnen, wenn Sie das Microsoft .NET Framework SDK auf einem Webserver installiert haben.
Damit werden auf diesem Webserver ASP.NET Seiten ( .aspx ) ausf&uuml;hrbar.
</p>

<h2>Der Anfang</h2>

<p>
Nachdem Sie alle Warnhinweise zu VB.NET gelesen haben, fangen wir sogleich mit dem ersten Beispiel an. Da es auch das
erste ist, hat dieses nur die Aufgabe eine simple Text-only datei auszulesen. Damit es auch bei Ihnen daheim
ohne <i>System.IO.FileNotFoundException</i> klappt, ist es die Beispieldatei selbst.
</p>

<p>
Bevor ich Ihnen das Ergebnis pr&auml;sentiere, besprechen wir zuerst den interessanten Teil des Sourcecodes
 der <b>ReadFile.aspx</b> Datei:
</p>

<pre style="background='silver';">
StmReader = File.OpenText(Server.MapPath("ReadFile.aspx"))

While (StmReader.Peek() &lt;&gt; -1)
 strLine = StmReader.ReadLine()
 strLine = Server.HtmlEncode(strLine)
 Response.Write(strLine &amp; "&lt;br&gt;" &amp; vbCrLf)
End While

StmReader.Close()
</pre>

<p>
Nach den obligatorischen Referenzierungen, Variablendeklarationen, etc. weisen wir dem Stream(objekt) eine Datei zu
- in diesem Fall sich selbst - und lesen mit der <i>ReadLine</i> Methode Zeile f&uuml;r Zeile der Datei.
Da wir dies wie gesagt Zeile f&uuml;r Zeile tun, k&ouml;nnen wir mit kleinen Hilfsmitteln (&lt;br&gt;, etc.)
die Formatierung des Sourcecodes beibehalten. 
</p>

<p>
Die <i>Peek</i> Methode sieht nach, ob es nach der ausgelesenen Zeile noch was zu lesen gibt - bis zum bitteren Ende der
Datei. Damit l&ouml;sen wir elegant das Problem wenn der Text zwischendurch Leerzeilen enth&auml;lt (VB.NET ist da etwas "komisch"). Nun will ich
Sie nicht l&auml;nger auf die Folter spannen, und die Runtime f&uuml;r mich werkeln lassen bzw. Ihnen den Screenshot
mit dem Resultat, das dieser Sourcecode produziert, pr&auml;sentieren:
</p>

<p>
<IMG SRC="Bilder/200102/20010221_1.png" width="493" height="385" alt="" border="0">
</p>

<p>
Und tats&auml;chlich wird der gesamte Inhalt ausgegeben, auch wenn Leerzeilen dazwischen sind.
Das war ja einfachst! VB.NET kann aber mehr. Diesmal versuchen wir z.B. ein Bild in den Stream zu verpacken 
und diesen Stream zum Clientbrowser zu schicken.
</p>

<h2>Alles Bin&auml;r</h2>

<p>
H&ouml;rt sich kompliziert an - ist es aber nicht. Das kennen wir bereits von der gesamten VB Dynastie. 
Fein, dann schauen wir uns gleich das n&auml;chste Beispiel an (<b>BinaryWrite.aspx</b>):
</p>

<pre style="background='silver';">
Response.Buffer = True

Dim StmRead As Stream = File.OpenRead("G:\LocalSites\pic.png")

Dim nBufferSize As Integer = 255 
Dim nReadBytes As Integer = 0
Dim nTotalBytes As Integer = 0

Dim arrByte(nBufferSize) As Byte
Response.ClearContent()
Response.ContentType = "image/png"


While (StmRead.Position &lt; StmRead.Length)
  nReadBytes = StmRead.Read(arrByte, 0 , nBufferSize-1)
  nTotalBytes = nTotalBytes + nReadBytes

  If (nReadBytes = nBufferSize) Then
    Response.BinaryWrite(arrByte)
  Else
    Dim arrCopy(nReadBytes) As Byte
    Array.Copy(arrByte, 0, arrCopy, 0, nReadBytes)
    Response.BinaryWrite(arrCopy)
  End If	
End While

'CleanUp
StmRead.Close()
Response.End()
</pre>

<p>
Normalerweise, wenn man den Puffer gen&uuml;gend gro&szlig; w&auml;hlt, k&ouml;nnte man auf die <i>While</i> Schleife verzichten, 
und den Bin&auml;rstream sofort zum Client schicken. Aber den Puffer nicht an die tats&auml;chliche Dateigr&ouml;&szlig;e anzupassen 
hat folgende zwei Vorteile: Einerseits haben Dateien meist eine unterschiedliche Gr&ouml;&szlig;e, daher w&auml;re 
es eine Verschwendung immer den gesamten Puffer auszulesen, wenn er nicht vollst&auml;ndig belegt wurde. 
</p>

<p>
Andererseits wenn der Puffer zu klein ist, gibt es auch wieder Probleme. Bei solchen "speicherintensiven" 
Operationen (h&auml;ngt nat&uuml;rlich von der Dateigr&ouml;&szlig;e ab), ist es wichtig die Resourcen sofort nachdem sie nicht mehr
ben&ouml;tigt werden wieder frei zugeben (<i>CleanUp</i>). Es hei&szlig;t zwar allgemein, da&szlig; sich der <i>Garbage Collector</i>
(GC) darum k&uuml;mmert, aber es dauert so seine Zeit bis er mit dem Management fertig ist. 
</p>

<p>
Daher ist es schneller und sicherer ihm die Arbeit abzunehemen - nicht nur w&auml;hrend dem Entwickeln.
Man kennt ja Spr&uuml;che wie "File still in use" oder "Access Violation ...". Nun aber wieder der Screenshot
zu Datei:
</p>

<p>
<IMG SRC="Bilder/200102/20010221_2.png" width="522" height="226" alt="" border="0">
</p>

<p>
Da es nat&uuml;rlich wie immer mehrere L&ouml;sungen f&uuml;r ein Problem gibt, m&ouml;chte ich auch heute nicht Ihnen eine
Alternative vorenthalten:
</p>

<pre style="background='silver';">
...
objFileStream = New FileStream("G:\LocalSites\pic.png", FileMode.Open)
lFileSize = objFileStream.Length

Response.ClearContent()
Response.ContentType = "image/png"
          
Dim bBuffer(CInt(lFileSize)) As Byte
objFileStream.Read(bBuffer, 0, CInt(lFileSize))
objFileStream.Close()

Response.BinaryWrite(bBuffer)
...
</pre>

<p>
Dieser Sourcecode fragt gar nicht erst lang, und will sofort die Gr&ouml;&szlig;e (<i>Length</i> Methode) des Filestreams wissen.
Entsprechend der Gr&ouml;&szlig;e des Filestreams wird das Byte-Array dimensioniert. Danach wird der Stream wie gewohnt zum 
Browser geschickt. Das Ergebnis ist nat&uuml;rlich das gleiche wie im vorigen Beispiel.
</p>

<h2>Schlu&szlig;bemerkung</h2>

<p>
VB.NET zieht nat&uuml;rlich dem Platzhirsch C# nach und bietet dank .NET (zum Teil) &auml;quivalente Features. Damit beweist 
sich VB.NET als schnell erlernbare und zeitgem&auml;&szlig;e Alternative u. a. f&uuml;r Visual Basic Programmierer, die ihrer Linie treu bleiben 
m&ouml;chten. Wenn auch zur L&ouml;sung eines Problems mehrere Schritte als in C# n&ouml;tig sind.  
</p>
<h2>Download des Codes</h2>
<p><a href="../Code/20010221.zip">Klicken Sie hier</a>, um den Download zu starten.</p>
<h2>Verwandte Artikel</h2>
<p>
<a href="20000929.htm">Dateien lesen in ASP.NET</a><br>
<a href="20010124.htm">Dateiupload mit ASP.NET und VB.NET</a><br>

</p>

<h2>Wenn Sie jetzt Fragen haben...</h2>
<p>
Wenn Sie Fragen rund um die in diesem Artikel vorgestellte Technologie haben, dann schauen Sie einfach bei uns
in den <a href="http://glengamoi.com/forums/">Community Foren der deutschen .NET Community</a> vorbei. Die Teilnehmer 
helfen Ihnen gerne, wenn Sie sich zur im Artikel vorgestellten Technologie weiterbilden m&ouml;chten.
</p>

<p>
<a href="http://glengamoi.com/forums/"><img src="../images/glengamoi.com_250.gif" width="250" height="80" alt="" border="0"></a>
</p>


<p>
Eine weitere sehr hilfreiche Resource ist das <a href="http://aspxfiles.com/">deutsche ASP.NET Wiki</a>,
das als zentrale Anlaufstelle f&uuml;r Tips, Tricks, Know How und alles N&uuml;tzliche was man in seinem Alltag als 
(ASP).NET-Entwickler so braucht und entdeckt gedacht ist. 
</p>

<p>
Haben Sie Fragen die sich direkt auf den Inhalt des Artikels beziehen, dann schreiben Sie dem Autor! Unsere Autoren
freuen sich &uuml;ber Feedback zu ihren Artikeln. Ein einfacher Klick auf die <i>Autor kontaktieren</i>
Schaltfl&auml;che (weiter unten) und schon haben Sie ein f&uuml;r diesen Artikel personalisiertes Anfrageformular.
</p>

<p>&nbsp;</p>
<p>
Und zu guter Letzt m&ouml;chten wir Sie bitten, den Artikel zu bewerten. Damit helfen Sie uns, 
die Qualit&auml;t der Artikel zu verbessern - und anderen Lesern bei der Auswahl der Artikel,
die sie lesen sollten.
</p>

<FORM METHOD="POST" STYLE="margin-bottom: 0px;" NAME="formRating" ACTION="/service/bewerten.asp">
<INPUT TYPE="HIDDEN" NAME="ArticleId" VALUE="20010221" />
<CENTER>
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
<TR>
	<TD ALIGN="CENTER" VALIGN="MIDDLE" COLSPAN="7">Bewerten Sie diesen Artikel</TD>
</TR>
<TR>
	<TD><EM>&nbsp;Sehr gut&nbsp;</EM></TD>
	<TD><INPUT TYPE="radio" value="1" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="2" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="3" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="4" NAME="radioRating" /></TD>
	<TD><INPUT TYPE="radio" value="5" NAME="radioRating" /></TD>
	<TD ALIGN="right"><EM>&nbsp;Nicht gen&uuml;gend</EM></TD>
	<TD ROWSPAN="2" VALIGN="middle">&nbsp;<INPUT TYPE="submit" VALUE="Werten!" /></TD>
</TR>
<TR>
	<TD>&nbsp;</TD>
	<TD ALIGN="CENTER">&nbsp;1</TD>
	<TD ALIGN="CENTER">&nbsp;2</TD>
	<TD ALIGN="CENTER">&nbsp;3</TD>
	<TD ALIGN="CENTER">&nbsp;4</TD>
	<TD ALIGN="CENTER">&nbsp;5</TD>
	<TD>&nbsp;</TD>
</TR>
</TABLE>
</FORM>
</center>
&nbsp;<P>
<center>
<p><table><tr><td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="pagetitle" value="Dateien auslesen mit VB.NET"><input type="hidden" name="pageurl" value="http://www.aspheute.com/artikel/20010221.htm"><input type="image" src="../images/layout/senden.png" width="107" height="20" border="0" alt="Schicken Sie diese Seite einem Freund!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top>
<form action="REMOVED" method="GET"><input type="hidden" name="Author" value="Christian Holm"><input type="hidden" name="AuthorEmail" value="office@holmcs.com"><input type="hidden" name="Artikel" value="20010221"><input type="image" src="../images/layout/kontakt.png" width="107" height="20" border="0" alt="Kontaktieren Sie den Autor!" style="cursor='hand';"></form>
<td>&nbsp;&nbsp;</td>
<td valign=top><a href="../PrinterFriendly/20010221.htm"><img src="../images/layout/druck.png" width="118" height="20" border="0" alt="F&uuml;r Ausdruck optimierte Seite"></a></td>
</tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
