<HTML>
<HEAD>
<TITLE>Christoph Wille</TITLE>
<META HTTP-EQUIV="content-type: text/html; charset= ISO-8859-1">
<META HTTP-EQUIV="Content-Language" CONTENT="DE">
<META NAME="robots" CONTENT="FOLLOW,INDEX">
<META NAME="generator" CONTENT="Xitra Site Publishing">
<meta name="Author" content="webmaster@aspheute.com">

<META NAME="revisit-after" CONTENT="31 days">
<META NAME="copyright" CONTENT="(c) 2000-2006. Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich geschützt.">
<META HTTP-EQUIV="expires" CONTENT="1999-03-30T00:00:00+00:00"> 
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Cache-Control" CONTENT="no-store">

<meta http-equiv="Description" name="Description" content="Informieren Sie sich &uuml;ber unsere Autoren!">
<meta http-equiv="Keywords" name="Keywords" content="IIS,ASP,Autoren,Artikel,Information,Biografie,Biographie">
<link rel="stylesheet" href="../includes/default.css">
</HEAD>
<BODY BGCOLOR="#ffffff"  BACKGROUND="../images/layout/aspheutemainbg.gif" >


<div style="border-bottom: solid 5px white;">
<div class="DotNetGermanCommunityBar">
    <a href="http://www.glengamoi.com">Glengamoi (Forum)</a> &middot;
    <a href="http://www.aspheute.com/" style="font-weight: bold">AspHeute</a> &middot;
    <a href="http://dotnetheute.com/">.NET Heute (RSS-Suche)</a> &middot;
    <a href="http://aspxfiles.com/">AspxFiles (Wiki)</a> &middot;
    <a href="http://blogs.dotnetgerman.com/">.NET Blogs</a>
</div>
</div>


<MAP NAME="titlebar">
<!--<AREA SHAPE=RECT COORDS="116,46,191,61" HREF="http://www.aspaktuell.com" ALT="ASP Aktuell">-->
<!--<AREA SHAPE=RECT COORDS="192,46,255,61" HREF="http://www.aspwelt.com" ALT="ASP Welt">-->
<AREA SHAPE=RECT COORDS="256,46,432,61" HREF="http://www.aspgerman.com/aspgerman/" ALT="ASP German">
<AREA SHAPE=RECT COORDS="115,15,269,42" HREF="../default.htm" ALT="Homepage">
<AREA SHAPE=RECT COORDS="278,26,587,42" HREF="../default.htm" ALT="Homepage">
</MAP>

<div style="position:absolute;left:0px;top:30px">
<table border=0 cellspacing=0 cellpadding=0>
<tr>
<td background="../images/layout/aspheutetitle.gif">
<img src="../images/layout/blind.gif" width="715" height="73" usemap="#titlebar" border="0">
</td>
<td width="100%" background="../images/layout/aspheutetitleext.gif">
&nbsp;
</td>
<td background="../images/layout/aspheutetitleend.gif">
<img src="../images/layout/blind.gif" width="25" height="1">
</td>
</tr>
</table>
</div>

<div style="position:absolute;left:1px;top:115px">
<table width="110" border="0" cellspacing="0" cellpadding="0">
<tr><td width="110"><img src="../Images/spacer.gif" width="110" height="1" alt="" border="0"></td></tr>
<tr>
<td background="../images/layout/aspheuteheader.gif" class="header" height=16 width="110">
<p>Liste</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">

<p class="content">
<a href="../kategorien/dotNET%202dot0.htm">.NET 2.0 (1)</a><br>
<a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein (16)</a><br>
<a href="../kategorien/dotNET%20Fu.htm">.NET Fu (5)</a><br>
<a href="../kategorien/ADOdotNET.htm">ADO.NET (11)</a><br>
<a href="../kategorien/Aprilscherz.htm">Aprilscherz (3)</a><br>
<a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen (44)</a><br>
<a href="../kategorien/ASP%20Tricks.htm">ASP Tricks (83)</a><br>
<a href="../kategorien/ASPdotNET.htm">ASP.NET (44)</a><br>
<a href="../kategorien/ASPIntranetdotde.htm">ASPIntranet.de (5)</a><br>
<a href="../kategorien/Csharp.htm">C# (28)</a><br>
<a href="../kategorien/Datenbank.htm">Datenbank (44)</a><br>
<a href="../kategorien/Dokumentation.htm">Dokumentation (4)</a><br>
<a href="../kategorien/IIS%206dot0.htm">IIS 6.0 (1)</a><br>
<a href="../kategorien/Komponenten.htm">Komponenten (29)</a><br>
<a href="../kategorien/Optimierung.htm">Optimierung (10)</a><br>
<a href="../kategorien/Server.htm">Server (21)</a><br>
<a href="../kategorien/Sicherheit.htm">Sicherheit (34)</a><br>
<a href="../kategorien/Tee%20Off.htm">Tee Off (6)</a><br>
<a href="../kategorien/VBdotNET.htm">VB.NET (6)</a><br>
<a href="../kategorien/WAP.htm">WAP (8)</a><br>
<a href="../kategorien/Web%20Services.htm">Web Services (11)</a><br>
<a href="../kategorien/XML.htm">XML (9)</a><br>


<br>
<a href="/syndication/rss.xml"><img src="../Images/rss_small.png" width="25" height="10" alt="RSS 2.0 - Die neuesten f&uuml;nf Artikel auf AspHeute.com" border="0"></a>

</p><!-- </p> remains -->


<br>

</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearch.gif" class="header" height=16 width="110">
<p>Suchen</p>
</td>
</tr>
<tr>
<td background="../images/layout/aspheutesearchext.gif" class="header" width="110">
<form class="content" ACTION="REMOVED" METHOD="GET">
<div>
<input class="Newsletter" type="text" size="10" name="CiRestriction">
<span class="spacer2"><br></span>
<span class="spacer4"><br></span>
<INPUT TYPE="HIDDEN" NAME="CiMaxRecordsPerPage" VALUE="10">
<INPUT TYPE="HIDDEN" NAME="CiSort" VALUE="rank[d]">
<INPUT TYPE="HIDDEN" NAME="HTMLQueryForm" VALUE="../default.htm">
<img src="../images/layout/blind.gif" width="41" height="1"><input type="image" src="../images/layout/aspheutesearchenter.gif" border="0" width="49" height="14"><br>
<span class="spacer4"><br></span>
</div>
</form>
</td>
</tr>
<tr>
<td class="empty" width="110">
&nbsp;
</td>
</tr>
<tr>
<td background="../images/layout/aspheuteheaderext.gif" class="header" width="110">
<p class="content">
<a href="/REMOVED/" title="Our most popular articles translated into English">English Articles</a><br>
<a href="/REMOVED/" title="Visit our Chinese content section">Chinese Articles</a><br>
<a href="UnsereAutoren.htm" title="Unsere Autoren">Unsere Autoren</a><br>
&nbsp;<br>
<a href="/REMOVED/link2us.asp" title="Setzen Sie einen Link zu AspHeute!">Link zu AspHeute</a><br>
<a href="/REMOVED/impressum.asp" title="Das Impressum von AspHeute">Impressum</a><br>
<a href="/REMOVED/advertise.asp" title="Werben auch Sie auf AspHeute">Werben</a><br>
<a href="/REMOVED/kontakt.asp" title="Teilen Sie uns Ihre W&uuml;nsche, Beschwerden und Anregungen mit">Anfragen</a><br>
</p>
</td>
</tr>
</table>
</div>



<!-- Content starts here  -->
<div style="position:absolute;left:120px;top:108px">
<table cellspacing="0" cellpadding="0"><!--Tabelle aussen-->
<tr><!--Tabelle aussen, 1/2-->
<td><!--Tabelle aussen, 1/1-->
    <table border=0 align=center><tr><td align=center>


</td></tr></table>


<H1>Christoph Wille</H1>

<p>
Christoph hat es bis 1995 geschafft, das Internet zu ignorieren - das hat sich dann bei 
einen HTML-Designkurs auf der alten UNIX Box der Montanuniversit&auml;t Leoben ge&auml;ndert. Die 
Anf&auml;nge waren beschwerlich, obwohl er zu diesem Zeitpunkt bereits MCSE und MCSD war, und C++ 
Programmierung unter Windows keine Probleme darstellte.
</p>
<p>
Mit dem Kurs auf den Geschmack gekommen, entschied er, da&szlig; seine damalige Firma ihm die Professional 
Developers Conference '96 in San Francisco zu zahlen h&auml;tte (f&uuml;r die geschichtlich interessierten: 
"Building Internet Applications"). Zur&uuml;ck kam Chris mit einer Beta Version eines Produkts was 
sp&auml;ter IIS 1.0 werden sollte. Das faszinierendste Feature seiner Meinung nach war der Internet 
Database Connector. Sp&auml;ter in diesem Jahr startete dann seine Karriere als ASP Programmierer - bei 
der SiteBuilder Konferenz in San Jose, wo Denali (ASP 1.0, IIS 3.0) zum ersten Mal freigegeben wurde.
</p>
<p>
1997 hat er dann seine erste englische ASP Site mit gratis Tools, Tips und Code er&ouml;ffnet. Im Zuge 
eines von ihm ver&ouml;ffentlichten Sicherheitsbugfixes wurde er von Juan Llibre in die DD-Liste 
(Denali Dilettantes) vorgeschlagen, die auch heute noch eng mit Microsoft bei IIS Problemen und 
Weiterentwicklungen zusammenarbeitet. Als gelernter &Ouml;sterreicher wei&szlig; er, wie wichtig Vitamin 
B ist (Beziehungen)!
</p>
<p>
In den Jahren '98 und '99 war er bei Softwing besch&auml;ftigt, wo er in seiner Freizeit die 
<a href="http://www.alphasierrapapa.com/iisdev/" target="_new">IIS Development Site</a> aufgebaut hat, 
die auch heute noch eines der gr&ouml;&szlig;ten Arsenale an Gratiskomponenten f&uuml;r ASP darstellt. 1999 war auch 
das Jahr, in dem er damit begonnen hat, sein Wissen den deutschen ASP Programmieren zur Verf&uuml;gung zu 
stellen, so zum Beispiel mit der <a href="http://www.aspgerman.com/aspgerman/" target="_new">AspGerman Site</a>.
</p>
<p>
Bevor wir zum privaten Teil der Biographie &uuml;bergehen, noch einige Tidbits der letzten Zeit: Er hat jetzt 
seine eigene Firma <a href="http://www.alphasierrapapa.com/" target="_blank">AlphaSierraPapa</a>, schreibt 
nach wie vor B&uuml;cher f&uuml;r MacMillan Publishing (so zum Beispiel: Teach Yourself ASP in 24 Hours, Teach 
Yourself ADO 2.5 in 21 Days), und h&auml;lt <a href="http://www.alphasierrapapa.com/Leistungen/Schulungen.asp" target="_blank">Kurse</a> zu verschiedensten ASP-verwandten Themen.
</p>
<p>
Und zum Schlu&szlig; - wie angek&uuml;ndigt - einiges aus der Privatsph&auml;re von Chris: er lebt in Leoben, obwohl 
seine Geburtsstadt Bad Ischl doch um einiges sch&ouml;ner ist. Seine Hobbies sind Skifahren (vorzugsweise 
in Frankreich), Rennradfahren, sowie Segeln - je nach Zeit entweder in Kroatien oder Griechenland. Seine 
Oldtimersammlung w&auml;chst auch bereits: nach einem Puch 700C hat sich heuer ein Steyr-Puch Pinzgauer 6x6 
dazugesellt (und er droht bereits, da&szlig; es sicher nicht bei diesen 2 St&uuml;cken bleiben wird).
</p>
<h2>Christoph's Artikel</h2>
<table cellspacing=0 border=0 cellpadding=0><tr valign="top"><td width="80" class="spacer">&nbsp;</td><td class="spacer">&nbsp;</td><td background="../images/layout/aspheuteside.gif" class="spacer"><img src="../images/layout/blind.gif" width=20 height=1></td></tr>
<tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.7.2004</td><td class="news"><a href="../artikel/20040701.htm" class="newsitem">Visual Studio 2005 und .NET 2.0 Beta 1</a><br />
Am 29ten Juni hat Microsoft eine Welle von Betaprodukten auf die Entwicklergemeinde losgelassen. Um sozusagen f&uuml;r die Sommerbesch&auml;ftigung (und dar&uuml;ber hinaus) zu sorgen,  habe ich in diesem Artikel wichtige Anlaufpunkte f&uuml;r den "verspielten" Programmierer zusammengetragen, um das Verwenden der Betas auch zum Vergn&uuml;gen werden zu lassen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%202dot0.htm">.NET 2.0</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.1.2004</td><td class="news"><a href="../artikel/20040123.htm" class="newsitem">DataViews als DataTable persistieren</a><br />
Datenzugriff ist mit ADO.NET sehr einfach - Daten werden mit Hilfe eines DataAdpaters vom Server geholt und in ein DataSet gespeichert, und dann kann man Daten aus den DataTables auslesen. Und braucht man eine andere Sortierung oder Filterung, wozu zum Server gehen, mit Hilfe der DataView Klasse kann man das Client-seitig erledigen. Einziger Sch&ouml;nheitsfehler in .NET 1.x an dieser Sache ist, da&szlig; man aus der eben erzeugten Sicht (DataView mit .Sort oder .RowFilter Kriterien) nicht einfach einen neuen DataTable machen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ADOdotNET.htm">ADO.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.1.2004</td><td class="news"><a href="../artikel/20040105.htm" class="newsitem">Passw&ouml;rter speichern - aber richtig!</a><br />
In sehr vielen - um nicht zu sagen fast allen - Webanwendungen werden Benutzerdaten verwaltet, vom Webforum bis hin zum Webshop. Diese Benutzerdaten umfassen auch die Logininformationen der User, welche neben dem Usernamen auch das Passwort enthalten - und das als Plain Text. Eine Sicherheitsl&uuml;cke par excellence.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;11.9.2003</td><td class="news"><a href="../artikel/20030911.htm" class="newsitem">Virtuelle Verzeichnisse umbenennen</a><br />
Willkommen beim ersten Artikel zu Administrationsthemen rund um den IIS 6.0. Heute beginnen wir mit einem Thema das auf den ersten Blick f&uuml;rchterlich banal aussieht: dem Umbenennen von virtuellen Verzeichnissen. Hier existiert n&auml;mlich ein gr&ouml;&szlig;erer Unterschied zum alten IIS 5 als man zuerst annehmen m&ouml;chte.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/IIS%206dot0.htm">IIS 6.0</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.9.2003</td><td class="news"><a href="../artikel/20030910.htm" class="newsitem">Plagiat oder nicht?</a><br />
Ob das Aussehen einer Website, die Funktionalit&auml;t eines Programmes, &uuml;berall steht Sourcecode dahinter - von HTML bis C#. Stellen Sie sich vor, es kommt Ihnen zuf&auml;llig ein Sourcecode unter, der Sie ganz stark an Ihren eigenen aus einem Projekt erinnert... so ist es uns, dem SharpDevelop Team, passiert. Die Frage die sich nun stellt, wie weist man nach da&szlig; geklaut wurde?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.5.2003</td><td class="news"><a href="../artikel/20030502.htm" class="newsitem">Authentifizierung in Web Services - WS-Security, Benutzername / Passwort</a><br />
Der WS-Security Standard umfasst das Signieren von SOAP Nachrichten, das Verschl&uuml;sseln von SOAP Nachrichten, sowie das Anh&auml;ngen von Security Credentials an SOAP Nachrichten. Diese Security Credentials werden f&uuml;r die Authentifizierung verwendet, und k&ouml;nnen Benutzername / Passwort, ein X.509 Zertifikat oder Bin&auml;rtoken sein. Wir besch&auml;ftigen uns heute mit ersterem, und werden dies mit Hilfe der Web Services Enhancements (WSE) 1.0 unter .NET implementieren.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.5.2003</td><td class="news"><a href="../artikel/20030501.htm" class="newsitem">Authentifizierung in Web Services - SOAP Header</a><br />
Im letzten Artikel zum Thema Authentifizierung in Web Services haben wir uns mit protokollabh&auml;ngiger Authentifizierung besch&auml;ftigt. Obwohl Windows Integrated eine gute Intranet-L&ouml;sung ist, so ist sie nicht Plattform-&uuml;bergreifend, man ist an Windows Clients gebunden. Man kann diese Einschr&auml;nkung umgehen, indem man zus&auml;tzliche SOAP Header in den SOAP Nachrichten mitschickt.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.4.2003</td><td class="news"><a href="../artikel/20030429.htm" class="newsitem">Authentifizierung in Web Services - Windows Integrated</a><br />
Standardm&auml;&szlig;ig sind Web Services die man programmiert f&uuml;r jedermann zug&auml;nglich, das hei&szlig;t, unauthentifizierte anonyme Benutzer k&ouml;nnen darauf zugreifen. Manches Mal ist das gew&uuml;nscht, in vielen anderen F&auml;llen (zb Kreditkarten-Abbuchungsservice) allerdings nicht. In dieser
Artikelserie werden wir verschiedene Authentifizierungsmethoden beleuchten, und wir beginnen heute mit der Windows Integrierten Authentifizierung.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.2.2003</td><td class="news"><a href="../artikel/20030203.htm" class="newsitem">Web Folders mit IIS</a><br />
Bei der Verwendung eines Intranets kam mir ein interessantes Feature unter - durch einen Klick auf einen Hyperlink auf einer Seite &ouml;ffnete sich der Windows Explorer, und ich konnte wie vom Explorer gewohnt, Dateien auf den Webserver kopieren oder auf lokale Datentr&auml;ger schreiben. Mein Interesse war geweckt, und ich wollte wissen, wie denn das funktioniert.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.12.2002</td><td class="news"><a href="../artikel/20021230.htm" class="newsitem">Programmierer hilft Programmierer</a><br />
Wer kennt das nicht - man kommt bei der L&ouml;sung eines Problems einfach nicht weiter, oder man wei&szlig; nicht, wie man es am besten anpacken soll. Wenn man doch einen anderen Programmierer fragen k&ouml;nnte... man kann! Und zwar in Mailinglisten, die auf dem Prinzip der gegenseitigen Hilfe aufbauen. Der heutige Artikel stellt Ihnen die wichtigsten deutschen Diskussionslisten zu ASP und 
ASP.NET vor.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.12.2002</td><td class="news"><a href="../artikel/20021202.htm" class="newsitem">3. Loch - Dr. Evils Qualit&auml;tskontrolle</a><br />
Die Entzugserscheinungen in den Golf-losen Tagen scheinen mit jedem Turnier immer schlimmer zu werden, was sich w&auml;hrend des Golfens dann etwa so manifestiert: "Neulich bei Vera am Mittag - Thema: Hilf mir, Vera, mein Mann spielt ASP Golf...". Aber zur&uuml;ck zum Turnier des Monats November: es galt den zentralen Teil einer erfolgreichen Weltuntergangsmaschine - den Countdownz&auml;hler - einer rigiden Qualit&auml;tskontrolle zu unterziehen!<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Tee%20Off.htm">Tee Off</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.11.2002</td><td class="news"><a href="../artikel/20021107.htm" class="newsitem">Index Server Abfragen per Web Service</a><br />
Wenn Google seinen Suchkatalog per Web Service anbietet, warum sollte man dann nicht seine lokale Sitesuche per Web Service den Programmierern &ouml;ffnen? Heute werden wir einen solchen Suchservice basierend auf dem Index Server, der ja
Teil von Windows 2000 ist, implementieren. Und damit man die N&uuml;tzlichkeit eines solchen Services sieht, erstellen wir ihn f&uuml;r AspHeute.com, und geben auch noch einen Windows-Client mit dazu.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.10.2002</td><td class="news"><a href="../artikel/20021029.htm" class="newsitem">Amazon.com Web Services 2.0</a><br />
Die Landschaft der verf&uuml;gbaren Web Services wird langsam bunter - neben den Google Web APIs hat auch ein weiterer "Gro&szlig;er" des Internets Web Services f&uuml;r uns Programmierer im Angebot - Amazon.com. Im heutigen
Artikel werden wir uns mit der Suche nach B&uuml;chern besch&auml;ftigen, der gezeigte Code ist leicht auf andere Angebote Amazons umlegbar.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.9.2002</td><td class="news"><a href="../artikel/20020930.htm" class="newsitem">Tee Off - Das erste ASP Golf Turnier</a><br />
Den Perl Programmierern sind Golfturniere bereits ein Begriff, und seit kurzem geh&ouml;ren auch die ASP Programmierer zu den begeisterten Code-Golfern: wer eine vorgegebene Aufgabe mit den wenigsten Schl&auml;gen (Zeichen in einer ASP Datei) l&ouml;st, der hat das Turnier gewonnen. Unser erstes Turnier hat gleich eine ganze Zahl von Cracks auf den Platz gelockt, sehen Sie selbst...<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Tee%20Off.htm">Tee Off</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.9.2002</td><td class="news"><a href="../artikel/20020906.htm" class="newsitem">On-the-fly Erstellung von vCard's</a><br />
Die virtuellen Businesskarten - die vCards - werden vielen von uns schon einmal untergekommen sein. Entweder als Attachment bei einer Email, oder als Download von einer Website. Einigen wird es dabei schon in den Sinn gekommen sein,
f&uuml;r das eigene Communityportal solche vCards dynamisch f&uuml;r die Mitglieder zu generieren. Dieser Artikel zeigt, wie's geht.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.9.2002</td><td class="news"><a href="../artikel/20020905.htm" class="newsitem">Wochenberechnung mit .NET</a><br />
Die Frage des Tages lautet: Wie erh&auml;lt man die Nummer der Woche f&uuml;r ein vorgegebenes Datum? Nun, die <i>Week</i> Funktion aus dem guten, alten VBScript gibt es nicht mehr, und auch die DateTime Klasse stellt keinerlei Methoden
oder Eigenschaften zur Verf&uuml;gung - wie also kommen wir wirklich vom Datum zur Woche?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.9.2002</td><td class="news"><a href="../artikel/20020904.htm" class="newsitem">Delay Signing von Assemblies</a><br />
Assemblies unter .NET m&uuml;ssen signiert werden, wenn sie in den Global Assembly Cache (GAC) installiert werden sollen. Auch sonst sollten Assemblies signiert werden, da die Runtime dann &uuml;berpr&uuml;fen kann, ob die zu ladende Assembly mit der &uuml;bereinstimmt, die zum Kompilierungszeitpunkt verwendet wurde. Dies passiert mittels Public und Private Keys, und wir werden uns heute mit der Frage auseinandersetzen, ob es denn klug ist, einem Entwickler den Private Key der Firma zu geben.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.9.2002</td><td class="news"><a href="../artikel/20020903.htm" class="newsitem">Stored Procedures einfach erstellt</a><br />
Stored Procedures bieten sich als Schnittstelle zwischen Applikation und SQL Server Datenbank geradezu an, da man der Applikation nur Rechte auf die Stored Procedures geben mu&szlig;, und einen Direktzugriff auf Tabellen somit verhindern kann. Au&szlig;erdem ist es m&ouml;glich, erweiterte &Uuml;berpr&uuml;fungslogik in die Stored Procedure einzubauen - bevor ein INSERT, UPDATE oder DELETE ausgef&uuml;hrt wird. Warum werden SP's dann so selten eingesetzt? Weil viele Leute glauben, da&szlig; es mit viel Arbeit verbunden ist. Stimmt aber nicht.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.9.2002</td><td class="news"><a href="../artikel/20020902.htm" class="newsitem">Regex'en zu Assemblies kompilieren</a><br />
Mit .NET kann man regul&auml;re Ausdr&uuml;cke (Regex) in eine Assembly vorkompilieren, was einen Geschwindigkeitsvorteil zur Ausf&uuml;hrungszeit mit sich bringt. Heute werden wir uns die notwendigen Schritte daf&uuml;r anhand eines sehr praktischen Szenarios ansehen - wir werden eine Emailvalidierungs-Regex vorkompilieren, die man dann in allen Programmiersprachen und quer &uuml;ber Windows Forms oder ASP.NET Web Forms einsetzen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;31.7.2002</td><td class="news"><a href="../artikel/20020731.htm" class="newsitem">Trafficreduzierung mit XCompress</a><br />
Der Traffic einer Site wächst mit deren Popularität, und irgendwann erreichen die Kosten für den Datentransfer eine Höhe, wo man sich Optionen überlegen sollte. Ein einfacher und schnell umgesetzter Ansatz ist die HTTP Komprimierung, die den Traffic deutlich reduzieren kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Optimierung.htm">Optimierung</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.7.2002</td><td class="news"><a href="../artikel/20020705.htm" class="newsitem">Formularbasierte Authentifizierung in f&uuml;nf Minuten</a><br />
In Anlehnung an diverse Buchserien werde ich Ihnen heute zeigen, wie schnell man mit ASP.NET eine Website f&uuml;r registrierte User erstellen kann. Da mir nach den f&uuml;nf Minuten noch Zeit &uuml;brig bleibt, gebe ich Ihnen noch eine fix und fertige L&ouml;sung f&uuml;r ein technisch sauberes und vor allem sicheres Loginformular mit auf den Weg.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.7.2002</td><td class="news"><a href="../artikel/20020704.htm" class="newsitem">Zahl, Datum und W&auml;hrung korrekt formatiert ausgeben</a><br />
Ein wenig geliebtes Thema unter ASP war das Formatieren von Zahlen passend zu l&auml;nderspezifischen Einstellungen - meist schummelten sich die Programmierer dar&uuml;ber hinweg, mit dem Ergebnis, da&szlig; wenn man von einem deutschen Webserver auf einen englischen migrierte, nichts mehr korrekt ausgegeben wurde. Unter .NET gibt es keine Ausreden mehr, seine Applikationen von vorne herein global auszulegen: Internationalisierung hat seinen Schrecken verloren.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.7.2002</td><td class="news"><a href="../artikel/20020702.htm" class="newsitem">.NET Komponenten in COM+ Clients einsetzen</a><br />
Mit dem .NET Framework sind Funktionen in die Griffweite eines jeden Programmierers ger&uuml;ckt, von denen man noch vor nicht allzu langer Zeit nur tr&auml;umen durfte. Trotz all dieser neuen Features kann man meist seine alten Applikationen nicht einfach wegwerfen und in .NET neu schreiben, sondern man mu&szlig; sie weiterwarten. Dieser Artikel zeigt, wie man seine existierende Applikation mit in .NET geschriebenen Komponenten verbinden kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.6.2002</td><td class="news"><a href="../artikel/20020619.htm" class="newsitem">Unit Testing</a><br />
Das Unit Testing ist in der Java Welt schon lange ein Begriff und wird auch oft eingesetzt. Im heutigen Artikel besch&auml;ftigen wir uns mit der Frage warum man Unit Testing auch in .NET einsetzen soll, wie man es machen kann, und welche Vorteile man daraus ziehen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;18.6.2002</td><td class="news"><a href="../artikel/20020618.htm" class="newsitem">Das ASP.NET Web Matrix Projekt</a><br />
Nach einer l&auml;ngeren Testphase (und nach einigen Ger&uuml;chten) ist es nun so weit - die ASP.NET Web Matrix ist endlich da! Hinter dem Namen ASP.NET Web Matrix verbirgt sich ein freies, leicht zu erlernendes Entwicklungstool f&uuml;r ASP.NET Applikationen, das selbst mit Hilfe von .NET, C# und Windows Forms implementiert wurde. Web Forms und Web Services bequem entwickeln ohne Visual Studio .NET kaufen zu m&uuml;ssen ist damit Realit&auml;t.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.5.2002</td><td class="news"><a href="../artikel/20020507.htm" class="newsitem">Deutsche Personalausweisnummern verifizieren</a><br />
Im Internet findet man immer wieder interessante Ans&auml;tze, die Identit&auml;t bzw. das Alter der Surfer zu bestimmen. Einer davon ist die Personalausweisnummer vom Surfer eintippen zu lassen, da diese neben allgemeinen Angaben auch das Alter beinhaltet. Mit Hilfe von in der Personalausweisnummer eingebauten Pr&uuml;fziffern kann man kontrollieren, ob die Eingaben korrekt sind.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.5.2002</td><td class="news"><a href="../artikel/20020503.htm" class="newsitem">Show me the source - Includes aufgel&ouml;st</a><br />
Includes sind sehr praktisch, wenn man Funktionalit&auml;t in ASP Projekten gezielt wiederverwertbar machen m&ouml;chte. Der damit erreichte Vorteil der Modularisierung hat einen "Nachteil" - m&ouml;chte man sich den gesamten Code einer ASP Seite ansehen, wie er von der ASP Engine nach dem Expandieren der Includes ausgef&uuml;hrt wird, dann gibt es zwei Wege..<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.5.2002</td><td class="news"><a href="../artikel/20020502.htm" class="newsitem">Yet Another Forums Software</a><br />
Es geht weiter mit der Serie "Yet Another...", und zwar stelle ich heute die StP Forums Software vor. Diese implementiert ein auf ASP und Access Datenbank basierendes Forum, das man in seine Site gratis einbinden kann. Der heutige Artikel beleuchtet die Features und Administrationsm&ouml;glichkeiten dieser Forensoftware.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.4.2002</td><td class="news"><a href="../artikel/20020430.htm" class="newsitem">Gro&szlig;e Datenmengen in Formularfeldern erfolgreich auslesen</a><br />
Wer lange genug mit ASP arbeitet, lernt die interessantesten Designentscheidungen des Active Server Pages Teams kennen. Eine davon ist, da&szlig; das Gr&ouml;&szlig;enlimit f&uuml;r ein mit ASP auslesbares Formularfeld genau
102,399 Bytes ist. Wer &uuml;ber dieses Limit kommt, den erwartet eine Fehlermeldung - der heutige Artikel zeigt, wie man sich diese ersparen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.4.2002</td><td class="news"><a href="../artikel/20020417.htm" class="newsitem">Sortieren mit dem IComparer Interface</a><br />
In vielen F&auml;llen sind die Elemente in einer Collection nicht so angeordnet, wie man sie gerne h&auml;tte. Oft m&ouml;chte man auch zur Laufzeit eine Umsortierung erzwingen, zB die Elemente aufsteigend statt absteigend sortieren. Anhand der <i>Sort</i> Methode der <i>ArrayList</i> Klasse zeige ich, da&szlig; dies nicht weiter schwierig ist.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;15.4.2002</td><td class="news"><a href="../artikel/20020415.htm" class="newsitem">Programmieren mit den Google Web APIs Beta 2</a><br />
Langsam aber sicher tauchen die ersten interessanten Web Services am Internet auf. Einer davon sind die Google Web APIs, mit denen man auf Such-, Cache- und Spellingdienste dieser sehr beliebten Suchmaschine zugreifen kann. Heute sehen wir uns, wie man die APIs in seine .NET Anwendungen einbauen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;12.4.2002</td><td class="news"><a href="../artikel/20020412.htm" class="newsitem">Der Microsoft Baseline Security Analyzer (MBSA) 1.0</a><br />
Die Hotfixes f&uuml;r Windows, SQL Server und IIS werden in ihrer Anzahl nahezu t&auml;glich mehr. Auch Security Guidelines zur korrekten sicheren Konfiguration des Betriebssystems und seiner Services sind &uuml;ber viele Best Practices Dokumente verstreut. Und wenn man alles beisammen hat, mu&szlig; man darauf achten, auch wirklich alle Maschinen entsprechend upzudaten und zu sichern.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.4.2002</td><td class="news"><a href="../artikel/20020410.htm" class="newsitem">Yet Another Access Database Administration Tool</a><br />
Mit dieser Anleihe bei der Tool-Reihe "Yet Another..." sehen wir uns heute den StP Database Administrator f&uuml;r MS Access Datenbanken an, der ein weiteres von mittlerweile vielen Tools zur Online Administration von Access Datenbanken ist. Der StP Database Administrator bietet eine Reihe von Features, die man schon fast zum Standard solcher Tools z&auml;hlen darf...<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.4.2002</td><td class="news"><a href="../artikel/20020409.htm" class="newsitem">Dateien umbenennen</a><br />
Auf den ersten Blick denkt man sich, da&szlig; das so schwer nicht sein kann. Allerdings wenn man dann nicht wie erwartet eine <i>File.Rename</i> Methode findet, wird die Suche nach der L&ouml;sung f&uuml;r Nicht-Alte-Hasen der Windows Programmierung mehr oder weniger interessant.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;22.3.2002</td><td class="news"><a href="../artikel/20020322.htm" class="newsitem">Query Express f&uuml;r MSDE</a><br />
Die Microsoft Data Engine (MSDE) ist die Desktop Version des SQL Servers. Obwohl die Performance auch f&uuml;r Webauftritte reicht, so fehlt doch eines: die Administrationstools. Zumindest den Query Analyzer kann man ab sofort gratis nachr&uuml;sten - mit der Applikation Query Express.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.3.2002</td><td class="news"><a href="../artikel/20020321.htm" class="newsitem">Flash Movies einbetten einfach gemacht</a><br />
Wer hat das nicht schon selbst erlebt: man bettet ein Flash Movie in eine Webseite ein, und macht sp&auml;ter eine kleine &Auml;nderung und vergisst, die &Auml;nderung sowohl im OBJECT als auch im EMBED Tag einzutragen. W&auml;re es nicht bequemer, die Eigenschaften f&uuml;r ein Flash Movie nur einmal zu setzen, und den clientseitigen Code automatisch erzeugen zu lassen? Die L&ouml;sung dazu ist eine serverseitige WebControl.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;20.3.2002</td><td class="news"><a href="../artikel/20020320.htm" class="newsitem">Flash Detection ohne Komponente</a><br />
Eine unter Webprogrammierern &auml;u&szlig;ert "beliebte" Aufgabe ist es, ein Flash-Movie einzubinden und zwar so, da&szlig; der Browser des Benutzers vorher abgefragt wird, ob denn Flash &uuml;berhaupt und in welcher Version installiert ist.
Das Problem kann mit der BrowserHawk Komponente gel&ouml;st werden, oder gratis mit dem moock fpi.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.3.2002</td><td class="news"><a href="../artikel/20020319.htm" class="newsitem">Ein einfacher Eventkalender f&uuml;r Projektteams</a><br />
Ein wichtiger Teil beim Management eines Projektteams sind Termine f&uuml;r Meetings, Code Reviews, Feature Planung usw. Wenn man nicht gerade die Kombination Exchange/Outlook einsetzt, dann hei&szlig;t die L&ouml;sung entweder Email an alle oder ein Web-basierter Eventkalender. Den jedoch jedes Mal neu erfinden ist &uuml;berfl&uuml;ssige Arbeit.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;18.3.2002</td><td class="news"><a href="../artikel/20020318.htm" class="newsitem">Das using Schl&uuml;sselwort</a><br />
Wer mit C# arbeitet, dem ist das using Schl&uuml;sselwort sp&auml;testens seit dem obligatorischen Hello World Programm bekannt - als Statement zum Import von Namespaces. Da&szlig; using noch einiges mehr zu bieten hat, zeigt dieser 
Artikel, indem er die using Directive und das using Statement n&auml;her beleuchtet.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.3.2002</td><td class="news"><a href="../artikel/20020305.htm" class="newsitem">Mitlauschen bei der Browser-Webserver Kommunikation</a><br />
Des &ouml;fteren k&ouml;nnen die Eigenheiten eines Browsers dem Programmierer mehr als nur Kopfschmerzen bereiten, vor allem dann, wenn es um das Debuggen von Cookies, speziellen Headern und Daten&uuml;bertragungsformaten geht. In diesem Fall ist es wichtig, genau herausfinden zu k&ouml;nnen, was der Browser dem Server schickt, und was vom Server an den Browser retourkommt.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.3.2002</td><td class="news"><a href="../artikel/20020304.htm" class="newsitem">Unerw&uuml;nschte Referer sperren</a><br />
Vielen von uns ist es nur recht, wenn jemand zu unseren Sites beziehungsweise zu den Sites unserer Kunden linkt - es bringt ja Traffic. Andererseits gibt es aber Leute, die glauben f&uuml;r einen Link zu ihrer Site Geld kassieren zu k&ouml;nnen - mit dem Argument, da&szlig; man seine Site durch den Link zu ihrer
Site ja aufwertet. Nur wenn der Inhalt ihrer Site ach so wertvoll ist, dann ist es in ihrer Verantwortung den Inhalt vor unerw&uuml;nschten Referern zu sperren - und nicht nachtr&auml;glich von jederman zu kassieren (versuchen).<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.2.2002</td><td class="news"><a href="../artikel/20020226.htm" class="newsitem">Ein Touch-Utility in C#</a><br />
Das Touch Utility war immer eines meiner Lieblingstools, weil man mit ihm das Datum auf einer Anzahl von Dateien vereinheitlichen kann - zB in einem Downloadarchiv oder bevor man eine Applikation ausliefert. Heute werden wir ein einfaches Touch Utility in C# schreiben, das jeder leicht an seine Pr&auml;ferenzen anpassen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.2.2002</td><td class="news"><a href="../artikel/20020225.htm" class="newsitem">Thumbnailgenerierung in .NET</a><br />
Produktkataloge und Online-Bildergalerien haben (meist) eines gemeinsam: bevor man zum eigentlichen Detailbild gelangt, wird einem zuerst ein Vorschaubild, ein Thumbnail, pr&auml;sentiert. Solange die Bilder offline generiert werden, kann man auch die Thumbnails offline mitgenerieren - was aber, wenn die Bilder am Server gewartet/erstellt werden, und man die Thumbnails dynamisch on the fly generieren soll?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.2.2002</td><td class="news"><a href="../artikel/20020207.htm" class="newsitem">Unions in C#</a><br />
Wer aus der C/C++ Welt kommt, kennt die Unions und ihr Funktionsprinzip bereits: diese erlauben es, an einer Speicheradresse unterschiedliche Datentypen zu speichern. Mit erstaunlich geringem Aufwand lassen sich Unions auch in C# nachbilden, und zwar mit Hilfe der Attribute <i>StructLayout</i> und <i>FieldOffset</i>.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.2.2002</td><td class="news"><a href="../artikel/20020206.htm" class="newsitem">Der ODBC .NET Data Provider</a><br />
Obwohl es einen speziellen Managed Provider für SQL Server gibt, sowie einen Wrapper für OLE DB Provider, kann es sein, daß man auf seine Datenbank nicht zugreifen kann, weil es für die Datenbank nur einen ODBC Provider gibt. Um auch solche in .NET verwendbar zu machen, stellt Microsoft den ODBC.NET Data Provider als separaten Download zur Verfügung.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ADOdotNET.htm">ADO.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.2.2002</td><td class="news"><a href="../artikel/20020205.htm" class="newsitem">Der Object Construct String</a><br />
Im Artikel <i>In VB Komponenten auf ASP Objekte zugreifen (Variante 2)</i>
habe ich gezeigt, wie man mit Hilfe der COM+ Services sehr einfach an die ASP-internen Objekte wie zB Response oder Request herankommen kann. Heute stelle ich ein weiteres sehr n&uuml;tzliches Feature f&uuml;r Komponenten vor, die
COM+ Services verwenden: den Object Construct String.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.2.2002</td><td class="news"><a href="../artikel/20020201.htm" class="newsitem">Dateityp-Ermittlung in Managed C++</a><br />
Im gestrigen Artikel <i>Vorsicht Falle: Dateien, die keine sind</i> habe ich gezeigt, wie man mit Hilfe einer in C++ geschriebenen COM+ Komponente herausfinden kann, ob es sich bei der Datei die man verwenden m&ouml;chte um eine "echte" oder "nur" um Devices und Named Pipes handelt. Heute sehen wir uns die Thematik in .NET an, und machen gleich ein paar Aufw&auml;rm&uuml;bungen in Managed C++.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;31.1.2002</td><td class="news"><a href="../artikel/20020131.htm" class="newsitem">Vorsicht Falle: Dateien, die keine sind</a><br />
Eigentlich d&uuml;rfte jedem das <i>FileSystemObject</i> ein Begriff sein - mit diesem kann man Dateien auslesen und schreiben, sowie einige wichtige Operationen (l&ouml;schen zB) auf Dateien und Verzeichnissen ausf&uuml;hren. Allerdings ist kaum bekannt, was Windows (NT/2000) so alles unter Dateien versteht - n&auml;mlich keineswegs nur Dateien die auf der Festplatte liegen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.1.2002</td><td class="news"><a href="../artikel/20020129.htm" class="newsitem">Komponentenverwendung einschr&auml;nken</a><br />
Wer mehr als eine Site pro Server betreibt - und nicht nur ISP's sind davon betroffen - kommt m&ouml;glicherweise irgendwann einmal in die Situation, da&szlig; eine am Server installierte Komponente nur bestimmten Websites zur Verf&uuml;gung stehen soll. Entweder ist der Grund, da&szlig; nur der zahlende Kunde diese verwenden k&ouml;nnen soll (und keine andere zuf&auml;llig am gleichen Server laufende Site), oder da&szlig; bestimmte Komponenten sicherheitssensitiv sind (Businesslogikkomponenten zum Beispiel).<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.1.2002</td><td class="news"><a href="../artikel/20020125.htm" class="newsitem">Variable Parameterlisten in Funktionen</a><br />
In den meisten aller F&auml;lle wei&szlig; man im vorhinein, wieviele Parameter an eine Funktion &uuml;bergeben werden sollen. Was aber, wenn bestimmte Parameter optional sein sollen, oder die Funktion ihre Arbeit an 1 bis n gleichartigen Parametern durchf&uuml;hren soll? In diesem Fall stellt uns C# das <i>params</i> Schl&uuml;sselwort zur Verf&uuml;gung.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.1.2002</td><td class="news"><a href="../artikel/20020124.htm" class="newsitem">Arrays mit Index und Schl&uuml;ssel</a><br />
Arrays sind ein tolle Erfindung - man greift per Index bequem auf die Elemente zu. Will man nicht per Index auf ein Element zugreifen sondern per Schl&uuml;ssel, dann verwendet man die Hashtable Klasse. Doch was wenn man sowohl per Index als auch Schl&uuml;ssel auf Elemente zugreifen will? Auch dann wird man von .NET
nicht alleine gelassen, denn es gibt die <i>SortedList</i> Klasse, eine Mischung aus Array und Hashtable.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.1.2002</td><td class="news"><a href="../artikel/20020123.htm" class="newsitem">Impersonation mit ASP.NET</a><br />
Gesch&uuml;tzte Bereiche auf einer Website kann man auf viele Arten implementieren. Will man aber da&szlig; Seiten im gesch&uuml;tzen Bereich unter dem Account des eingeloggten Benutzers laufen (Impersonation), dann helfen nur noch Windows Accounts. Anwendungen der Impersonation gibt es unz&auml;hlige, aber sie wird immer dort notwendig, wo der normale Account des Webservers nicht mehr genug Rechte hat: zB anlegen von Usern im Active Directory, managen von DNS Servern via WMI, oder auch so einfache Dinge wie das Auslesen von mit NTFS Rechten gesch&uuml;tzten Dateien.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.1.2002</td><td class="news"><a href="../artikel/20020117.htm" class="newsitem">Last but not least - .NET 1.0 ist da!</a><br />
Lange hat es gedauert - aber seit Mittwoch fr&uuml;h  (US Zeit) ist .NET 1.0 zum Download verf&uuml;gbar. Neben den Links zu den Downloads (SDK und ASP.NET Releases) finden sich in diesem Artikel auch Links zu Sites rund um die verschiedenen in .NET enthaltenen Technologien, als auch zu Diskussionsforen, in denen man sich mit anderen Programmierern austauschen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;15.1.2002</td><td class="news"><a href="../artikel/20020115.htm" class="newsitem">CAPICOM One</a><br />
Relativ unbemerkt hat Microsoft im Vorjahr CAPICOM - einen COM Client f&uuml;r das CryptoAPI - im "Windschatten" von Windows XP released. Dabei handelt sich um ein Set sehr n&uuml;tzlicher kryptographischer Komponenten, die in jeder Programmiersprache mit Automation Unterst&uuml;tzung verwendet werden k&ouml;nnen - von Visual Basic bis hin zur kleinen Verwandtschaft in ASP, VBScript.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.12.2001</td><td class="news"><a href="../artikel/20011206.htm" class="newsitem">Performancemessungen in .NET</a><br />
Heute besch&auml;ftigen wir uns mit einem altbekannten Thema, der Messung der (Ausf&uuml;hrungs-)Geschwindigkeit einer bestimmten Implementierung. Dazu sehen wir uns vier verschiedene ADO.NET Implementierungen f&uuml;r ein und dasselbe Problem an, an denen ich auch wieder zeigen werde, da&szlig; so manches Mal der Schein tr&uuml;gen kann - Code kann auch langsam aussehen, obwohl er es nicht ist.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.12.2001</td><td class="news"><a href="../artikel/20011203.htm" class="newsitem">Verhinderung von SQL Injection Marke .NET</a><br />
Was <i>SQL Injection</i> ist, hat der erste Artikel dieser Serie ausf&uuml;hrlich erkl&auml;rt und auch demonstriert. In <i>Gegengifte f&uuml;r SQL Injection</i>, ging es dann um Wege mittels Inputvalidierung SQL Injection zu verhindern, und auch mittels ADO eine Art letzte Bastion zu errichten. Heute wechseln wir von ASP nach ASP.NET, und von ADO zu ADO.NET - und sehen uns die dortigen Abwehrmethoden an.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.11.2001</td><td class="news"><a href="../artikel/20011123.htm" class="newsitem">MS Script Encoder dekodiert</a><br />
Im Artikel <i>ASP Scripts verschl&uuml;sseln</i> habe ich beschrieben, wie
man ASP Scripts mittels MS Script Encoder unlesbar machen kann. Ich habe darauf hingewiesen, da&szlig; dies nur f&uuml;r den durchschnittlichen Benutzer als Abwehrmittel taugt, nicht aber gegen den, der wirklich den Sourcecode will. Um dieser Warnung Nachdruck zu verleihen, stelle ich heute ein Tool zur Umkehrung der
Verschl&uuml;sselung vor.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.11.2001</td><td class="news"><a href="../artikel/20011121.htm" class="newsitem">Active Directory Zugriff per .NET</a><br />
Active Directory ist das zentrale Element einer Windows 2000 Domain Infrastruktur. Es gibt viele Zugriffsmethoden (ADSI oder LDAP, um zwei sehr bekannte zu w&auml;hlen), die mehr oder minder komplex sind. Mit dem .NET Framework ist Microsoft angetreten, es leichter zu machen. Heute werden wir uns das anhand des Zugriffs als auch der Suche nach Elementen ansehen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.11.2001</td><td class="news"><a href="../artikel/20011119.htm" class="newsitem">Schritt-f&uuml;r-Schritt Debuggen von Sicherheitsproblemen</a><br />
Eines der l&auml;stigsten Probleme beim Entwicklen und Administrieren von Web Sites ist das Troubleshooten von Sicherheitsproblemen. Die absolute #1 ist hierbei Access Denied - Zugriff verweigert. Effizient herauszufinden warum man einen solchen Fehler erh&auml;lt ist Ziel des heutigen Artikels. Und wenn man den Grund kennt, ist die L&ouml;sung auch nicht mehr weit.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;15.11.2001</td><td class="news"><a href="../artikel/20011115.htm" class="newsitem">Eine Klasse f&uuml;r sich - die .NET Zip Library</a><br />
Das .NET Framework umfasst hunderte Klassen, doch etwas fehlt: es gibt keinerlei Klassen zur Komprimierung und Dekomprimierung von Zip Archiven. Diesem Fehlen kann aber mit der .NET Zip Library (SharpZipLib) abgeholfen werden - diese unterst&uuml;tzt sowohl das Zip als auch das GZip Format, ist gratis, und kommt
mit C# Code inklusive.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;13.11.2001</td><td class="news"><a href="../artikel/20011113.htm" class="newsitem">Sonderzeichen korrekt grabben mit XmlHttp</a><br />
Manches Mal kommt man sich als Entwickler f&uuml;r nicht-englische Sites leicht verlassen vor, da viel Software nur auf Englisch als Sprache ausgerichtet zu sein scheint. Und darunter f&auml;llt auch, da&szlig; in vielen F&auml;llen die von uns Deutschsprachigen so geliebten Sonderzeichen (Umlaute und dergleichen) des &ouml;fteren scheint's "verschluckt" werden - wie zum Beispiel beim Seitengrabbing mit der XmlHttp Komponente des MSXML Parsers.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;31.10.2001</td><td class="news"><a href="../artikel/20011031.htm" class="newsitem">Gegengifte f&uuml;r SQL Injection</a><br />
Im Artikel SQL Injection habe ich demonstriert, was darunter zu verstehen ist, und wie es funktioniert. Heute wollen wir uns die diversen Gegenstrategien ansehen, um SQL Injection in Zukunft zu verhindern. Darunter f&auml;llt wie schon im gestrigen Artikel erw&auml;hnt validieren, validieren, validieren und ein Umstellen des Codes auf nicht anf&auml;llige
Konstrukte.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.10.2001</td><td class="news"><a href="../artikel/20011030.htm" class="newsitem">SQL Injection</a><br />
Ein wie immer brillanter Michael Howard (Program Manager, Secure Windows Initiative, Microsoft Corporation) hat auf der Professional Developers Conference (PDC) 2001 in Los Angeles zwei Vortr&auml;ge &uuml;ber Sicherheit gehalten - 
einen &uuml;ber Windows-, den anderen &uuml;ber Websicherheit. Der letztere hat mich davon &uuml;berzeugt, wie wichtig es ist, Programmierer verst&auml;rkt &uuml;ber das Sicherheitsrisiko #1 f&uuml;r ASP Datenbankapplikationen zu informieren: SQL Injection.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.10.2001</td><td class="news"><a href="../artikel/20011010.htm" class="newsitem">Sprachenintegration in .NET</a><br />
Unter .NET sticht ein Feature besonders heraus - die Programmiersprachen setzen auf einem gemeinsamen Substrat auf, der Common Language Runtime (CLR). Dadurch wird eine Sprachintegration m&ouml;glich, die es zuvor nicht gab: Klassen,
die in Programmiersprache A entwickelt wurden, k&ouml;nnen in Programmiersprache B verwendet werden - und es kommt sogar besser: man kann &uuml;ber Sprachgrenzen Klassen voneinander ableiten!<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/dotNET%20Allgemein.htm">.NET Allgemein</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.10.2001</td><td class="news"><a href="../artikel/20011002.htm" class="newsitem">XTune Revisited</a><br />
Mit XTune wird das Einstellen von Performance-relevanten Parametern des Webserver und einzelner Websites erheblich erleichtert. Vor mehr als einem Jahr haben wir uns auf AspHeute bereits einmal mit dem XTune Tool besch&auml;ftigt, im Artikel <i>Webserver-Tuning mit XTune</i>. Damals war es die Version 1.0, heute werden wir uns die neu herausgegebene Version 2.0 ansehen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Optimierung.htm">Optimierung</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.10.2001</td><td class="news"><a href="../artikel/20011001.htm" class="newsitem">Bannerzwang</a><br />
Viele User die im Netz surfen verwenden sogenannte Banner-Blocker, mit denen Werbebanner abgeblockt werden - ein bekanntes Tool aus dieser Kategorie w&auml;re der WebWasher. Allerdings gibt es am Internet viele Websites, die ihre Inhalte zu einem guten Teil &uuml;ber Bannerwerbung auf ihren Seiten finanzieren. F&uuml;r diese Websites sind Tools wie der WebWasher wahrlich eine "Killerapplikation", da diese die Einnahmequelle effektiv herausfiltern.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.9.2001</td><td class="news"><a href="../artikel/20010924.htm" class="newsitem">Unknackbare Verschl&uuml;sselung mit Onetime Pads</a><br />
Im Zuge der Terrorangriffe auf das World Trade Center ist - wieder einmal - eine Debatte zur Rolle von Verschl&uuml;sselungstechnologien in der Kommunikation von Terroristen ins Laufen gekommen. Hauptaugenmerk wird in solchen Debatten immer auf sogenannte Hintert&uuml;ren (Backdoors) f&uuml;r die Regierungsbeh&ouml;rden in Verschl&uuml;sselungsalgorithmen gelegt. Allerdings entbehrt die gesamte Diskussion nicht einer gewissen L&auml;cherlichkeit: es gibt n&auml;mlich einen unknackbaren Verschl&uuml;sselungsalgorithmus<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;14.9.2001</td><td class="news"><a href="../artikel/20010914.htm" class="newsitem">PDF Dokumente suchbar machen</a><br />
Auf Firmenwebsites finden sich sehr oft Dokumente im Adobe Acrobat PDF (Portable Document Format) Format, da sich mit ihnen das Layout &uuml;ber verschiedenste Plattformen hinweg bewahren l&auml;&szlig;t, womit sie ideal f&uuml;r
Produktbeschreibungen oder Handb&uuml;cher sind. Wie aber schafft man es, dem Besucher der Website die Inhalte dieser Dokumente in einem Suchformular zur Verf&uuml;gung zu stellen?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;12.9.2001</td><td class="news"><a href="../artikel/20010912.htm" class="newsitem">SMS versenden in .NET</a><br />
Ein &auml;u&szlig;erst beliebtes Handyfeature ist heutzutage die SMS, oder in der Langform das Short Message System. Es gibt viele Websites am Netz, von wo aus man seine SMS gratis abschicken kann - meist Werbung mitinkludiert. Heute m&ouml;chte ich vorstellen, wie man SMS selbst versenden kann, und zwar mit Hilfe verschiedener Framework Klassen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.8.2001</td><td class="news"><a href="../artikel/20010803.htm" class="newsitem">Meta Tags von fremden Seiten parsen</a><br />
Mit diesem Artikel greife ich eine Frage aus der aspDEcoffeehouse Liste von AspGerman auf - wie kann man, wenn man eine Seite einer fremden Website als String vor sich hat, die Meta Tags daraus extrahieren, und dann mit den Namen/Werten weiterarbeiten? Wie bei den AspGerman Listen so &uuml;blich, gab es eine L&ouml;sung.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.8.2001</td><td class="news"><a href="../artikel/20010801.htm" class="newsitem">Smart Tags auf die Finger geschaut</a><br />
Das Smart Tags Feature des Internet Explorer 6 lie&szlig; die Wogen hoch gehen, vor allem, da dadurch "hinterr&uuml;cks" am Content einer Web Site herumgebastelt werden kann. Da nun einige Zeit seit dieser Debatte ins Land gegangen ist, sehen wir uns nun einmal genauer an, was Smart Tags sind, wie man sie verwendet, wie man sie abschaltet, und wie man eigene programmieren kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.7.2001</td><td class="news"><a href="../artikel/20010702.htm" class="newsitem">Asynchrone Programmierung mit Message Queues</a><br />
Ein Problem sowohl f&uuml;r Web Sites als auch "normale" Anwendungen sind externe "Komponenten", die entweder &uuml;ber eine langsame Verbindung angesprochen werden m&uuml;ssen, oder (sehr) lange zur Abarbeitung brauchen. Ist man nicht gezwungen auf das Resultat zu warten, kann man die Performance seiner Applikation enorm steigern: mit Message Queueing.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;27.6.2001</td><td class="news"><a href="../artikel/20010627.htm" class="newsitem">Session State in ASP.NET Web Services</a><br />
Wenn man Web Services in ASP.NET programmiert, dann bekommt man ein bequemes Feature frei Haus geliefert - man kann Session State verwenden, und zwar v&ouml;llig gleich zu normalen ASP.NET Seiten. Nur ein einziges Attribut mu&szlig; gesetzt werden, und schon kann man zB ein einfaches Loginsystem
f&uuml;r Web Services basteln.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.6.2001</td><td class="news"><a href="../artikel/20010625.htm" class="newsitem">Html Emails mit Dundas Mailer verschicken</a><br />
Emailkomponenten gibt es wie Sand am Meer - allerdings unterst&uuml;tzen nicht alle das Versenden von Html Emails, und wenn, dann kosten sie Geld, oder h&auml;ngen Werbung an jede Email an. Heute stelle ich Ihnen Dundas Mailer vor, das vollst&auml;ndig gratis ist, Html Emails mit eingebetteten Images verschicken kann, und keine Restriktionen in der Funktionalit&auml;t mit sich bringt.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;22.6.2001</td><td class="news"><a href="../artikel/20010622.htm" class="newsitem">Web Services in Anwendungen konsumieren</a><br />
Im Artikel "Web Services 101 in ASP.NET" habe ich gezeigt, wie einfach es ist, einen Web Service zu programmieren. Heute begeben wir uns auf die andere Seite der Front, n&auml;mlich auf die Kundenseite: wir wollen lernen, wie man einen Web Service anspricht und seine Funktionen aufruft - ihn "konsumiert".<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.6.2001</td><td class="news"><a href="../artikel/20010621.htm" class="newsitem">Web Services 101 in ASP.NET</a><br />
Das Simple Object Access Protocol (SOAP) ist als Protokoll f&uuml;r Web Services schon seit langer Zeit in aller Munde, allerdings fehlte bis jetzt unter IIS eine einfache Entwicklungsplattform, um Web Services zu programmieren. Diese haben
wir nun mit ASP.NET in der Hand, und ich werde Ihnen heute zeigen, wie leicht man Web Services in C# als auch VB.NET entwickeln kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Web%20Services.htm">Web Services</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.6.2001</td><td class="news"><a href="../artikel/20010619.htm" class="newsitem">Transaktionen in C# Business Tier Komponenten</a><br />
Im Laufe der Zeit hat man sich ja sozusagen die COM+ Applikationen (aka MTS Packages) angew&ouml;hnt, und zwar einerseits als Object Broker, und andererseits als Provider von Transaktionen &uuml;ber Komponentengrenzen
hinweg. Heute werde ich zeigen, da&szlig; das erworbene Wissen auch in .NET verwendbar ist - und die Anwendung sogar deutlich leichter geworden ist!<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.5.2001</td><td class="news"><a href="../artikel/20010530.htm" class="newsitem">Redirects mit Frame-Targets</a><br />
Eine der h&auml;ufigeren Fragen in den ASP Listen ist ob und wie man dem Befehl <i>Response.Redirect</i> ein Frame Target angeben kann. Die Antwort darauf ist nein, denn Frames sind ein clientseitiges Konzept, von dem ASP nichts wei&szlig;. Aber - was hindert uns, dem Client clientseitigen Code zu schicken, die gew&uuml;nschte Seite in einem anderen Frame zu laden?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.5.2001</td><td class="news"><a href="../artikel/20010528.htm" class="newsitem">Aber bitte mit Rijndael</a><br />
DES ist mittlerweile sehr in die Jahre gekommen, und die j&auml;hrlichen Challenges beweisen, da&szlig; die (Verschl&uuml;sselungs-)St&auml;rke von DES den heutigen Anforderungen an Sicherheit nicht mehr gewachsen ist. Daher wurde vom NIST eine Ausschreibung f&uuml;r den Nachfolger AES (Advanced Encryption Standard) gestartet, den der Algorithmus Rijndael gewann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.5.2001</td><td class="news"><a href="../artikel/20010523.htm" class="newsitem">ReportMagic f&uuml;r Analog</a><br />
Ich habe bereits im letzten Artikel gezeigt, da&szlig; Analog ein hervorragendes Tool zum Auswerten von Logfiles ist. Aber bei der visuellen Aufbereitung hapert es etwas. Dem kann aber abgeholfen werden - mit ReportMagic f&uuml;r Analog.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.5.2001</td><td class="news"><a href="../artikel/20010521.htm" class="newsitem">ASP-basierte Basic Authentication</a><br />
Die verschiedenen Authentifizierungsmethoden des IIS sollten zumindest grob bekannt sein: Integrated, Digest und Basic Authentication, absteigend gelistet nach ihrer sicherheitstechnischen Integration mit Windows NT. Alle haben eines gemeinsam - sie greifen f&uuml;r die Validierung der Benutzeraccounts auf NT Accounts durch. Heute wollen wir Basic Authentication dazu &uuml;berreden, unsere von NT unabh&auml;ngigen Accounts zu validieren.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.5.2001</td><td class="news"><a href="../artikel/20010517.htm" class="newsitem">Gratis Loganalyse mit Analog</a><br />
Das Auswerten von Logdateien erf&uuml;llt meist mehrerlei Zwecke: technisch, um die Site zu verbessern, sicherheitstechnisch, um Hack-Attacken zu finden, oder beancounter-m&auml;&szlig;ig, um dem Management zu vermitteln, wer auf die Website zugreift - und was er sich dabei ansieht, und so weiter. Es gibt viele Tools, allerdings kosten die meisten davon viel (oder sehr viel). Heute werden wir uns die Grundlagen eines Tools erarbeiten, das gratis ist: Analog.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;11.5.2001</td><td class="news"><a href="../artikel/20010511.htm" class="newsitem">Tabellenexistenz in Datenbanken &uuml;berpr&uuml;fen</a><br />
Im Normalfall wei&szlig; man, wenn man mit einer Datenbank arbeitet, welche Tabellen in ihr enthalten sind. Andererseits gibt es aber Anwendungsf&auml;lle, wo man erst zur Laufzeit auf eine Datenbank connected, und dann dynamisch herausfinden mu&szlig;, welche Tabellen es gibt, oder &uuml;berpr&uuml;fen mu&szlig;, ob eine spezielle Tabelle existiert.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;8.5.2001</td><td class="news"><a href="../artikel/20010508.htm" class="newsitem">Dateizugriff auf Netzlaufwerken</a><br />
Ein beliebtes Sorgenkind unter ASP Programmierern ist der Zugriff auf Dateien, die sich auf Netzlaufwerken (Shares) befinden. Der Grund der Probleme ist die NT Sicherheit, und heute werde ich Ans&auml;tze vorstellen, um den Zugriff auf Netzlaufwerke (a) zu erm&ouml;glichen, und (b) m&ouml;glichst sicher zu bewerkstelligen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.5.2001</td><td class="news"><a href="../artikel/20010504.htm" class="newsitem">Script-basierte IIS Administration</a><br />
Da&szlig; man den IIS mit dem Internet Services Manager administrieren kann, d&uuml;rfte jedem bekannt sein. Da&szlig; man allerdings die Administration auch mit Hilfe von ASP oder WSH Scripts bewerkstelligen kann - ohne funktionale Abstriche machen zu m&uuml;ssen - das wissen nur wenige.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.5.2001</td><td class="news"><a href="../artikel/20010502.htm" class="newsitem">Logfiles mit Access auswerten</a><br />
Das Auswerten von Logdateien ist eine wichtige Angelegenheit - man erf&auml;hrt nicht nur, woran die Kunden am meisten interessiert sind, sondern auch, wo sich Fehler in einer Website eingeschlichen haben als auch ob jemand versucht hat, die Website zu cracken. Es gibt sehr viel hervorragende Reportingsoftware, die aber die ad hoc Abfragem&ouml;glichkeit einer Datenbank vermissen lassen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.4.2001</td><td class="news"><a href="../artikel/20010425.htm" class="newsitem">ASP-basierte resumable Downloads</a><br />
Ein Feature des Internet Information Servers, das irgendwie eine "vergessene Perle" zu sein scheint ist das der resumable Downloads - einen Download an der Stelle weiterzumachen, an der er zuletzt abgebrochen hat/wurde. Zwar gilt dieses IIS Feature nur f&uuml;r statische Dateien, allerdings kann man auch ASP
resumable Downloads beibringen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.4.2001</td><td class="news"><a href="../artikel/20010423.htm" class="newsitem">Tracing in ASP</a><br />
Die M&ouml;glichkeiten f&uuml;r ein vern&uuml;nftiges Tracing unter ASP sind eingeschr&auml;nkt, da man sich mit Response.Write Statements entweder das Layout zerst&ouml;rt, oder im Falle von notwendigen Redirects &uuml;berhaupt gro&szlig;e Probleme bekommt. Man k&ouml;nnte also glauben, da&szlig; es keine coole L&ouml;sung gibt - aber schlie&szlig;lich hei&szlig;t glauben nicht wissen!<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.4.2001</td><td class="news"><a href="../artikel/20010419.htm" class="newsitem">Site&uuml;berwachung mit Scheduled Tasks</a><br />
Eine Website, die auch nur f&uuml;r kurze Zeit offline ist, kann in der heutigen Zeit
zu einem der gr&ouml;&szlig;ten Probleme f&uuml;r eine Firma werden. Deshalb sollte man seine Site &uuml;berwachen, und zwar m&ouml;glichst automatisch. Es gibt zwar viele Dienste, die Site&uuml;berwachung anbieten - aber warum nicht selber machen?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.4.2001</td><td class="news"><a href="../artikel/20010405.htm" class="newsitem">Komponente Y - welche Version bist Du?</a><br />
Als ASP Programmierer verwendet man Komponenten - ein Administrator installiert sie (&uuml;blicherweise). Meist geschieht der Aufruf der Komponente &uuml;ber ihre ProgID, die sehr selten Auskunft &uuml;ber die Version gibt. Noch viel seltener
erf&auml;hrt man, wo die Komponente gespeichert ist - was beim Aufsetzen oder Fehlersuchen hin und wieder hilfreich sein soll.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.4.2001</td><td class="news"><a href="../artikel/20010403.htm" class="newsitem">Objektbasierte Index Server Suche</a><br />
Das Abfragen von Index Server Katalogen mit den ber&uuml;hmt-ber&uuml;chtigten IDQ und HTX Dateien ist nicht unbedingt jedermann's Sache. Im heutigen Artikel stelle ich die Index Server Search Objects (IXSSO) vor, mit denen man bequem von ASP aus die Suche starten, und die Resultate als Recordsets geliefert bekommen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.3.2001</td><td class="news"><a href="../artikel/20010330.htm" class="newsitem">Passw&ouml;rter mit SHA1 absichern</a><br />
Da&szlig; man bestimmte Teile einer Website nur f&uuml;r authentifizierte Benutzer zug&auml;nglich macht, ist mittlerweile bereits ein &uuml;blicher Vorgang. Das Einloggen der Benutzer findet (meist) &uuml;ber ein ASP Formular statt, das nicht &uuml;ber SSL abgesichert ist - und dabei wird das Passwort im Klartext &uuml;ber das Netzwerk &uuml;bertragen - zur freien Entnahme sozusagen. Der heutige Artikel zeigt, wie man den potentiellen
Mitlesern die Arbeit erschweren kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.3.2001</td><td class="news"><a href="../artikel/20010328.htm" class="newsitem">Webpage-Grabbing mit dem XML Parser</a><br />
Das Grabben von Webinhalten von fremden Servern wird immer mehr zum Standardfeature einer Website - sei es um Wetterdaten einzubinden, Kreditkartendaten zu verifizieren, oder auch nur zur &Uuml;berwachung des eigenen Servers. Heute zeige ich eine M&ouml;glichkeit, wie man das Grabbing
gratis durchf&uuml;hren kann - mit dem Microsoft XML Parser.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.3.2001</td><td class="news"><a href="../artikel/20010326.htm" class="newsitem">Records z&auml;hlen mit Stored Procedures</a><br />
Eine Frage, die immer wieder auftaucht, ist: &quot;Wie viele Datens&auml;tze sind in meiner Tabelle gespeichert?&quot;. Die &uuml;bliche (und richtige) Antwort f&uuml;r SQL Server ist COUNT(*), allerdings wird das wiederkehrende implementieren irgendwann l&auml;stig - Zeit, das Ganze in einer Stored Procedure zu verpacken!<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;22.3.2001</td><td class="news"><a href="../artikel/20010322.htm" class="newsitem">In VB Komponenten auf ASP Objekte zugreifen (Variante 2)</a><br />
Wie im letzten Artikel versprochen, kommen wir heute nun zur zweiten Variante des Zugriffs auf die ASP-internen Objekte innerhalb von VB Komponenten - dem ObjectContext von COM+ (oder Microsoft Transaction Server [MTS], wenn Sie noch Windows NT 4.0 verwenden).<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;20.3.2001</td><td class="news"><a href="../artikel/20010320.htm" class="newsitem">In VB Komponenten auf ASP Objekte zugreifen (Variante 1)</a><br />
Wie aus dem Titel ersichtlich ist, kann man aus Komponenten generell (und im heutigen Artikel Visual Basic im speziellen) auf mehrere Arten und Weisen auf die ASP Objekte wie Request oder Response zugreifen. Heute bespreche ich den Einsatz der Page-Level Event Methoden...<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;8.3.2001</td><td class="news"><a href="../artikel/20010308.htm" class="newsitem">Der ADO Command Code Generator</a><br />
Heute werden wir uns ein n&uuml;tzliches Tool f&uuml;r ASP in ASP selbst basteln - eine Page, die uns anhand eines Connection Strings und dem Namen einer Stored Procedure den notwendigen ADO/ASP VBScript Code zum Aufruf automatisch generiert - den man dann nur noch kopieren, und in die 
eigene Seite einbauen mu&szlig;.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.3.2001</td><td class="news"><a href="../artikel/20010306.htm" class="newsitem">Dynamische Stylesheets</a><br />
Cascaded Stylesheets (CSS) erfreuen sich immer gr&ouml;&szlig;erer Beliebtheit f&uuml;r das Websitedesign. In den meisten F&auml;llen handelt es sich dabei um eine extern eingelinkte Datei mit der Endung .css, die die Definitionen f&uuml;r die Styles enth&auml;lt. Wer verbietet uns eigentlich, diese Endung auf .asp zu &auml;ndern?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;22.2.2001</td><td class="news"><a href="../artikel/20010222.htm" class="newsitem">Farbauswahl in HTML Formularen</a><br />
Die Basism&ouml;glichkeiten von HTML Formularen - Eingabefelder, Listboxen, usw. - erm&ouml;glichen zwar nette Formulare, aber bei einigen Tasks wird das schnell unintuitiv. Ein Beispiel ist die Auswahl von Farben: weder das Eintippen von Farbnamen oder Farbwerten, noch das Ausw&auml;hlen derselben in DropDown Boxen kann das "Point and Click" Erlebnis eines Farbselektors ersetzen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;20.2.2001</td><td class="news"><a href="../artikel/20010220.htm" class="newsitem">Applikationen aus ASP.NET ausf&uuml;hren</a><br />
Irgendwo gibt es immer eine kleine Kommandozeilenapplikation, die etwas kann, was keine Komponente kann. Und dann taucht die Frage auf, wie man dieses Programm aus ASP.NET heraus starten, und den Output dann weiterverwenden kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;15.2.2001</td><td class="news"><a href="../artikel/20010215.htm" class="newsitem">Enums lesbar machen</a><br />
Der heutige Artikel widmet sich einem Thema aus C#, das gerade bei der Entwicklung gr&ouml;&szlig;erer Projekte interessant werden k&ouml;nnte - dem Konvertieren von Enum Werten in "lesbare" Strings. Da das Ganze jetzt sehr abstrakt klingt, hier ein Beispiel..<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.2.2001</td><td class="news"><a href="../artikel/20010207.htm" class="newsitem">ASPForums 2.1 installieren und anpassen</a><br />
Die besten Dinge im Leben sind gratis - das stimmt zwar nicht, aber zumindest einige gute Software ist tats&auml;chlich gratis. So zum Beispiel ASPForums, das eine einfache, extrem konfigurierbare (Stichwort "Extremkonfiguriering") Forensoftware auf Basis von ASP darstellt.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;5.2.2001</td><td class="news"><a href="../artikel/20010205.htm" class="newsitem">GET oder POST, das ist hier die Frage</a><br />
Es ist zwar keine Gem&uuml;tsfrage, aber sehr wohl eine Frage des korrekten Programmierens, vor allem in Zeiten von Proxyservern. Heute widme ich mich den Unterschieden zwischen GET und POST, wann welche Spielart des HTTP Transfers zum Einsatz kommen sollte, und wie man zwischen diesen beiden unterscheiden kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;31.1.2001</td><td class="news"><a href="../artikel/20010131.htm" class="newsitem">Seiten weiterempfehlen leicht gemacht</a><br />
Heute besch&auml;ftigen wir uns mit einem Website-Feature, das man vor allem auf
Community Websites findet - das Weiterempfehlen von Seiten, im Englischen
unter dem Begriff "Tell-a-friend" gef&uuml;hrt. Dieser Artikel zeigt, wie's in ASP
leicht und dennoch wirksam implementiert werden kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.1.2001</td><td class="news"><a href="../artikel/20010130.htm" class="newsitem">Datens&auml;tze zuf&auml;llig sortieren</a><br />
Klingt komisch, ist es aber nicht. Oftmals m&ouml;chte man Datens&auml;tze einer Tabelle bei jedem Zugriff in unterschiedlicher Reihenfolge auslesen, um damit eine gewisse "Zuf&auml;lligkeit" in die Anordnung der Datens&auml;tze zu bekommen. Da es keine ORDER Clause "ORDER BY RAND" gibt, mu&szlig; man sich die L&ouml;sung selbst basteln.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.1.2001</td><td class="news"><a href="../artikel/20010126.htm" class="newsitem">Am Server installierte Schriftarten auslesen</a><br />
Im heutigen Artikel besch&auml;ftigen wir uns mit einem eher etwas "eigenartigem" Thema, n&auml;mlich dem Auslesen der am Web Server installierten Schriftarten. Dies ist n&auml;mlich ein gutes Thema um die N&uuml;tzlichkeit von C++ Kenntnissen zur Komponentenerstellung zu illustrieren.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.1.2001</td><td class="news"><a href="../artikel/20010123.htm" class="newsitem">Eine Eurokonvertierungskomponente in C# erstellen</a><br />
Die Einf&uuml;hrung des "angreifbaren" Eurogeldes r&uuml;ckt immer n&auml;her, und die doppelte Preisauszeichnung ist mittlerweile auch schon &uuml;berall zu sehen. Letztes Jahr haben wir uns bereits mit diesem Thema besch&auml;ftigt, allerdings haben wir damals eine bereits existierende Komponente verwendet. Heute werden wir diese Komponente mit C# nachprogrammieren - und zwar weil eine native .NET Komponente viel performanter ist als wenn man die existierende COM Komponente mit Interop in ASP.NET einbindet.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.11.2000</td><td class="news"><a href="../artikel/20001130.htm" class="newsitem">Bildinformationen selbst ermitteln</a><br />
Ein h&auml;ufiges Problem beim Upload von Bilddateien ist, da&szlig; die Gr&ouml;&szlig;e (Breite, H&ouml;he) nicht bekannt ist, und man sie selbst ermitteln mu&szlig;. Unter ASP kann man sich mit der Gratiskomponente
ImageSize von ServerObjects behelfen, die allerdings auf wenige (wichtige) Formate beschr&auml;nkt ist.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;27.11.2000</td><td class="news"><a href="../artikel/20001127.htm" class="newsitem">Datens&auml;tze mit dem DELETE Statement l&ouml;schen</a><br />
Im heutigen Artikel besch&auml;ftigen wir uns mit einem weiteren SQL Statement - dem DELETE Kommando. Mit diesem kann man einfach, schnell und bequem Datens&auml;tze aus einer Tabelle l&ouml;schen - und man &uuml;berl&auml;sst dabei die gesamte Arbeit der Datenbank.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.11.2000</td><td class="news"><a href="../artikel/20001124.htm" class="newsitem">Aktualisieren von Daten mit dem UPDATE Statement</a><br />
Daten in einer Datenbank kann man mit ADO auf zweierlei Arten ver&auml;ndern - einerseits durch Verwendung eines Recordsets mit der Update Methode, als auch mit dem UPDATE Statement und dem Execute Befehl des Connection Objekts. Meist ist UPDATE die schnellere Wahl, und was noch hinzukommt, die flexiblere
L&ouml;sung.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.11.2000</td><td class="news"><a href="../artikel/20001121.htm" class="newsitem">AutoCompletion f&uuml;r Web Formulare</a><br />
Heute habe ich mir erlaubt, ein Nicht-ASP Thema auszuw&auml;hlen, das jedoch sehr viel mit ASP Programmierung zu tun hat: das automatische Ausf&uuml;llen von Web Formularen mit Hilfe des AutoComplete Features von Internet Explorer 5.x.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Grundlagen.htm">ASP Grundlagen</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.11.2000</td><td class="news"><a href="../artikel/20001117.htm" class="newsitem">Einfaches XML-Auslesen in .NET</a><br />
Im heutigen Artikel m&ouml;chte ich Ihnen zeigen, wie einfach es in .NET geworden ist, mit XML zu arbeiten. Um einen Vergleich zu erhalten, habe ich mir zum Ziel gesetzt, den Code des Artikels "Auslesen von XML Dateien mit dem DOM" nachzubauen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/XML.htm">XML</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;15.11.2000</td><td class="news"><a href="../artikel/20001115.htm" class="newsitem">HTTP Komprimierung in IIS5</a><br />
Heute besch&auml;ftigen wir uns mit einem Feature des IIS 5, das wahrscheinlich kaum jemand kennt - HTTP Komprimierung. Dabei komprimiert IIS alle ausgehenden Dateien mit dem GZIP oder Deflate Algorithmus, was speziell f&uuml;r Bandbreiten-beengte Server mit viel statischem Inhalt einen enormen Geschwindigkeitsgewinn bringt (eine HTML Seite kann sehr gut komprimiert werden).<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Optimierung.htm">Optimierung</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;13.11.2000</td><td class="news"><a href="../artikel/20001113.htm" class="newsitem">Eine simple UNZIP-Komponente programmieren</a><br />
Im heutigen Artikel werden wir uns eine einfache Unzip Komponente selbst programmieren - mit Hilfe von frei erh&auml;ltlichen Klassen-Bibliotheken und Visual C++. Selbst wenn man nicht daran interessiert ist, die vorgestellte Komponente zu erweitern - der Download enth&auml;lt die fertige Komponente, die man nur noch am eigenen Server registrieren mu&szlig;!<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.11.2000</td><td class="news"><a href="../artikel/20001109.htm" class="newsitem">Verzeichnissicherheit mit NTFS und IIS Authentifizierung</a><br />
Ger&uuml;chteweise habe ich geh&ouml;rt, da&szlig; Firmen hin und wieder den Zugang zu bestimmten Bereichen Ihrer Website absichern m&ouml;chten. Um dies umzusetzen, bietet der Internet Information Server zusammen mit Windows NT/2000 einiges an Verzeichnissicherheit. Und diese Unterst&uuml;tzung ist dergestalt, da&szlig; man als ASP Programmierer mitbekommt, wer gerade berechtigterma&szlig;en auf der Seite "surft".<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;8.11.2000</td><td class="news"><a href="../artikel/20001108.htm" class="newsitem">SQL Server Objekte scripten</a><br />
Im heutigen Artikel besch&auml;ftigen wir uns damit, wie man von existierenden Objekten in SQL Server Datenbanken ein Script erstellen kann, das man dann auf einem anderen Server verwenden kann, um idente Objekte zu erstellen (Schema, nicht Daten). Dazu werde ich zwei Wege beschreiben - der interaktive Weg &uuml;ber den Enterprise Manager, als auch wie man es programmatisch erledigen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.10.2000</td><td class="news"><a href="../artikel/20001025.htm" class="newsitem">Die Performancefalle ReDim Preserve</a><br />
Wer mit Arrays in VB arbeitet, dem wird auch das ReDim Statement zum Ver&auml;ndern der Gr&ouml;&szlig;e eines Arrays nicht unbekannt sein. Heute werde ich Ihnen ausf&uuml;hrlich darlegen, warum Sie dieses Statement in Zukunft besser nicht mehr, oder nur noch sehr, sehr selten einsetzen sollten.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/VBdotNET.htm">VB.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.10.2000</td><td class="news"><a href="../artikel/20001019.htm" class="newsitem">Sichere Konvertierungen von Referenztypen</a><br />
Ein Thema, das sich immer wieder als problematisch f&uuml;r Einsteiger herausstellt, ist das Konvertieren ("Casten") von Referenztypen (aka Objekten). Unter C++ konnte man damit sehr viel Unheil anstellen, was einem zum Gl&uuml;ck mit C# nicht passieren kann. Trotz oder gerade wegen der Typsicherheit der Sprache sollte man sich mit den verschiedenen Techniken vertraut machen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.10.2000</td><td class="news"><a href="../artikel/20001009.htm" class="newsitem">Das Versenden von Emails selbst programmieren</a><br />
Emailkomponenten gibt es (beinahe) soviele wie Sand am Meer, und viele davon sind sogar gratis. Verwendet hat sie bestimmt schon (beinahe) jeder, sei es jetzt AspMail, CDONTS, SA-SmtpMail oder eine der vielen anderen. Etwas, das aber bestimmt (beinahe) keiner bis jetzt gemacht hat, ist sich eine Emailkomponente selbst zu programmieren.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.10.2000</td><td class="news"><a href="../artikel/20001006.htm" class="newsitem">Tracing in ASP.NET</a><br />
Wer hat nicht schon einmal zu Debuggingzwecken das Response.Write Statement verwendet, um sich SQL Strings, Servervariablen, Variablenwerte und Rechenergebnisse auszugeben? Meistens hat man sich dadurch das Layout (kurzfristig) zerst&ouml;rt, und man mu&szlig;te die Statements sp&auml;ter wieder l&ouml;schen oder auskommentieren. Mit der Tracing Funktionalit&auml;t von ASP.NET kann man Debugmeldungen ausgeben oder die Zeit eines Scripts timen - und das, ohne zwischen Test- und Releaseversion einer ASP.NET Seite Unterschiede machen zu m&uuml;ssen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.9.2000</td><td class="news"><a href="../artikel/20000929.htm" class="newsitem">Dateien lesen in ASP.NET</a><br />
Im Artikel "Directory Browsing a la .NET" haben wir uns bereits das erste Mal mit dem System.IO Namespace vertraut gemacht. Heute werden wir uns mit den Inhalten der Dateien besch&auml;ftigen, und zwar wie man Dateien ausliest. Und das sowohl f&uuml;r Textdateien als auch Bin&auml;rdateien.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.9.2000</td><td class="news"><a href="../artikel/20000926.htm" class="newsitem">Collections einmal anders: Stacks und Queues</a><br />
Unter ASP wurden wir mit Collections ziemlich kurz gehalten - es gab nur das Scripting.Dictionary. Die Zeiten haben sich allerdings ge&auml;ndert, und ASP.NET bietet uns Implementationen f&uuml;r first in, first out Collections als auch first in, last out Collections: Queues (FIFO) und Stacks.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.9.2000</td><td class="news"><a href="../artikel/20000925.htm" class="newsitem">Services &uuml;ber das Web managen</a><br />
Im heutigen Artikel besch&auml;ftigen wir uns mit den Grundlagen des Arbeitens mit Windows Services - etwas, das definitiv wert ist, administriert zu werden. Dazu verwenden wir wieder einmal ASP.NET und das .NET Framework SDK. Apropos: ausnahmsweise g&auml;be es auch f&uuml;r ASP einen Weg, um an einer
eigenen Komponente vorbeizukommen: WMI, Windows Management Instrumentation.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;18.9.2000</td><td class="news"><a href="../artikel/20000918.htm" class="newsitem">Emails mit ASP.NET versenden</a><br />
Etwas, das sich heutzutage auf jeder Website findet, ist ein Email-Anfrageformular. Das wird sich wahrscheinlich auch nicht so schnell &auml;ndern, deswegen werde ich heute vorstellen, wie man Emails in ASP.NET verschickt: von ganz einfach bis hin zu HTML Mails und Attachments.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.8.2000</td><td class="news"><a href="../artikel/20000828.htm" class="newsitem">Verwenden von COM Komponenten in ASP.NET</a><br />
Im heutigen Artikel besch&auml;ftige ich mich mit einem Thema, das sehr viele ASP.NET Umsteiger interessieren wird: wie kann ich meine gekauften oder selbst erstellten COM Komponenten in der ASP.NET Umgebung einsetzen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.8.2000</td><td class="news"><a href="../artikel/20000825.htm" class="newsitem">WHOIS Abfragen a la .NET</a><br />
Des &ouml;fteren m&ouml;chte man wissen, wem eine Domain geh&ouml;rt. Um an diese Informationen zu kommen, geht man zur entsprechenden Registry (DENIC, Network Solutions, etc), und macht dort eine sogenannte WHOIS Abfrage (Lookup). Der Haken an der Sache ist halt der, da&szlig; man wissen mu&szlig;, welche Registry f&uuml;r welche TLD's (Top Level Domain) zust&auml;ndig ist.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.8.2000</td><td class="news"><a href="../artikel/20000824.htm" class="newsitem">Scrapen von Webseiten</a><br />
In Webanwendungen ist es mittlerweile immer &ouml;fter n&ouml;tig, w&auml;hrend der Abarbeitung einer Seite auf Informationen von anderen Sites zuzugreifen: zum Beispiel f&uuml;r Kreditkartenautorisierung, aktuelle Wetterwerte abholen (und in das eigene Seitendesign einbauen), und vieles mehr.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;23.8.2000</td><td class="news"><a href="../artikel/20000823.htm" class="newsitem">Die Hashtable Klasse</a><br />
Neben Arrays f&uuml;r Elementzugriff via Index konnte man in VBScript mit Hilfe der Dictionary Komponente den Elementzugriff mittels Schl&uuml;ssels (Key) bewerkstelligen. Mit ASP.NET und dem .NET Framework kommen etliche neue Collection Klassen. Unter anderem mit dabei ist die Hashtable Klasse, die einige neue (hilfreiche) Funktionen mitbringt.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;21.8.2000</td><td class="news"><a href="../artikel/20000821.htm" class="newsitem">Streams in NTFS Dateien</a><br />
Im heutigen Artikel m&ouml;chte ich etwas in die Untiefen von NTFS (NT File System) abtauchen, und ein interessantes Feature besprechen: Streams. Zuerst werde ich mich mit den Grundlagen besch&auml;ftigen, und dann Beispiele bringen, wie man in Streams schreibt, und Daten aus Streams ausliest.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;11.8.2000</td><td class="news"><a href="../artikel/20000811.htm" class="newsitem">Ausgabe der Event Log Eintr&auml;ge a la ASP.NET</a><br />
Das Event Log unter Windows 2000 ist so ziemlich die wichtigste Informationsquelle
f&uuml;r einen Administrator - weil dort s&auml;mtliche vorgefallenen Ereignisse vom Erfolg bis zum katastrophalen Mi&szlig;erfolg vermerkt sind. Und da es so wichtig, was liegt n&auml;her als diese Informationen &uuml;ber das Web anzeigbar zu machen?<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.8.2000</td><td class="news"><a href="../artikel/20000809.htm" class="newsitem">Performance Monitoring a la .NET</a><br />
Im heutigen Artikel werde ich Ihnen zeigen, um wieviel einfacher es in ASP.NET unter Zuhilfenahme des .NET Frameworks ist, Performance Counter auszulesen und auszuwerten. Man kann sogar Teile des NT Performance Monitors nachbauen, ohne wirklich viel Zeit daf&uuml;r aufwenden zu m&uuml;ssen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.8.2000</td><td class="news"><a href="../artikel/20000804.htm" class="newsitem">Directory Browsing a la .NET</a><br />
Mit den .NET Framework Klassen im System.IO Namespace erf&uuml;llen sich alle W&uuml;nsche, die man an das FileSystemObject Objekt so gehabt h&auml;tte. In diesem ersten Artikel &uuml;ber Dateibearbeitung besch&auml;ftige ich mich mit dem Task des Auflisten von Dateien und Ordnern.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.8.2000</td><td class="news"><a href="../artikel/20000802.htm" class="newsitem">Dateiupload mit ASP.NET</a><br />
Etwas das unter ASP ohne Fremdkomponente nicht vern&uuml;nftig m&ouml;glich war ist das Uploaden von Dateien auf einen Webserver, obwohl die Verwendungsm&ouml;glichkeiten dieses Features vielf&auml;ltigst sind. ASP.NET bietet diese Funktionalit&auml;t mit einer HTML Control names HtmlInputFile, die dem Programmierer ein leistungsf&auml;higes aber einfaches Programmieren erm&ouml;glicht.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;1.8.2000</td><td class="news"><a href="../artikel/20000801.htm" class="newsitem">Eine IP Adresse f&uuml;r mehrere Websites</a><br />
IP Adressen sind - zumindest f&uuml;r IPv4 - eine zur Neige gehende Resource. Dadurch ist man auch am Webserver manchmal gezwungen, mehrere Websites &uuml;ber eine einzige IP Adresse zu bedienen. Ein anderer Grund f&uuml;r mehrere Websites per IP Adresse w&auml;re, da&szlig; man einen Account bei einem ISP mit mehreren Sites besser auslasten m&ouml;chte.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.7.2000</td><td class="news"><a href="../artikel/20000728.htm" class="newsitem">On-the-fly Generierung von Graphiken</a><br />
Etwas, das f&uuml;r ASP Programmierer ohne Unterst&uuml;tzung einer Komponente nicht machbar ist, ist das dynamische Erstellen von Graphiken - und sei es nur ein einfacher graphischer Counter. Dem ist unter ASP.NET gl&uuml;cklicherweise nicht mehr so - mit einfachsten Bordmitteln kann man dynamisch Graphiken erstellen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.7.2000</td><td class="news"><a href="../artikel/20000724.htm" class="newsitem">Exception Handling in C#</a><br />
Ich nehme an, da&szlig; jeder VBScript Programmierer schon mindestens einmal die sehr eingeschr&auml;nkten M&ouml;glichkeiten der Fehlerbehandlung in das Land des Pfeffers gewunschen hat - ein einfaches On Error Resume Next ist nun wirklich nicht gerade das, was man unter zeitgem&auml;&szlig;er Fehlerbehandlung
verstehen sollte.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;20.7.2000</td><td class="news"><a href="../artikel/20000720.htm" class="newsitem">Das foreach Statement</a><br />
F&uuml;r VBScript Programmierer ist das foreach Statement ein alter Bekannter, unter einen anderen Namen: For...Each. In diesem Artikel betrachten wir die Unterschiede (VBScript vs C#), vor allem bei der Abarbeitung der ServerVariables und QueryString Collections.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.7.2000</td><td class="news"><a href="../artikel/20000717.htm" class="newsitem">Schleifenbefehle in C#</a><br />
Im heutigen Artikel befassen wir uns mit den Schleifenbefehlen von C#: for, while und do. Wie im letzten C# Artikel  werde ich die Unterschiede zu VBScript herausarbeiten.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;14.7.2000</td><td class="news"><a href="../artikel/20000714.htm" class="newsitem">Kontrollstatements in C#</a><br />
In diesem Artikel m&ouml;chte ich die beiden C# Kontrollstatements if und switch vorstellen, und zwar mit besonderem Fokus darauf, was man als VBScript Programmierer beachten mu&szlig;, um nicht in Fallen zu tappen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;13.7.2000</td><td class="news"><a href="../artikel/20000713.htm" class="newsitem">A Brief History of C#</a><br />
Ein wichtiger Bestandteil des Microsoft .NET Frameworks ist die Programmiersprache C# (sprich "C Sharp"). Diese Programmiersprache wurde von Grund auf f&uuml;r die Common Language Runtime designed, und kommt von der Windows Anwendungsentwicklung bis hin zur ASP.NET Programmierung zum Einsatz.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Csharp.htm">C#</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;12.7.2000</td><td class="news"><a href="../artikel/20000712.htm" class="newsitem">Was ist neu in ASP.NET</a><br />
Willkommen zu einem Kurzbericht von der High-Tech Front - was gibt es Neues in ASP.NET? In diesem Artikel erfahren Sie in komprimierter Form, was Sie von ASP.NET erwarten k&ouml;nnen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASPdotNET.htm">ASP.NET</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.7.2000</td><td class="news"><a href="../artikel/20000703.htm" class="newsitem">SQL Server 2000 Volltextsuche</a><br />
Wer kennt das Problem nicht - man soll in einer Tabelle suchen, und zwar nach Textfragmenten. Solange es nur eine Spalte ist, &uuml;ber die gesucht werden soll, kann man sich ja noch mehr oder minder elegant mit LIKE und dem Prozentzeichen &uuml;ber die Runden retten...<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.6.2000</td><td class="news"><a href="../artikel/20000630.htm" class="newsitem">Verwendung von SSL Test-Certificates</a><br />
Sie entwickeln gerade eine eCommerce Site f&uuml;r einen Kunden, und der Shop soll nat&uuml;rlich mit SSL (Secure Socket Layer) abgesichert werden. Dieser Artikel zeigt alle Schritte - von der Generierung des Certificate Antrags, Abholen des Certificates und anschlie&szlig;endem Installieren.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;29.6.2000</td><td class="news"><a href="../artikel/20000629.htm" class="newsitem">Automatisation mit SQL Server</a><br />
In vorangegangenen Artikeln haben wir bereits gesehen, wie man mit Hilfe verschiedener Werkzeuge ASP Seiten automatisch ablaufen lassen kann. Dabei haben wir bis jetzt eine sehr m&auml;chtige Job-Engine nicht betrachtet - den SQL Server Agent.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.6.2000</td><td class="news"><a href="../artikel/20000628.htm" class="newsitem">Kreditkarten&uuml;berpr&uuml;fung mit ASP</a><br />
Eines der wichtigsten Dinge, die man f&uuml;r eine eCommerce Site ben&ouml;tigt ist die Validierung der eingegebenen Kreditkartennummern. Das Sch&ouml;ne an Kreditkartennummern ist, da&szlig; sie mathematisch in ihrer G&uuml;ltigkeit berechenbar sind.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;27.6.2000</td><td class="news"><a href="../artikel/20000627.htm" class="newsitem">Einf&uuml;hrung in Data Shaping mit ADO</a><br />
Wer kennt das Szenario nicht, wo man zu einem Datensatz aus einer Mastertabelle die entsprechenden Datens&auml;tze aus der Kindtabelle abholen mu&szlig; - so zum Beispiel alle Bestellungen eines Kunden. Das ist nat&uuml;rlich nur eines der vielen Szenarien die auf Fremdschl&uuml;sselbeziehungen aufbauen k&ouml;nnen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;26.6.2000</td><td class="news"><a href="../artikel/20000626.htm" class="newsitem">Tabellenerstellung mit ADOX</a><br />
Normalerweise erstellt man sich eine Access Datenbank direkt in MS Access um sie dann in ASP Seiten zu verwenden. Sehr wenige wissen allerdings, da&szlig; man diese Tabellenerstellung (als auch Datenbankerstellung) ohne MS Access abwicklen kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;25.5.2000</td><td class="news"><a href="../artikel/20000525.htm" class="newsitem">Access Abfragen in ADO verwenden</a><br />
Es gibt in MS Access Datenbanken Abfragen, die eine Mixtur aus SQL Server Views und Stored Procedures darstellen: Wenn man keine Parameter definiert, ist es mit einer View vergleichbar. Hat man Parameter festgelegt, dann hat man ein &Auml;quivalent zu Stored Procedures.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;24.5.2000</td><td class="news"><a href="../artikel/20000524.htm" class="newsitem">Arbeiten mit Index Server Catalogs</a><br />
Wenn eine Website aus mehrheitlich statischen Seiten besteht - so wie AspHeute - dann bietet es sich an, den mit IIS gelieferten Index Server zu verwenden, um die Site f&uuml;r Besucher suchbar zu machen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;12.5.2000</td><td class="news"><a href="../artikel/20000512.htm" class="newsitem">ASP-Fehlerbehandlung unter IIS5</a><br />
Mit IIS4 waren die M&ouml;glichkeiten der Fehlerbehandlung nur eingeschr&auml;nkt vorhanden. Unter IIS5 gibt es jetzt die M&ouml;glichkeit, von ASP ausgel&ouml;ste Fehler zentral in einer Datei abzuhandlen. Der Schl&uuml;ssel dazu ist der HTTP Status Code 500.100.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.5.2000</td><td class="news"><a href="../artikel/20000510.htm" class="newsitem">ASP Scripts verschl&uuml;sseln</a><br />
Der Schutz geistigen Eigentums (Urheberrecht) ist besonders am Internet ein sehr hei&szlig;es Thema. Und wir als ASP Programmierer sind mitbetroffen - unsere Scripts sind f&uuml;r jedermann lesbar, der Zugriff auf die lokale Festplatte hat.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Sicherheit.htm">Sicherheit</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.5.2000</td><td class="news"><a href="../artikel/20000509.htm" class="newsitem">Serverseitige Redirects mit IIS5</a><br />
Mit IIS 5 unter Windows 2000 sind 2 neue Methoden f&uuml;r serverseitige Redirects eingebaut worden: Server.Transfer (funktioniert im Prinzip wie das altbekannte GoTo Statement), sowie Server.Execute (vergleichbar mit dem Aufruf einer Prozedur).<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;8.5.2000</td><td class="news"><a href="../artikel/20000508.htm" class="newsitem">Erstellen eines HTTP Test Tools</a><br />
Das Testen einer Website mit verschiedenen Browsern geh&ouml;rt zum Alltag eines Webentwicklers. Mit Browsertests alleine kann man allerdings nicht alle Details der Verbindung Web Server und Client manipulieren, was f&uuml;r Sicherheits- und Stabilit&auml;tstests wichtig sein kann.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Server.htm">Server</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;2.5.2000</td><td class="news"><a href="../artikel/20000502.htm" class="newsitem">Monitoring von ASP</a><br />
Performance Monitoring ist ein weiterer Baustein am Weg zu einer erfolgreichen Website. Heute wendet sich der Autor dem Active Server Pages Performance Counter Objekt zu, das spezielle Informationen &uuml;ber ASP zu Tage f&ouml;rdert.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Optimierung.htm">Optimierung</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.4.2000</td><td class="news"><a href="../artikel/20000428.htm" class="newsitem">Einf&uuml;hrung in Performance Monitoring</a><br />
Die eigenen ASP Seiten auf Geschwindigkeit zu optimieren, ist der erste Schritt zu einer Website, die viele gleichzeitige Benutzer bedienen kann. Allerdings kann auch noch so gut optimierter ASP Code den Server bis an seine Grenzen ausreizen - dieser Artikel zeigt, wie man diese Grenzen entdeckt, bevor die Kunden es tun.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Optimierung.htm">Optimierung</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;17.4.2000</td><td class="news"><a href="../artikel/20000417.htm" class="newsitem">Auslesen von XML Dateien mit dem DOM</a><br />
XML Dateien eignen sich hervorragend dazu, um Daten zu formatieren - aber weniger, diese so formatierten Daten dem XML-unbedarften Websurfer direkt anzuzeigen. Um XML am Server auslesen und als HTML formatiert zum Kunden schicken zu k&ouml;nnen, gibt es den XML Parser und das DOM...<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/XML.htm">XML</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;7.4.2000</td><td class="news"><a href="../artikel/20000407.htm" class="newsitem">XML Data Islands</a><br />
In Internet Explorer k&ouml;nnen verschiedenste Data Source Objects (DSO) eingebunden werden, und ein komponentenunabh&auml;ngiges DSO ist das XML Data Island. In Zusammenhang mit serverseitigem ASP/ADO Code kann man so Intranetanwendungen geschwindigkeitsm&auml;&szlig;ig auf die Spr&uuml;nge helfen.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/XML.htm">XML</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;4.4.2000</td><td class="news"><a href="../artikel/20000404.htm" class="newsitem">Ein G&auml;stebuch in ASP erstellen - Teil 3</a><br />
Im letzten Teil der Artikelserie geht es um die Administration des G&auml;stebuchs. Der Autor zeigt, wie man Formulare zur Wartung (editieren und l&ouml;schen) erstellt, sowie den Zutritt zu diesen Wartungsseiten nur f&uuml;r berechtigte Personen absichert.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;3.4.2000</td><td class="news"><a href="../artikel/20000403.htm" class="newsitem">Ein G&auml;stebuch in ASP erstellen - Teil 2</a><br />
Im zweiten Artikel erkl&auml;rt der Autor, wie man die Eintr&auml;ge des G&auml;stebuchs pr&auml;sentiert - und zwar getrimmt auf h&ouml;chste Geschwindigkeit. Paging einmal anders...<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;31.3.2000</td><td class="news"><a href="../artikel/20000331.htm" class="newsitem">Ein G&auml;stebuch in ASP erstellen - Teil 1</a><br />
Willkommen zum ersten Artikel aus einer Serie von drei, in deren Rahmen sie ein vollst&auml;ndiges G&auml;stebuch mit ASP und ADO erstellen. Im ersten Teil erstellen sie das Eingabeformular und die Datenbank, und speichern einen neuen Eintrag in die Datenbank<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Datenbank.htm">Datenbank</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;30.3.2000</td><td class="news"><a href="../artikel/20000330.htm" class="newsitem">Downloads per Email verschicken</a><br />
Wenn eine Firma Dateien zum Download anbietet, dann tut Sie dies f&uuml;r Benutzer, die sich die Datei sofort lokal abspeichern k&ouml;nnen. Nur wenige aber bieten an, da&szlig; sich der Kunde das Programm emailen kann (z.B. weil er gerade an einem &ouml;ffentlichen Terminal sitzt), um es sp&auml;ter am eigenen Rechner sofort zur Verf&uuml;gung zu haben.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;19.9.1999</td><td class="news"><a href="../artikel/19990919.htm" class="newsitem">Geschwindigkeitsmessungen in ASP</a><br />
Nur eine Geschwindigkeitsmessung kann genauen Aufschlu&szlig; &uuml;ber die Performance verschiedener L&ouml;sungsans&auml;tze bringen. Gef&uuml;hlsm&auml;&szlig;ige Entscheidungen sind meist falsch.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Optimierung.htm">Optimierung</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;28.8.1999</td><td class="news"><a href="../artikel/19990828.htm" class="newsitem">Windows Script Components</a><br />
Eine Neueinf&uuml;hrung mit VBScript 5 (eigentlich den ganzen v5 Scriptengines) sind die Windows Script Components (WSC). Komponenten auf Basis einer Scriptsprache.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;27.8.1999</td><td class="news"><a href="../artikel/19990827.htm" class="newsitem">Preisauszeichnung in Euro mit ASP</a><br />
Mit der Einf&uuml;hrung des Euro m&uuml;ssen nun Produkte doppelt ausgezeichnet werden, einmal in Landesw&auml;hrung, und auch in Euro.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;10.8.1999</td><td class="news"><a href="../artikel/19990810.htm" class="newsitem">Installation/Upgrade von Komponenten</a><br />
Wie installiert, deinstalliert oder upgradet man Komponenten korrekt auf einem Web server.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;9.8.1999</td><td class="news"><a href="../artikel/19990809.htm" class="newsitem">Email versenden mit AspMail</a><br />
Das ber&uuml;hmt-ber&uuml;chtigte "Anfrageformular" kommt auf (fast) jeder Internetsite vor, und wird meist so gel&ouml;st, da&szlig; an die zust&auml;ndige Personen eine Email mit den vom User eingegeben Formularwerten abgeschickt wird.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/Komponenten.htm">Komponenten</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr><tr valign="top"><td width="80" class="date">&nbsp;&nbsp;6.8.1999</td><td class="news"><a href="../artikel/19990806.htm" class="newsitem">Das Dictionary Objekt - Dein Feind und Helfer</a><br />
Eine Komponente, die allgemein sehr gerne übersehen wird, ist das Dictionary Objekt. Es kann allerdings sehr gewinnbringend auf einer Website eingesetzt werden.<br>&nbsp;<SPAN class="content">Kategorie: <a href="../kategorien/ASP%20Tricks.htm">ASP Tricks</a></SPAN><br></td><td background="../images/layout/aspheuteside.gif"><img src="../images/layout/blind.gif" width=20 height=1></td></tr></TABLE>

&nbsp;<P>
<center>
<p><table><tr></tr></table></p>
</center>

<center>
<p class="content">
&copy;2000-2006 <A HREF="../service/copyright.htm" title="Copyright Informationen">AspHeute.com</A><br>
Alle Rechte vorbehalten. Der Inhalt dieser Seiten ist urheberrechtlich gesch&uuml;tzt.<br>
Eine &Uuml;bernahme von Texten (auch nur auszugsweise) oder Graphiken bedarf unserer schriftlichen Zustimmung.
<hr>
</p>
</center>

</td>
</tr><!--Tabelle aussen, 2/2-->
</table><!--Tabelle aussen-->
</div>

</BODY>
</HTML>
